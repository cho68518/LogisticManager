DELIMITER $$

DROP PROCEDURE IF EXISTS sp_Check01$$

CREATE PROCEDURE sp_Check01()
BEGIN
    /*--================================================================================
	-- 데이타 체크
    --================================================================================*/
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS CONDITION 1
            @sqlstate = RETURNED_SQLSTATE,
            @errno    = MYSQL_ERRNO,
            @text     = MESSAGE_TEXT;

        ROLLBACK;

        INSERT INTO error_log (procedure_name, error_code, error_message)
        VALUES ('sp_Check01', @errno, @text);

        DROP TEMPORARY TABLE IF EXISTS sp_execution_log, temp_sorted_data;
        SELECT '오류가 발생하여 모든 작업이 롤백되었습니다.' AS MYSQL_ERRNO;

        SHOW ERRORS;
    END;
    
	START TRANSACTION;

	UPDATE 원본송장
    SET 
        주소 = CASE
                 WHEN 주소 LIKE '%·%' THEN 
                     CASE
                         WHEN 품목코드 IN ('7710', '7720') THEN CONCAT(REPLACE(주소, '·', ''), '*')
                         ELSE REPLACE(주소, '·', '')
                     END
                 WHEN 품목코드 IN ('7710', '7720') THEN CONCAT(주소, '*')
                 ELSE 주소
             END,
        송장명 = CASE
                    WHEN LEFT(송장명, 3) = 'BS_' THEN CONCAT('GC_', SUBSTRING(송장명, 4))
                    ELSE 송장명
                END,
        수취인명 = CASE
                     WHEN 수취인명 = 'nan' THEN '난난'
                     ELSE 수취인명
                 END,
        결제수단 = CASE
                     WHEN 쇼핑몰 = '배민상회' THEN '0'
                     ELSE 결제수단
                 END
    WHERE
        품목코드 IN ('7710', '7720')
        OR LEFT(송장명, 3) = 'BS_'
        OR 수취인명 = 'nan'
        OR 주소 LIKE '%·%'
        OR 쇼핑몰 = '배민상회';
		
	UPDATE 원본송장
    SET 
        비고1 =  CASE
                 WHEN 주소 LIKE '%·%' THEN 
                     CASE
                         WHEN 품목코드 IN ('7710', '7720') THEN CONCAT(비고1, '[주소에.제거]')
                     END
                 WHEN 품목코드 IN ('7710', '7720') THEN CONCAT(비고1, '[품목코드로 인해서 주소뒤에 *추가]')
                 ELSE 주소
                 END,
        비고1 = CASE
                    WHEN LEFT(송장명, 3) = 'BS_' THEN CONCAT(비고1, '[BS_->_GC변경]')
                    ELSE 송장명
                END,
        비고1 = CASE
                     WHEN 수취인명 = 'nan' THEN CONCAT(비고1, '[nan]')
                     ELSE 수취인명
                 END,
        비고1 = CASE
                     WHEN 쇼핑몰 = '배민상회' THEN CONCAT(비고1, '배민상회,결제수단0')
                     ELSE ''
                 END
    WHERE
        품목코드 IN ('7710', '7720')
        OR LEFT(송장명, 3) = 'BS_'
        OR 수취인명 = 'nan'
        OR 주소 LIKE '%·%'
        OR 쇼핑몰 = '배민상회';
		
		
		
		
    /*--================================================================================
	-- 2. 합포장 처리
    --================================================================================*/
	UPDATE 원본송장 dev
	JOIN 송장출력_특수출력_합포장변경 spec
	  ON dev.품목코드 = spec.품목코드
	SET
	  dev.비고1 = CONCAT(비고1, '[', dev.주문번호,'(대체코드1(', spec.대체코드1, '))]')
	WHERE
	  spec.대체코드1 IS NOT NULL AND spec.대체코드1 != '';

  	UPDATE 원본송장 dev
	JOIN 송장출력_특수출력_합포장변경 spec
	  ON dev.품목코드 = spec.품목코드
	SET
	  dev.비고1 = CONCAT(비고1, '[', dev.주문번호,'(대체코드2(', spec.대체코드2, '))]')
	WHERE
	  spec.대체코드2 IS NOT NULL AND spec.대체코드2 != '';

	UPDATE 원본송장 dev
	JOIN 송장출력_특수출력_합포장변경 spec
	  ON dev.품목코드 = spec.품목코드
	SET
	  dev.비고1 = CONCAT(비고1, '[', dev.주문번호,'(대체코드3(', spec.대체코드3, '))]')
	WHERE
	  spec.대체코드3 IS NOT NULL AND spec.대체코드3 != '';

	UPDATE 원본송장 dev
	JOIN 송장출력_특수출력_합포장변경 spec
	  ON dev.품목코드 = spec.품목코드
	SET
	  dev.비고1 = CONCAT(비고1, '[', dev.주문번호,'(대체코드4(', spec.대체코드4, '))]')
	WHERE
	  spec.대체코드4 IS NOT NULL AND spec.대체코드4 != '';

    -- 대체코드1이 있는 데이터 처리
    INSERT INTO 원본송장 (
        msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 택배비용, 전화번호1, 전화번호2, 우편번호, 주소,
        수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 
        품목코드, 옵션명, 박스크기, 출력개수, 송장수량, 
        별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산,
        송장구분자, 송장구분, 송장구분최종, 위치, 위치변환, `주문번호(쇼핑몰)`, 결제금액, 주문금액, 
        결제수단, 면과세구분, 주문상태, 배송송
    )
    SELECT
        dev.msg1, dev.msg2, dev.msg3, dev.msg4, dev.msg5, dev.msg6, 
        dev.수취인명, dev.택배비용, dev.전화번호1, dev.전화번호2, dev.우편번호, dev.주소,
        (dev.수량 * CAST(spec.대체1수량 AS DECIMAL(10,2))) AS 수량, dev.배송메세지, dev.주문번호, dev.쇼핑몰, dev.수집시간, dev.송장명, 
        spec.대체코드1, spec.대체코드1품목명, 
        NULL, NULL, NULL,
        dev.별표1, dev.별표2, dev.품목개수, dev.택배수량, dev.택배수량1, dev.택배수량합산,
        dev.송장구분자, dev.송장구분, dev.송장구분최종, dev.위치, dev.위치변환, dev.`주문번호(쇼핑몰)`, dev.결제금액, dev.주문금액, 
        dev.결제수단, dev.면과세구분, dev.주문상태, dev.배송송
    FROM 원본송장 dev
    JOIN 송장출력_특수출력_합포장변경 spec ON dev.품목코드 = spec.품목코드
    WHERE spec.대체코드1 IS NOT NULL AND spec.대체코드1 != '';
    
    -- 대체코드2가 있는 데이터 처리
    INSERT INTO 원본송장 (
        msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 택배비용, 전화번호1, 전화번호2, 우편번호, 주소,
        수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 
        품목코드, 옵션명, 박스크기, 출력개수, 송장수량, 
        별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산,
        송장구분자, 송장구분, 송장구분최종, 위치, 위치변환, `주문번호(쇼핑몰)`, 결제금액, 주문금액, 
        결제수단, 면과세구분, 주문상태, 배송송
    )
    SELECT
        dev.msg1, dev.msg2, dev.msg3, dev.msg4, dev.msg5, dev.msg6, 
        dev.수취인명, dev.택배비용, dev.전화번호1, dev.전화번호2, dev.우편번호, dev.주소,
        (dev.수량 * CAST(spec.대체2수량 AS DECIMAL(10,2))) AS 수량, dev.배송메세지, dev.주문번호, dev.쇼핑몰, dev.수집시간, dev.송장명, 
        spec.대체코드2, spec.대체코드2품목명, 
        NULL, NULL, NULL,
        dev.별표1, dev.별표2, dev.품목개수, dev.택배수량, dev.택배수량1, dev.택배수량합산,
        dev.송장구분자, dev.송장구분, dev.송장구분최종, dev.위치, dev.위치변환, dev.`주문번호(쇼핑몰)`, 0, 0,
        dev.결제수단, dev.면과세구분, dev.주문상태, dev.배송송
    FROM 원본송장 dev
    JOIN 송장출력_특수출력_합포장변경 spec ON dev.품목코드 = spec.품목코드
    WHERE spec.대체코드2 IS NOT NULL AND spec.대체코드2 != '';
    
    -- 대체코드3이 있는 데이터 처리
    INSERT INTO 원본송장 (
        msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 택배비용, 전화번호1, 전화번호2, 우편번호, 주소,
        수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 
        품목코드, 옵션명, 박스크기, 출력개수, 송장수량, 
        별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산,
        송장구분자, 송장구분, 송장구분최종, 위치, 위치변환, `주문번호(쇼핑몰)`, 결제금액, 주문금액, 
        결제수단, 면과세구분, 주문상태, 배송송
    )
    SELECT
        dev.msg1, dev.msg2, dev.msg3, dev.msg4, dev.msg5, dev.msg6, 
        dev.수취인명, dev.택배비용, dev.전화번호1, dev.전화번호2, dev.우편번호, dev.주소,
        (dev.수량 * CAST(spec.대체3수량 AS DECIMAL(10,2))) AS 수량, dev.배송메세지, dev.주문번호, dev.쇼핑몰, dev.수집시간, dev.송장명, 
        spec.대체코드3, spec.대체코드3품목명,
        NULL, NULL, NULL,
        dev.별표1, dev.별표2, dev.품목개수, dev.택배수량, dev.택배수량1, dev.택배수량합산,
        dev.송장구분자, dev.송장구분, dev.송장구분최종, dev.위치, dev.위치변환, dev.`주문번호(쇼핑몰)`, 0, 0, 
        dev.결제수단, dev.면과세구분, dev.주문상태, dev.배송송
    FROM 원본송장 dev
    JOIN 송장출력_특수출력_합포장변경 spec ON dev.품목코드 = spec.품목코드
    WHERE spec.대체코드3 IS NOT NULL AND spec.대체코드3 != '';
	
    -- 대체코드4가 있는 데이터 처리
    INSERT INTO 원본송장 (
        msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 택배비용, 전화번호1, 전화번호2, 우편번호, 주소,
        수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 
        품목코드, 옵션명, 박스크기, 출력개수, 송장수량, 
        별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산,
        송장구분자, 송장구분, 송장구분최종, 위치, 위치변환, `주문번호(쇼핑몰)`, 결제금액, 주문금액, 
        결제수단, 면과세구분, 주문상태, 배송송
    )
    SELECT
        dev.msg1, dev.msg2, dev.msg3, dev.msg4, dev.msg5, dev.msg6, 
        dev.수취인명, dev.택배비용, dev.전화번호1, dev.전화번호2, dev.우편번호, dev.주소,
        (dev.수량 * CAST(spec.대체4수량 AS DECIMAL(10,2))) AS 수량, dev.배송메세지, dev.주문번호, dev.쇼핑몰, dev.수집시간, dev.송장명, 
        spec.대체코드4, spec.대체코드4품목명,
        NULL, NULL, NULL,
        dev.별표1, dev.별표2, dev.품목개수, dev.택배수량, dev.택배수량1, dev.택배수량합산,
        dev.송장구분자, dev.송장구분, dev.송장구분최종, dev.위치, dev.위치변환, dev.`주문번호(쇼핑몰)`, 0, 0, 
        dev.결제수단, dev.면과세구분, dev.주문상태, dev.배송송
    FROM 원본송장 dev
    JOIN 송장출력_특수출력_합포장변경 spec ON dev.품목코드 = spec.품목코드
    WHERE spec.대체코드4 IS NOT NULL AND spec.대체코드4 != '';
	
    /*--================================================================================
	-- 합포장 해제 후 후속 처리
    --================================================================================*/
    -- 냉동 렉 위치 입력 (품목등록 테이블 기반)
    UPDATE 원본송장 dev
	  JOIN 품목등록 p ON dev.품목코드 = p.품목코드 
	   SET dev.위치 = p.품목그룹2코드,
	       비고1 = CONCAT(비고1, '[위치(', p.품목그룹2코드, ')]');
	   

    -- 출력개수, 택배비용 등 기본값 설정
    UPDATE 원본송장
       SET 택배비용 = IFNULL(택배비용, '2150'), 
           박스크기 = IFNULL(박스크기, '극소'), 
           출력개수 = IFNULL(출력개수, 1),
		   비고1 = CONCAT(비고1, '[택배비용,박스크기,출력개수]')
     WHERE 품목코드 IN (SELECT 대체코드1 FROM 송장출력_특수출력_합포장변경 WHERE 대체코드1 IS NOT NULL AND 대체코드1 != ''
                      UNION SELECT 대체코드2 FROM 송장출력_특수출력_합포장변경 WHERE 대체코드2 IS NOT NULL AND 대체코드2 != ''
                      UNION SELECT 대체코드3 FROM 송장출력_특수출력_합포장변경 WHERE 대체코드3 IS NOT NULL AND 대체코드3 != ''
                      UNION SELECT 대체코드4 FROM 송장출력_특수출력_합포장변경 WHERE 대체코드4 IS NOT NULL AND 대체코드4 != '');
					  

    UPDATE 원본송장
       SET 비고1 = CONCAT(비고1, '[합포장후 삭제]') 
     WHERE 품목코드 IN (SELECT 품목코드 FROM 송장출력_특수출력_합포장변경);

	
	/*-- 원본 합포장 주문 데이터를 삭제*/
    DELETE FROM 원본송장
     WHERE 품목코드 IN (SELECT 품목코드 FROM 송장출력_특수출력_합포장변경);
	
    
    COMMIT;

END$$

DELIMITER ;
