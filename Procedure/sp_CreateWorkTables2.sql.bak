DELIMITER $$

DROP PROCEDURE IF EXISTS sp_CreateWorkTables2$$

CREATE PROCEDURE sp_CreateWorkTables2(IN targetTableName VARCHAR(255))
BEGIN
    /*--================================================================================
	-- 작업용 임시 테이블 생성
    --================================================================================*/
    DROP TEMPORARY TABLE IF EXISTS temp_invoices;
    DROP TEMPORARY TABLE IF EXISTS temp_additional_invoices;
    DROP TEMPORARY TABLE IF EXISTS temp_sorted_data;

    -- 메인 작업용 임시 테이블을 생성합니다.
    CREATE TEMPORARY TABLE temp_invoices (
        id INT AUTO_INCREMENT PRIMARY KEY,
        msg1 VARCHAR(255), msg2 VARCHAR(255), msg3 VARCHAR(255), msg4 VARCHAR(255), msg5 VARCHAR(255), msg6 VARCHAR(255),
        수취인명 VARCHAR(255), 전화번호1 VARCHAR(255), 전화번호2 VARCHAR(255), 우편번호 VARCHAR(255), 주소 VARCHAR(255),
        옵션명 VARCHAR(255),
        수량 INT,
        배송메세지 TEXT,
        주문번호 VARCHAR(255), 쇼핑몰 VARCHAR(255), 수집시간 DATETIME, 송장명 VARCHAR(255), 품목코드 VARCHAR(255),
        택배비용 INT,
        박스크기 VARCHAR(255),
        출력개수 INT,
        송장수량 INT,
        별표1 VARCHAR(255), 별표2 VARCHAR(255),
        품목개수 INT,
        택배수량 DECIMAL(10,3),
        택배수량1 DECIMAL(10,3),
        택배수량합산 DECIMAL(10,3),
        송장구분자 VARCHAR(50), 송장구분 VARCHAR(50), 송장구분최종 VARCHAR(50),
        위치 VARCHAR(255), 위치변환 VARCHAR(255)
    );

    -- 추가 송장용 임시 테이블을 생성합니다.
    CREATE TEMPORARY TABLE temp_additional_invoices LIKE temp_invoices;

    -- 정렬된 데이터를 담을 임시 테이블 (파라미터로 받은 테이블의 구조를 복제)
    SET @sql = CONCAT('CREATE TEMPORARY TABLE temp_sorted_data LIKE ', targetTableName);
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;

END$$

DELIMITER ;