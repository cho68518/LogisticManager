def select_file():
    logging.info("파일 선택 시작")
    gramwonlogis = tk.Tk()
    gramwonlogis.withdraw()
    gramwonlogis.option_add('*Font', 'Helvetica 12')

    file_path = filedialog.askopenfilename(title="사방넷주문수집양식 파일 선택")
    logging.info(f"선택된 파일 경로: {file_path}")

    if file_path:
        if file_path.endswith('.xlsx'):
            insert_data(file_path)
        else:
            logging.error("올바르지 않은 파일 형식")
            print("올바르지 않은 형식의 파일입니다.")
            input("창을 선택하고 엔터를 누르면 종료 됩니다.")
    else:
        logging.warning("파일이 선택되지 않음")
        print("파일을 선택하지 않았습니다.")
        input("창을 선택하고 엔터를 누르면 종료 됩니다.")

def insert_data(file_path):
    try:
        mydb = mysql.connector.connect(
            host='gramwonlogis.mycafe24.com',
            port=3306,
            user='gramwonlogis',
            password='jung5516!',
            database='gramwonlogis',
        )
        cursor = mydb.cursor()
        logging.info("데이터베이스 연결 성공")

        cursor.execute("TRUNCATE TABLE 송장출력_사방넷원본변환")
        logging.info("테이블 초기화 성공")

        data = pd.read_excel(file_path)
        data.fillna(value='', inplace=True)

        for index, row in data.iterrows():
            sql = """
                INSERT INTO 송장출력_사방넷원본변환 (
                    수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호,
                    쇼핑몰, 수집시간, 송장명, 품목코드, `주문번호(쇼핑몰)`, 결제금액, 주문금액, 결제수단, 면과세구분, 주문상태, 배송송
                ) 
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            """
            values = (
                str(row['수취인명']),
                str(row['전화번호1']),
                str(row['전화번호2']),
                str(row['우편번호']),
                str(row['주소']),
                '',  # ✅ 옵션명은 항상 빈 문자열
                str(row['수량']),
                str(row['배송메세지']),
                str(row['주문번호']),
                str(row['쇼핑몰']),
                str(row['수집시간']),
                str(row['송장명']),
                str(row['품목코드']),
                str(row['주문번호(쇼핑몰)']),
                str(row['결제금액']),
                str(row['주문금액']),
                str(row['결제수단'])[:255],
                str(row['면과세구분']),
                str(row['주문상태']),
                str(row['배송송'])
            )
            cursor.execute(sql, values)
            logging.info(f"데이터 삽입 성공: {values}")

        mydb.commit()
        logging.info("데이터베이스 커밋 완료")
        print("데이터 삽입이 완료되었습니다.")
    except Exception as e:
        logging.error(f"오류 발생: {e}", exc_info=True)
        print("데이터 삽입 중 오류가 발생했습니다:", e)
        mydb.close()
    finally:
        input("창을 클릭하고 엔터를 누르세요!")

if __name__ == "__main__":
    select_file()
    print("송장수집파일 그램원 DB에 넣기 끝.")
# ---끝

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

def add_star_to_address():
    try:
        # DB 연결
        connection = pymysql.connect(
            host=host,
            port=port,
            user=user,
            password=password,
            database=database,
            charset=charset,
            cursorclass=pymysql.cursors.DictCursor
        )

        with connection.cursor() as cursor:
            # 주소 뒤에 * 추가
            update_query = """
            UPDATE 송장출력_사방넷원본변환
            SET 주소 = CONCAT(주소, '*')
            WHERE 품목코드 IN (7710, 7720)
            """

            cursor.execute(update_query)
            connection.commit()
            print("✅ 주소 뒤에 * 추가 완료")

    except Exception as e:
        print(f"❌ 오류 발생: {e}")

    finally:
        connection.close()

if __name__ == "__main__":
    add_star_to_address()

# ---. 5초딜레이
print("파일생성까지 5초")
# ---시작
import time

time.sleep(5)

# ---. 5초딜레이
print("5초카운트 끝")
# ---끝


import pymysql

def replace_bs_with_gc():
    print("송장명 BS_ → GC_ 변경 시작")
    
    # DB 연결 정보
    connection = pymysql.connect(
        host='gramwonlogis.mycafe24.com',
        port=3306,
        user='gramwonlogis',
        password='jung5516!',
        database='gramwonlogis',
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # BS_ → GC_로 변경
            update_sql = """
            UPDATE 송장출력_사방넷원본변환
            SET 송장명 = CONCAT('GC_', SUBSTRING(송장명, 4))
            WHERE LEFT(송장명, 3) = 'BS_'
            """
            affected_rows = cursor.execute(update_sql)
            connection.commit()
            print(f"변경 완료: {affected_rows}건 (BS_ → GC_)")
    
    except Exception as e:
        print(f"오류 발생: {e}")
    
    finally:
        connection.close()

if __name__ == "__main__":
    replace_bs_with_gc()

time.sleep(1)

import mysql.connector

def update_recipient_name_and_clean_address():
    try:
        # 데이터베이스 연결
        connection = mysql.connector.connect(
            host='gramwonlogis.mycafe24.com',
            port=3306,
            user='gramwonlogis',
            password='jung5516!',
            database='gramwonlogis'
        )
        
        cursor = connection.cursor()

        # 1. 수취인명이 'nan'인 경우 '난난'으로 변경
        update_name_query = """
        UPDATE 송장출력_사방넷원본변환
        SET 수취인명 = '난난'
        WHERE 수취인명 = 'nan';
        """
        cursor.execute(update_name_query)
        print(f"{cursor.rowcount} rows updated in 수취인명.")

        # 2. 주소 컬럼에서 '·' 문자를 제거
        update_address_query = """
        UPDATE 송장출력_사방넷원본변환
        SET 주소 = REPLACE(주소, '·', '')
        WHERE 주소 LIKE '%·%';
        """
        cursor.execute(update_address_query)
        print(f"{cursor.rowcount} rows updated in 주소.")

        connection.commit()

    except mysql.connector.Error as err:
        print(f"Error: {err}")

    finally:
        if connection.is_connected():
            cursor.close()
            connection.close()

# 실행
update_recipient_name_and_clean_address()

time.sleep(1)


import mysql.connector
import time

def update_payment_method_for_baemin():
    try:
        # 데이터베이스 연결
        connection = mysql.connector.connect(
            host='gramwonlogis.mycafe24.com',
            port=3306,
            user='gramwonlogis',
            password='jung5516!',
            database='gramwonlogis'
        )

        cursor = connection.cursor()

        # 쇼핑몰이 '배민상회'인 행의 결제수단을 0으로 업데이트
        update_query = """
        UPDATE 송장출력_사방넷원본변환
        SET 결제수단 = '0'
        WHERE 쇼핑몰 = '배민상회';
        """

        cursor.execute(update_query)
        connection.commit()

        print(f"{cursor.rowcount} rows updated.")

    except mysql.connector.Error as err:
        print(f"Error: {err}")

    finally:
        if connection.is_connected():
            cursor.close()
            connection.close()
            print("Database connection closed.")

if __name__ == "__main__":
    update_payment_method_for_baemin()
    time.sleep(1)

# 메세지메세지메세지넣기시작
import pandas as pd
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# Excel 파일 경로
excel_file = '0.관리자파일/송장출력_메세지.xlsx'

# 테이블 리스트
target_tables = [
    '송장출력_메세지',
    '송장출력_메세지부산',
    '송장출력_메세지청과'
]

# 엑셀 파일 읽기
df = pd.read_excel(excel_file, header=0)

# 컬럼 이름 명시적으로 지정
df.columns = ['쇼핑몰', 'msg1', 'msg2', 'msg3', 'msg4', 'msg5', 'msg6']

# NaN 값을 빈 문자열로 대체
df = df.astype(str).fillna('')

# MySQL 연결
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        for table in target_tables:
            # 기존 데이터 삭제
            cursor.execute(f"TRUNCATE TABLE {table}")

            # 데이터 삽입
            for _, row in df.iterrows():
                sql = f"""
                INSERT INTO {table} (쇼핑몰, msg1, msg2, msg3, msg4, msg5, msg6)
                VALUES (%s, %s, %s, %s, %s, %s, %s)
                """
                cursor.execute(sql, (
                    row['쇼핑몰'], row['msg1'], row['msg2'], row['msg3'],
                    row['msg4'], row['msg5'], row['msg6']
                ))

    # 변경사항 커밋
    connection.commit()
    print("✅ All tables updated successfully!")

finally:
    connection.close()
    print("🔌 Database connection closed.")

time.sleep(1)

# 메세지메세지메세지넣기끝끝

# 합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포시작

import pandas as pd
import pymysql
import time

def truncate_and_insert_busan():
    print("합포장변경 코드입력 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # Excel 파일 경로
    excel_file = '0.관리자파일/합포장변경.xlsx'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        # Excel 파일 읽기
        df = pd.read_excel(excel_file)

        # NaN 값을 적절한 값으로 대체
        for column in df.columns:
            if df[column].dtype == 'object':
                df[column] = df[column].fillna('')
            else:
                df[column] = df[column].fillna(0)

        # MySQL 테이블에 데이터 삽입 전에 테이블 비우기
        with connection.cursor() as cursor:
            # 테이블 비우기
            cursor.execute("TRUNCATE TABLE 송장출력_특수출력_합포장변경")

        # MySQL 테이블에 데이터 삽입
        with connection.cursor() as cursor:
             for index, row in df.iterrows():
                sql = """
                INSERT INTO 송장출력_특수출력_합포장변경 (
                    품목코드, 품목명, 대체코드1, 대체코드1품목명, 대체1수량, 
                    대체코드2, 대체코드2품목명, 대체2수량, 대체코드3, 대체코드3품목명, 대체3수량,
                    대체코드4, 대체코드4품목명, 대체4수량
                )
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
                """
                cursor.execute(sql, (
                    row['품목코드'], row['품목명'], row['대체코드1'], row['대체코드1품목명'], 
                    row['대체1수량'], row['대체코드2'], row['대체코드2품목명'], row['대체2수량'],
                    row['대체코드3'], row['대체코드3품목명'], row['대체3수량'], row['대체코드4'], 
                    row['대체코드4품목명'], row['대체4수량']
                ))


        # 변경사항 저장
        connection.commit()
        print("합포장변경 코드입력 완료")
    except Exception as e:
        print(f"Error in truncate_and_insert_busan: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
truncate_and_insert_busan()


time.sleep(1)



import time
import pymysql

def transfer_and_delete_data():
    print("데이터 전송 및 삭제 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 송장출력_사방넷원본변환_합포장변환 테이블 비우기
            cursor.execute("TRUNCATE TABLE 송장출력_사방넷원본변환_합포장변환")

            # 데이터 삽입
            insert_sql = """
            INSERT INTO 송장출력_사방넷원본변환_합포장변환
            SELECT * FROM 송장출력_사방넷원본변환
            WHERE 품목코드 IN (SELECT 품목코드 FROM 송장출력_특수출력_합포장변경)
            """
            cursor.execute(insert_sql)

            # 데이터 삭제
            delete_sql = """
            DELETE FROM 송장출력_사방넷원본변환
            WHERE 품목코드 IN (SELECT 품목코드 FROM 송장출력_특수출력_합포장변경)
            """
            cursor.execute(delete_sql)

        # 변경사항 저장
        connection.commit()
        print("데이터 전송 및 삭제 완료")
    except Exception as e:
        print(f"Error in transfer_and_delete_data: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
transfer_and_delete_data()

import pymysql

def transfer_data_to_합포장변환1():
    print("데이터 전송 시작 (합포장변환1)")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 송장출력_사방넷원본변환_합포장변환1 테이블 비우기
            cursor.execute("TRUNCATE TABLE 송장출력_사방넷원본변환_합포장변환1")

            # 데이터 선택 및 삽입
            select_and_insert_sql = """
            INSERT INTO 송장출력_사방넷원본변환_합포장변환1
            SELECT a.*
            FROM 송장출력_사방넷원본변환_합포장변환 a
            JOIN 송장출력_특수출력_합포장변경 b ON a.품목코드 = b.품목코드
            WHERE b.대체코드2 != ''
            """
            cursor.execute(select_and_insert_sql)

        # 변경사항 저장
        connection.commit()
        print("데이터 전송 완료 (합포장변환1)")
    except Exception as e:
        print(f"Error in transfer_data_to_합포장변환1: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    transfer_data_to_합포장변환1()

#합포장변환1 = 대체코드2
time.sleep(1)

import pymysql

def transfer_data_to_합포장변환2():
    print("데이터 전송 시작 (합포장변환2)")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 송장출력_사방넷원본변환_합포장변환2 테이블 비우기
            cursor.execute("TRUNCATE TABLE 송장출력_사방넷원본변환_합포장변환2")

            # 데이터 선택 및 삽입
            select_and_insert_sql = """
            INSERT INTO 송장출력_사방넷원본변환_합포장변환2
            SELECT a.*
            FROM 송장출력_사방넷원본변환_합포장변환 a
            JOIN 송장출력_특수출력_합포장변경 b ON a.품목코드 = b.품목코드
            WHERE b.대체코드3 != ''
            """
            cursor.execute(select_and_insert_sql)

        # 변경사항 저장
        connection.commit()
        print("데이터 전송 완료 (합포장변환2)")
    except Exception as e:
        print(f"Error in transfer_data_to_합포장변환2: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    transfer_data_to_합포장변환2()

#합포장변환2 = 대체코드3
time.sleep(1)

import pymysql

def transfer_data_to_합포장변환3():
    print("데이터 전송 시작 (합포장변환3)")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 송장출력_사방넷원본변환_합포장변환1 테이블 비우기
            cursor.execute("TRUNCATE TABLE 송장출력_사방넷원본변환_합포장변환3")

            # 데이터 선택 및 삽입
            select_and_insert_sql = """
            INSERT INTO 송장출력_사방넷원본변환_합포장변환3
            SELECT a.*
            FROM 송장출력_사방넷원본변환_합포장변환 a
            JOIN 송장출력_특수출력_합포장변경 b ON a.품목코드 = b.품목코드
            WHERE b.대체코드4 != ''
            """
            cursor.execute(select_and_insert_sql)

        # 변경사항 저장
        connection.commit()
        print("데이터 전송 완료 (합포장변환3)")
    except Exception as e:
        print(f"Error in transfer_data_to_합포장변환3: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    transfer_data_to_합포장변환3()

#합포장변환3 = 대체코드4
time.sleep(1)

import pymysql

def update_합포장변환():
    print("데이터 업데이트 시작 (합포장변환)")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 데이터 업데이트
            update_sql = """
            UPDATE 송장출력_사방넷원본변환_합포장변환 a
            JOIN 송장출력_특수출력_합포장변경 b ON a.품목코드 = b.품목코드
            SET 
                a.택배비용 = b.대체코드1,
                a.박스크기 = b.대체코드1품목명,
                a.출력개수 = b.대체1수량
            WHERE b.대체코드1 != ''
            """
            cursor.execute(update_sql)

        # 변경사항 저장
        connection.commit()
        print("데이터 업데이트 완료 (합포장변환)")
    except Exception as e:
        print(f"Error in update_합포장변환: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    update_합포장변환()

#합포장변환 = 대체코드1
time.sleep(1)


import pymysql

def update_합포장변환1():
    print("데이터 업데이트 시작 (합포장변환1)")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 데이터 업데이트
            update_sql = """
            UPDATE 송장출력_사방넷원본변환_합포장변환1 a
            JOIN 송장출력_특수출력_합포장변경 b ON a.품목코드 = b.품목코드
            SET 
                a.택배비용 = b.대체코드2,
                a.박스크기 = b.대체코드2품목명,
                a.출력개수 = b.대체2수량
            WHERE b.대체코드2 != ''
            """
            cursor.execute(update_sql)

        # 변경사항 저장
        connection.commit()
        print("데이터 업데이트 완료 (합포장변환1)")
    except Exception as e:
        print(f"Error in update_합포장변환1: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    update_합포장변환1()

#합포장변환1 = 대체코드2

time.sleep(1)


import pymysql

def update_합포장변환2():
    print("데이터 업데이트 시작 (합포장변환2)")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 데이터 업데이트
            update_sql = """
            UPDATE 송장출력_사방넷원본변환_합포장변환2 a
            JOIN 송장출력_특수출력_합포장변경 b ON a.품목코드 = b.품목코드
            SET 
                a.택배비용 = b.대체코드3,
                a.박스크기 = b.대체코드3품목명,
                a.출력개수 = b.대체3수량
            WHERE b.대체코드3 != ''
            """
            cursor.execute(update_sql)

        # 변경사항 저장
        connection.commit()
        print("데이터 업데이트 완료 (합포장변환2)")
    except Exception as e:
        print(f"Error in update_합포장변환2: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    update_합포장변환2()

#합포장변환2 = 대체코드3

time.sleep(1)

import pymysql

def update_합포장변환3():
    print("데이터 업데이트 시작 (합포장변환3)")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 데이터 업데이트
            update_sql = """
            UPDATE 송장출력_사방넷원본변환_합포장변환3 a
            JOIN 송장출력_특수출력_합포장변경 b ON a.품목코드 = b.품목코드
            SET 
                a.택배비용 = b.대체코드4,
                a.박스크기 = b.대체코드4품목명,
                a.출력개수 = b.대체4수량
            WHERE b.대체코드4 != ''
            """
            cursor.execute(update_sql)

        # 변경사항 저장
        connection.commit()
        print("데이터 업데이트 완료 (합포장변환3)")
    except Exception as e:
        print(f"Error in update_합포장변환3: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    update_합포장변환3()

#합포장변환3 = 대체코드4

time.sleep(1)


import pymysql

def delete_rows_with_empty_boxsize():
    print("박스크기가 비어있는 행 삭제 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 박스크기가 비어있는 행 삭제
            delete_sql = """
            DELETE FROM 송장출력_사방넷원본변환_합포장변환1
            WHERE 박스크기 IS NULL OR 박스크기 = ''
            """
            cursor.execute(delete_sql)

            # 영향받은 행 수 확인
            affected_rows = cursor.rowcount

        # 변경사항 저장
        connection.commit()
        print(f"박스크기가 비어있는 {affected_rows}개의 행이 삭제되었습니다.")
    except Exception as e:
        print(f"Error in delete_rows_with_empty_boxsize: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    delete_rows_with_empty_boxsize()

time.sleep(1)


import pymysql

def delete_rows_with_empty_boxsize2():
    print("박스크기가 비어있는 행 삭제 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 박스크기가 비어있는 행 삭제
            delete_sql = """
            DELETE FROM 송장출력_사방넷원본변환_합포장변환2
            WHERE 박스크기 IS NULL OR 박스크기 = ''
            """
            cursor.execute(delete_sql)

            # 영향받은 행 수 확인
            affected_rows = cursor.rowcount

        # 변경사항 저장
        connection.commit()
        print(f"박스크기가 비어있는 {affected_rows}개의 행이 삭제되었습니다.")
    except Exception as e:
        print(f"Error in delete_rows_with_empty_boxsize: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    delete_rows_with_empty_boxsize2()

time.sleep(1)


import pymysql

def delete_rows_with_empty_boxsize3():
    print("박스크기가 비어있는 행 삭제 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 박스크기가 비어있는 행 삭제
            delete_sql = """
            DELETE FROM 송장출력_사방넷원본변환_합포장변환3
            WHERE 박스크기 IS NULL OR 박스크기 = ''
            """
            cursor.execute(delete_sql)

            # 영향받은 행 수 확인
            affected_rows = cursor.rowcount

        # 변경사항 저장
        connection.commit()
        print(f"박스크기가 비어있는 {affected_rows}개의 행이 삭제되었습니다.")
    except Exception as e:
        print(f"Error in delete_rows_with_empty_boxsize: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    delete_rows_with_empty_boxsize3()

time.sleep(1)


import pymysql

def update_table(table_name):
    print(f"데이터 업데이트 시작 ({table_name})")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 데이터 업데이트
            update_sql = f"""
            UPDATE {table_name}
            SET 
                품목코드 = 택배비용,
                송장명 = 박스크기,
                수량 = 수량 * 출력개수,
                택배비용 = NULL,
                박스크기 = NULL,
                출력개수 = NULL
            """
            cursor.execute(update_sql)

        # 변경사항 저장
        connection.commit()
        print(f"데이터 업데이트 완료 ({table_name})")
    except Exception as e:
        print(f"Error in update_{table_name}: {e}")
    finally:
        # 연결 종료
        connection.close()

def update_합포장변환():
    update_table('송장출력_사방넷원본변환_합포장변환')

def update_합포장변환1():
    update_table('송장출력_사방넷원본변환_합포장변환1')

def update_합포장변환2():
    update_table('송장출력_사방넷원본변환_합포장변환2')

def update_합포장변환3():
    update_table('송장출력_사방넷원본변환_합포장변환3')

# 함수 실행
if __name__ == "__main__":
    update_합포장변환()
    update_합포장변환1()
    update_합포장변환2()  # 추가된 함수 호출
    update_합포장변환3()  # 추가된 함수 호출


import mysql.connector
from mysql.connector import Error

def update_table(cursor, table_name):
    try:
        update_query = f"""
        UPDATE {table_name} AS s
        JOIN 품목등록 AS p ON s.품목코드 = p.품목코드
        SET s.결제금액 = 0,
            s.주문금액 = 0
        """
        cursor.execute(update_query)
        print(f"{table_name} 테이블의 결제금액과 주문금액이 0원으로 업데이트되었습니다.")
    except Error as e:
        print(f"{table_name} 테이블 업데이트 중 오류 발생: {e}")

try:
    connection = mysql.connector.connect(
        host='gramwonlogis.mycafe24.com',
        port=3306,
        user='gramwonlogis',
        password='jung5516!',
        database='gramwonlogis'
    )

    if connection.is_connected():
        cursor = connection.cursor()
        
        # 테이블명 목록
        tables = [
            '송장출력_사방넷원본변환_합포장변환1', 
            '송장출력_사방넷원본변환_합포장변환2', 
            '송장출력_사방넷원본변환_합포장변환3'
        ]
        for table in tables:
            update_table(cursor, table)
        
        connection.commit()
        print("모든 테이블의 업데이트가 완료되었습니다.")

except Error as e:
    print(f"데이터베이스 연결 중 오류 발생: {e}")

finally:
    if connection.is_connected():
        cursor.close()
        connection.close()
        print("데이터베이스 연결이 종료되었습니다.")




time.sleep(1)

import pymysql
import time

def merge_and_insert_data():
    print("데이터 병합 및 삽입 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 1. 송장출력_사방넷원본변환_합포장변환결과 테이블 truncate
            print("송장출력_사방넷원본변환_합포장변환결과 테이블 truncate 시작")
            cursor.execute("TRUNCATE TABLE 송장출력_사방넷원본변환_합포장변환결과")
            connection.commit()
            print("송장출력_사방넷원본변환_합포장변환결과 테이블 truncate 완료")
            time.sleep(1)

            # 2. 데이터 병합 및 삽입 (AUTO_INCREMENT 사용)
            print("데이터 병합 및 삽입 시작")
            insert_sql = """
            INSERT INTO 송장출력_사방넷원본변환_합포장변환결과 (
                msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
                옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 
                박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 
                송장구분자, 송장구분, 송장구분최종, 위치, 위치변환, `주문번호(쇼핑몰)`, 결제금액, 주문금액, 결제수단, 면과세구분, 주문상태, 배송송
            )
            SELECT 
                msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
                옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 
                박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 
                송장구분자, 송장구분, 송장구분최종, 위치, 위치변환, `주문번호(쇼핑몰)`, 결제금액, 주문금액, 결제수단, 면과세구분, 주문상태, 배송송
            FROM 송장출력_사방넷원본변환_합포장변환
            UNION ALL
            SELECT 
                msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
                옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 
                박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 
                송장구분자, 송장구분, 송장구분최종, 위치, 위치변환, `주문번호(쇼핑몰)`, 결제금액, 주문금액, 결제수단, 면과세구분, 주문상태, 배송송
            FROM 송장출력_사방넷원본변환_합포장변환1
            UNION ALL
            SELECT 
                msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
                옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 
                박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 
                송장구분자, 송장구분, 송장구분최종, 위치, 위치변환, `주문번호(쇼핑몰)`, 결제금액, 주문금액, 결제수단, 면과세구분, 주문상태, 배송송
            FROM 송장출력_사방넷원본변환_합포장변환2
            UNION ALL
            SELECT 
                msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
                옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 
                박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 
                송장구분자, 송장구분, 송장구분최종, 위치, 위치변환, `주문번호(쇼핑몰)`, 결제금액, 주문금액, 결제수단, 면과세구분, 주문상태, 배송송
            FROM 송장출력_사방넷원본변환_합포장변환3
            """
            cursor.execute(insert_sql)
            connection.commit()
            print("데이터 병합 및 송장출력_사방넷원본변환_합포장변환결과 테이블에 삽입 완료")
            time.sleep(1)

            # 3. 송장출력_사방넷원본변환 테이블에 데이터 추가
            print("송장출력_사방넷원본변환 테이블에 데이터 추가 시작")
            insert_to_original_sql = """
            INSERT INTO 송장출력_사방넷원본변환 (
                msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
                옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 
                박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 
                송장구분자, 송장구분, 송장구분최종, 위치, 위치변환, `주문번호(쇼핑몰)`, 결제금액, 주문금액, 결제수단, 면과세구분, 주문상태, 배송송
            )
            SELECT 
                msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
                옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 
                박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 
                송장구분자, 송장구분, 송장구분최종, 위치, 위치변환, `주문번호(쇼핑몰)`, 결제금액, 주문금액, 결제수단, 면과세구분, 주문상태, 배송송
            FROM 송장출력_사방넷원본변환_합포장변환결과
            """
            cursor.execute(insert_to_original_sql)
            connection.commit()
            print("송장출력_사방넷원본변환 테이블에 데이터 추가 완료")
            time.sleep(1)

        print("모든 작업 완료")
    except Exception as e:
        print(f"Error in merge_and_insert_data: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
merge_and_insert_data()


# 합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포합포끝



# 감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천시작


import time
import pymysql
import time
#1. 테이블 비우기
def truncate_tables():
    print("테이블 비우기 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 테이블 비우기
            tables = [
                '송장출력_사방넷원본변환_특수출력감천',
                '송장출력_사방넷원본변환_특수출력감천1',
                '송장출력_사방넷원본변환_특수출력감천2',
                '송장출력_사방넷원본변환_특수출력감천자료'
            ]
            for table in tables:
                cursor.execute(f"TRUNCATE TABLE {table}")
                print(f"{table} 테이블 비우기 완료")

            # 변경사항 저장
            connection.commit()

    except Exception as e:
        print(f"Error in truncate_tables: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    truncate_tables()

time.sleep(1)

#2. 엑셀에서 코드 가져오기
import pandas as pd
import pymysql
import time

def truncate_and_insert_busan():
    print("감천 특별출고 코드입력 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # Excel 파일 경로
    excel_file = '0.관리자파일/부산감천센터분리송장.xlsx'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        # Excel 파일 읽기
        df = pd.read_excel(excel_file)

        # NaN 값을 빈 문자열("")로 대체
        df.fillna('', inplace=True)

        # MySQL 테이블에 데이터 삽입 전에 테이블 비우기
        with connection.cursor() as cursor:
            # 테이블 비우기
            cursor.execute("TRUNCATE TABLE 송장출력_특수출력_감천분리출고")

        # MySQL 테이블에 데이터 삽입
        with connection.cursor() as cursor:
            for index, row in df.iterrows():
                sql = """
                INSERT INTO 송장출력_특수출력_감천분리출고 (품목코드, 상품명, 수량)
                VALUES (%s, %s, %s)
                """
                cursor.execute(sql, (row['품목코드'], row['상품명'], row['수량']))

        # 변경사항 저장
        connection.commit()

        # 품목등록 테이블에서 택배수량을 가져와서 업데이트
        with connection.cursor() as cursor:
            update_sql = """
            UPDATE 송장출력_특수출력_감천분리출고 a
            LEFT JOIN 품목등록 b ON a.품목코드 = b.품목코드
            SET a.택배수량 = COALESCE(b.택배수량, 10)
            """
            cursor.execute(update_sql)

        # 변경사항 저장
        connection.commit()
        print("감천 특별출고 코드입력 끝")
    except Exception as e:
        print(f"Error in truncate_and_insert_busan: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
truncate_and_insert_busan()

time.sleep(1)



#3. 송장구분 업데이트(합포장,단일)
import pymysql

def update_shipping_type():
    print("송장구분 업데이트 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 모든 주소 중 중복되는 주소 선택
            select_sql = """
            SELECT 주소
            FROM 송장출력_사방넷원본변환
            GROUP BY 주소
            HAVING COUNT(주소) > 1
            """
            cursor.execute(select_sql)
            duplicate_addresses = cursor.fetchall()
            duplicate_addresses_set = {row['주소'] for row in duplicate_addresses}

            # 중복 주소를 가진 행의 송장구분을 "합포장"으로 업데이트
            update_sql = """
            UPDATE 송장출력_사방넷원본변환
            SET 송장구분 = '합포장'
            WHERE 주소 = %s
            AND 품목코드 IN (SELECT 품목코드 FROM 송장출력_특수출력_감천분리출고)
            """
            for address in duplicate_addresses_set:
                cursor.execute(update_sql, (address,))
                connection.commit()  # 변경사항 저장

            # 중복되지 않는 주소를 가진 행의 송장구분을 "단일"로 업데이트
            update_single_sql = """
            UPDATE 송장출력_사방넷원본변환
            SET 송장구분 = '단일'
            WHERE 품목코드 IN (SELECT 품목코드 FROM 송장출력_특수출력_감천분리출고)
            AND 주소 NOT IN (SELECT 주소 FROM (
                SELECT 주소
                FROM 송장출력_사방넷원본변환
                GROUP BY 주소
                HAVING COUNT(주소) > 1
            ) AS subquery)
            """
            cursor.execute(update_single_sql)
            connection.commit()  # 변경사항 저장

        # 변경사항 저장
        connection.commit()
        print("송장구분 업데이트 완료")
    except Exception as e:
        print(f"Error in update_shipping_type: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    update_shipping_type()


time.sleep(1)
import time
import pymysql
import time
#1. 테이블 비우기
def truncate_tables():
    print("테이블 비우기 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 테이블 비우기
            tables = [
                '송장출력_사방넷원본변환_특수출력감천',
                '송장출력_사방넷원본변환_특수출력감천1',
                '송장출력_사방넷원본변환_특수출력감천2',
                '송장출력_사방넷원본변환_특수출력감천자료'
            ]
            for table in tables:
                cursor.execute(f"TRUNCATE TABLE {table}")
                print(f"{table} 테이블 비우기 완료")

            # 변경사항 저장
            connection.commit()

    except Exception as e:
        print(f"Error in truncate_tables: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    truncate_tables()

time.sleep(1)

#2. 엑셀에서 코드 가져오기
import pandas as pd
import pymysql
import time

def truncate_and_insert_busan():
    print("감천 특별출고 코드입력 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # Excel 파일 경로
    excel_file = '0.관리자파일/부산감천센터분리송장.xlsx'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        # Excel 파일 읽기
        df = pd.read_excel(excel_file)

        # NaN 값을 빈 문자열("")로 대체
        df.fillna('', inplace=True)

        # MySQL 테이블에 데이터 삽입 전에 테이블 비우기
        with connection.cursor() as cursor:
            # 테이블 비우기
            cursor.execute("TRUNCATE TABLE 송장출력_특수출력_감천분리출고")

        # MySQL 테이블에 데이터 삽입
        with connection.cursor() as cursor:
            for index, row in df.iterrows():
                sql = """
                INSERT INTO 송장출력_특수출력_감천분리출고 (품목코드, 상품명, 수량)
                VALUES (%s, %s, %s)
                """
                cursor.execute(sql, (row['품목코드'], row['상품명'], row['수량']))

        # 변경사항 저장
        connection.commit()

        # 품목등록 테이블에서 택배수량을 가져와서 업데이트
        with connection.cursor() as cursor:
            update_sql = """
            UPDATE 송장출력_특수출력_감천분리출고 a
            LEFT JOIN 품목등록 b ON a.품목코드 = b.품목코드
            SET a.택배수량 = COALESCE(b.택배수량, 10)
            """
            cursor.execute(update_sql)

        # 변경사항 저장
        connection.commit()
        print("감천 특별출고 코드입력 끝")
    except Exception as e:
        print(f"Error in truncate_and_insert_busan: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
truncate_and_insert_busan()

time.sleep(1)



#3. 송장구분 업데이트(합포장,단일)
import pymysql

def update_shipping_type():
    print("송장구분 업데이트 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 모든 주소 중 중복되는 주소 선택
            select_sql = """
            SELECT 주소
            FROM 송장출력_사방넷원본변환
            GROUP BY 주소
            HAVING COUNT(주소) > 1
            """
            cursor.execute(select_sql)
            duplicate_addresses = cursor.fetchall()
            duplicate_addresses_set = {row['주소'] for row in duplicate_addresses}

            # 중복 주소를 가진 행의 송장구분을 "합포장"으로 업데이트
            update_sql = """
            UPDATE 송장출력_사방넷원본변환
            SET 송장구분 = '합포장'
            WHERE 주소 = %s
            AND 품목코드 IN (SELECT 품목코드 FROM 송장출력_특수출력_감천분리출고)
            """
            for address in duplicate_addresses_set:
                cursor.execute(update_sql, (address,))
                connection.commit()  # 변경사항 저장

            # 중복되지 않는 주소를 가진 행의 송장구분을 "단일"로 업데이트
            update_single_sql = """
            UPDATE 송장출력_사방넷원본변환
            SET 송장구분 = '단일'
            WHERE 품목코드 IN (SELECT 품목코드 FROM 송장출력_특수출력_감천분리출고)
            AND 주소 NOT IN (SELECT 주소 FROM (
                SELECT 주소
                FROM 송장출력_사방넷원본변환
                GROUP BY 주소
                HAVING COUNT(주소) > 1
            ) AS subquery)
            """
            cursor.execute(update_single_sql)
            connection.commit()  # 변경사항 저장

        # 변경사항 저장
        connection.commit()
        print("송장구분 업데이트 완료")
    except Exception as e:
        print(f"Error in update_shipping_type: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    update_shipping_type()


time.sleep(1)
import pymysql

def transfer_and_delete_data():
    print("데이터 전송 및 삭제 시작")
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 0. 대상 테이블 비우기
            cursor.execute("TRUNCATE TABLE 송장출력_사방넷원본변환_특수출력감천")
            connection.commit()
            print("송장출력_사방넷원본변환_특수출력감천 테이블 비우기 완료")

            # 1. 단일 송장 삽입
            insert_single_sql = """
            INSERT INTO 송장출력_사방넷원본변환_특수출력감천
            SELECT * FROM 송장출력_사방넷원본변환
            WHERE 품목코드 IN (
                SELECT 품목코드 FROM 송장출력_특수출력_감천분리출고
            )
            AND 송장구분 = '단일'
            """
            cursor.execute(insert_single_sql)
            print("단일 송장 데이터 삽입 완료")

            # 2. 단일 송장 삭제
            delete_single_sql = """
            DELETE FROM 송장출력_사방넷원본변환
            WHERE 품목코드 IN (
                SELECT 품목코드 FROM 송장출력_특수출력_감천분리출고
            )
            AND 송장구분 = '단일'
            """
            cursor.execute(delete_single_sql)
            print("단일 송장 데이터 삭제 완료")

            # 3. 송장구분최종 업데이트 (수량 비교)
            update_sql = """
            UPDATE 송장출력_사방넷원본변환 A
            JOIN 송장출력_특수출력_감천분리출고 B
              ON A.품목코드 = B.품목코드
            SET A.송장구분최종 = IF(A.수량 >= B.수량, '1', NULL)
            """
            cursor.execute(update_sql)
            connection.commit()
            print("3. 송장구분최종 업데이트 완료")

            # 4. 합포장 + 송장구분최종=1 조건으로 복사
            insert_merge_sql = """
            INSERT INTO 송장출력_사방넷원본변환_특수출력감천
            SELECT * FROM 송장출력_사방넷원본변환
            WHERE 송장구분 = '합포장'
              AND 송장구분최종 = '1'
            """
            cursor.execute(insert_merge_sql)
            print("4. 조건부 합포장 복사 완료")

            # 5. 복사한 합포장 데이터 원본 삭제
            delete_merge_sql = """
            DELETE FROM 송장출력_사방넷원본변환
            WHERE 송장구분 = '합포장'
              AND 송장구분최종 = '1'
            """
            cursor.execute(delete_merge_sql)
            connection.commit()
            print("5. 조건부 합포장 원본 삭제 완료")

    except Exception as e:
        print(f"Error in transfer_and_delete_data: {e}")
    finally:
        connection.close()

if __name__ == "__main__":
    transfer_and_delete_data()


import pymysql

def reset_gc_prefix():
    print("GC_ 접두사 재정리 시작")

    # DB 연결 정보
    connection = pymysql.connect(
        host='gramwonlogis.mycafe24.com',
        port=3306,
        user='gramwonlogis',
        password='jung5516!',
        database='gramwonlogis',
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 1. GC_로 시작하는 송장명에서 GC_ 제거
            remove_gc_sql = """
            UPDATE 송장출력_사방넷원본변환_특수출력감천
            SET 송장명 = SUBSTRING(송장명, 4)
            WHERE LEFT(송장명, 3) = 'GC_'
            """
            removed = cursor.execute(remove_gc_sql)
            print(f"GC_ 제거 완료: {removed}건")

            # 2. 모든 송장명 앞에 GC_ 추가
            add_gc_sql = """
            UPDATE 송장출력_사방넷원본변환_특수출력감천
            SET 송장명 = CONCAT('GC_', 송장명)
            """
            added = cursor.execute(add_gc_sql)
            connection.commit()
            print(f"GC_ 다시 추가 완료: {added}건")

    except Exception as e:
        print(f"오류 발생: {e}")

    finally:
        connection.close()

if __name__ == "__main__":
    reset_gc_prefix()

time.sleep(1)

import pymysql

def merge_into_original():
    print("사방넷 원본변환 테이블에 데이터 삽입 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 중복된 항목을 업데이트
            insert_sql = """
            INSERT INTO 송장출력_사방넷원본변환
            SELECT * FROM 송장출력_사방넷원본변환_특수출력감천
            ON DUPLICATE KEY UPDATE
            ID = VALUES(ID),
            품목코드 = VALUES(품목코드),
            수량 = VALUES(수량),
            택배비용 = VALUES(택배비용),
            박스크기 = VALUES(박스크기),
            송장구분 = VALUES(송장구분),
            송장명 = VALUES(송장명),
            주소 = VALUES(주소)
            """
            cursor.execute(insert_sql)
            connection.commit()
            print("송장출력_사방넷원본변환_특수출력감천2 데이터 삽입 완료 (사방넷 원본변환)")

    except Exception as e:
        print(f"Error in merge_into_original: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    merge_into_original()

time.sleep(1)

import pymysql

def transfer_data():
    print("데이터 전송 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 데이터 선택 및 삽입
            transfer_sql = """
            INSERT INTO 송장출력_사방넷원본변환_특수출력감천자료 (품목코드, 수량)
            SELECT 품목코드, 수량
            FROM 송장출력_사방넷원본변환_특수출력감천1
            """
            cursor.execute(transfer_sql)
            connection.commit()
            print("데이터 전송 완료 (송장출력_사방넷원본변환_특수출력감천자료)")

    except Exception as e:
        print(f"Error in transfer_data: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    transfer_data()

time.sleep(1)

# 감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천감천끝

time.sleep(1)

import pandas as pd
import pymysql
import time

def truncate_and_insert_kakao():
    print("카카오 행사 코드 입력 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # Excel 파일 경로
    excel_file = '0.관리자파일/카카오행사.xlsx'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        # Excel 파일 읽기
        df = pd.read_excel(excel_file)

        # NaN 값을 빈 문자열("")로 대체
        df.fillna('', inplace=True)

        # MySQL 테이블에 데이터 삽입 전에 테이블 비우기
        with connection.cursor() as cursor:
            # 테이블 비우기
            cursor.execute("TRUNCATE TABLE 송장출력_특수출력_카카오")

        # MySQL 테이블에 데이터 삽입
        with connection.cursor() as cursor:
            for index, row in df.iterrows():
                sql = """
                INSERT INTO 송장출력_특수출력_카카오 (분리제품코드, 상품명, 적요)
                VALUES (%s, %s, %s)
                """
                cursor.execute(sql, (row['분리제품코드'], row['상품명'], row['적요']))

        # 변경사항 저장
        connection.commit()
        print("카카오 행사 코드 입력 끝")
    except Exception as e:
        print(f"Error in truncate_and_insert_kakao: {e}")
    finally:
        # 연결 종료
        connection.close()

def move_kakao_store_data():
    print("카카오톡스토어 옮기기 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 송장출력_사방넷원본변환_카카오행사변환 테이블 초기화
            truncate_sql = "TRUNCATE TABLE 송장출력_사방넷원본변환_카카오행사변환;"
            cursor.execute(truncate_sql)
            
            # 조건에 맞는 데이터를 새로운 테이블에 삽입
            insert_sql = """
            INSERT INTO 송장출력_사방넷원본변환_카카오행사변환 (
                msg1, msg2, msg3, msg4, msg5, msg6,
                수취인명, 전화번호1, 전화번호2, 우편번호, 주소,
                옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰,
                수집시간, 송장명, 품목코드, 택배비용, 박스크기,
                출력개수, 송장수량, 별표1, 별표2, 품목개수,
                택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분,
                송장구분최종, 위치, 위치변환
            )
            SELECT 
                msg1, msg2, msg3, msg4, msg5, msg6,
                수취인명, 전화번호1, 전화번호2, 우편번호, 주소,
                옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰,
                수집시간, 송장명, 품목코드, 택배비용, 박스크기,
                출력개수, 송장수량, 별표1, 별표2, 품목개수,
                택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분,
                송장구분최종, 위치, 위치변환
            FROM 송장출력_사방넷원본변환
            WHERE 쇼핑몰 = '카카오톡스토어';
            """
            cursor.execute(insert_sql)
            connection.commit()  # 변경사항을 데이터베이스에 반영

            print(f"Inserted {cursor.rowcount} rows.")
            print("카카오톡스토어 옮기기 끝")
    except Exception as e:
        print(f"Error in move_kakao_store_data: {e}")
    finally:
        connection.close()  # 데이터베이스 연결 종료

def kakao_store_event_check():
    print("카카오톡스토어 행사품목확인 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 조건에 맞지 않는 행 삭제
            delete_sql = """
            DELETE FROM 송장출력_사방넷원본변환_카카오행사변환
            WHERE 품목코드 NOT IN (
                SELECT 분리제품코드 FROM 송장출력_특수출력_카카오
            );
            """
            cursor.execute(delete_sql)
            connection.commit()  # 변경사항을 데이터베이스에 반영

            print(f"Deleted {cursor.rowcount} rows.")  # 삭제된 행 수 출력
            print("카카오톡스토어 행사품목확인 끝")
    except Exception as e:
        print(f"Error in kakao_store_event_check: {e}")
    finally:
        connection.close()  # 데이터베이스 연결 종료

def kakao_store_price_update():
    print("카카오톡스토어 행사품목가격가져오기 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 1. 택배비용 컬럼을 적요 값으로 업데이트
            update_sql_1 = """
            UPDATE 송장출력_사방넷원본변환_카카오행사변환 AS t1
            JOIN 송장출력_특수출력_카카오 AS t2
            ON t1.품목코드 = t2.분리제품코드
            SET t1.택배비용 = t2.적요;
            """
            cursor.execute(update_sql_1)
            connection.commit()  # 변경사항을 데이터베이스에 반영
            print(f"Step 1: Updated {cursor.rowcount} rows for 택배비용 with 적요.")

            # 2. 택배비용 값을 수량과 곱하여 업데이트
            update_sql_2 = """
            UPDATE 송장출력_사방넷원본변환_카카오행사변환
            SET 택배비용 = 택배비용 * 수량;
            """
            cursor.execute(update_sql_2)
            connection.commit()  # 변경사항을 데이터베이스에 반영
            print(f"Step 2: Updated {cursor.rowcount} rows for 택배비용 with multiplied value.")
            print("카카오톡스토어 행사품목가격가져오기 끝")
    except Exception as e:
        print(f"Error in kakao_store_price_update: {e}")
    finally:
        connection.close()  # 데이터베이스 연결 종료

def kakao_store_price_sum_update():
    print("카카오톡스토어 행사품목가격 업데이트 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 주소별 택배비용 합산 값을 박스크기 컬럼에 업데이트
            update_sql = """
            UPDATE 송장출력_사방넷원본변환_카카오행사변환 AS t1
            JOIN (
                SELECT 주소, SUM(택배비용) AS 합산택배비용
                FROM 송장출력_사방넷원본변환_카카오행사변환
                GROUP BY 주소
            ) AS t2
            ON t1.주소 = t2.주소
            SET t1.박스크기 = t2.합산택배비용;
            """
            cursor.execute(update_sql)
            connection.commit()  # 변경사항을 데이터베이스에 반영

            print(f"Updated {cursor.rowcount} rows.")
            print("카카오톡스토어 행사품목가격 업데이트 끝")
    except Exception as e:
        print(f"Error in kakao_store_price_sum_update: {e}")
    finally:
        connection.close()  # 데이터베이스 연결 종료

def kakao_event_exclude_delete():
    print("카카오행사 제외삭제 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 박스크기 값이 29999 이상인 행을 제외하고 나머지 행을 삭제
            delete_sql = """
            DELETE FROM 송장출력_사방넷원본변환_카카오행사변환
            WHERE 박스크기 < 29999;
            """
            cursor.execute(delete_sql)
            connection.commit()  # 변경사항을 데이터베이스에 반영

            print(f"Deleted {cursor.rowcount} rows.")
            print("카카오행사 제외삭제 끝")
    except Exception as e:
        print(f"Error in kakao_event_exclude_delete: {e}")
    finally:
        connection.close()  # 데이터베이스 연결 종료

def kakao_event_exclude_delete_2():
    print("카카오행사 제외삭제2 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 주소 값으로 중복된 행을 삭제
            delete_sql = """
            DELETE t1 FROM 송장출력_사방넷원본변환_카카오행사변환 t1
            INNER JOIN (
                SELECT MIN(id) as min_id, 주소
                FROM 송장출력_사방넷원본변환_카카오행사변환
                GROUP BY 주소
                HAVING COUNT(*) > 1
            ) t2
            ON t1.주소 = t2.주소 AND t1.id > t2.min_id;
            """
            cursor.execute(delete_sql)
            connection.commit()  # 변경사항을 데이터베이스에 반영

            print(f"Deleted {cursor.rowcount} rows.")
            print("카카오행사 제외삭제2 끝")
    except Exception as e:
        print(f"Error in kakao_event_exclude_delete_2: {e}")
    finally:
        connection.close()  # 데이터베이스 연결 종료

def kakao_event_final():
    print("카카오행사 최종마무리 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 옵션명, 송장명, 품목코드 컬럼 업데이트
            update_sql = """
            UPDATE 송장출력_사방넷원본변환_카카오행사변환
            SET 옵션명 = '♥리뷰약속♥사은품_아토_해물모듬 600g',
                송장명 = '♥리뷰약속♥사은품_아토_해물모듬 600g',
                품목코드 = '3702',
                수량 = '1';
            """
            cursor.execute(update_sql)
            connection.commit()  # 변경사항을 데이터베이스에 반영
            print(f"Updated {cursor.rowcount} rows for 옵션명, 송장명, 품목코드.")

            # 택배비용과 박스크기 컬럼 삭제
            alter_sql = """
            ALTER TABLE 송장출력_사방넷원본변환_카카오행사변환
            SET 택배비용 = NULL,
                박스크기 = NULL;
            """
            cursor.execute(alter_sql)
            connection.commit()  # 변경사항을 데이터베이스에 반영
            print("Deleted 택배비용 and 박스크기 columns.")
            print("카카오행사 최종마무리 끝")
    except Exception as e:
        print(f"Error in kakao_event_final: {e}")
    finally:
        connection.close()  # 데이터베이스 연결 종료

def main():
    truncate_and_insert_kakao()
    time.sleep(1)

    move_kakao_store_data()
    time.sleep(1)

    kakao_store_event_check()
    time.sleep(1)

    kakao_store_price_update()
    time.sleep(1)

    kakao_store_price_sum_update()
    time.sleep(1)

    kakao_event_exclude_delete()
    time.sleep(1)

    kakao_event_exclude_delete_2()
    time.sleep(1)

    kakao_event_final()
    time.sleep(1)

if __name__ == "__main__":
    main()

# ---. 송장 코드 업데이트 시작
print("송장 코드 업데이트 시작")

import pymysql

def move_all_data():
    print("데이터 이동 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 데이터가 있는지 확인
            check_sql = "SELECT COUNT(*) as cnt FROM 송장출력_사방넷원본변환_카카오행사변환"
            cursor.execute(check_sql)
            result = cursor.fetchone()

            if result['cnt'] == 0:
                print("송장출력_사방넷원본변환_카카오행사변환 테이블에 데이터가 없습니다. 다음 단계로 넘어갑니다.")
                return

            # 데이터 이동
            insert_sql = """
            INSERT INTO 송장출력_사방넷원본변환 (
                msg1, msg2, msg3, msg4, msg5, msg6,
                수취인명, 전화번호1, 전화번호2, 우편번호, 주소,
                옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰,
                수집시간, 송장명, 품목코드, 출력개수, 송장수량,
                별표1, 별표2, 품목개수, 택배수량, 택배수량1,
                택배수량합산, 송장구분자, 송장구분, 송장구분최종,
                위치, 위치변환
            )
            SELECT 
                msg1, msg2, msg3, msg4, msg5, msg6,
                수취인명, 전화번호1, 전화번호2, 우편번호, 주소,
                옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰,
                수집시간, 송장명, 품목코드, 출력개수, 송장수량,
                별표1, 별표2, 품목개수, 택배수량, 택배수량1,
                택배수량합산, 송장구분자, 송장구분, 송장구분최종,
                위치, 위치변환
            FROM 송장출력_사방넷원본변환_카카오행사변환;
            """
            cursor.execute(insert_sql)
            connection.commit()
            print(f"Moved {cursor.rowcount} rows to 송장출력_사방넷원본변환.")

    except Exception as e:
        print(f"Error in move_all_data: {e}")
    finally:
        connection.close()
        print("데이터 이동 완료")

if __name__ == "__main__":
    move_all_data()


import pymysql

def update_table_order_by_address():
    print("주소로 오름차순 정렬 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 기존 테이블의 데이터를 정렬된 상태로 임시 테이블에 복사
            temp_table_sql = """
            CREATE TEMPORARY TABLE temp_table AS
            SELECT * FROM 송장출력_사방넷원본변환
            ORDER BY 주소 ASC;
            """
            cursor.execute(temp_table_sql)

            # 기존 테이블의 데이터를 삭제
            delete_sql = "DELETE FROM 송장출력_사방넷원본변환;"
            cursor.execute(delete_sql)

            # 임시 테이블의 데이터를 기존 테이블로 복사
            insert_sql = """
            INSERT INTO 송장출력_사방넷원본변환
            SELECT * FROM temp_table;
            """
            cursor.execute(insert_sql)

            # 임시 테이블 삭제
            drop_temp_table_sql = "DROP TEMPORARY TABLE temp_table;"
            cursor.execute(drop_temp_table_sql)

            # 변경사항 저장
            connection.commit()

            print("주소로 오름차순 정렬 완료")
    except Exception as e:
        print(f"Error in update_table_order_by_address: {e}")
    finally:
        connection.close()
        print("주소로 오름차순 정렬 종료")

if __name__ == "__main__":
    update_table_order_by_address()





# ---. 송장 코드 업데이트 시작
print("송장 코드 업데이트 시작")

import pymysql

# 데이터베이스 연결 설정
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci'
)

try:
    with conn.cursor() as cursor:
        # 품목코드가 비어있는 행을 찾기
        select_sql = """
        SELECT id
        FROM 송장출력_사방넷원본변환
        WHERE 품목코드 = '' OR 품목코드 IS NULL
        """
        cursor.execute(select_sql)
        results = cursor.fetchall()

        # 품목코드와 송장명을 업데이트
        update_sql = """
        UPDATE 송장출력_사방넷원본변환
        SET 품목코드 = '0000', 송장명 = '--'
        WHERE id = %s
        """
        for row in results:
            cursor.execute(update_sql, (row[0],))

        conn.commit()

finally:
    conn.close()

print("코드 업데이트 끝")
# ---끝





# ---. 송장 이름외자 변경 시작
print("송장 이름외자 변경 시작")
# ---시작

import pymysql
import time

# 데이터베이스 연결 설정
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci'
)

try:
    with conn.cursor() as cursor:
        # 수취인명이 1글자인 행을 찾기
        select_sql = """
        SELECT id, 수취인명
        FROM 송장출력_사방넷원본변환
        WHERE CHAR_LENGTH(수취인명) = 1
        """
        cursor.execute(select_sql)
        results = cursor.fetchall()

        # 수취인명을 두 번 반복하여 업데이트
        update_sql = """
        UPDATE 송장출력_사방넷원본변환
        SET 수취인명 = CONCAT(수취인명, 수취인명)
        WHERE id = %s
        """
        for row in results:
            cursor.execute(update_sql, (row[0],))

        conn.commit()

finally:
    conn.close()

# ---. 이름외자 변경 끝
print("이름외자 변경 끝")
# ---끝

# 짧은 휴식
time.sleep(1)


# ---. 송장'메세지' 넣기
print("송장 메세지 넣기 시작")
# ---시작
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 쿼리 작성
        sql = """
        UPDATE 송장출력_사방넷원본변환 AS s
        LEFT JOIN 송장출력_메세지 AS m ON s.쇼핑몰 = m.쇼핑몰
        SET 
            s.msg1 = IFNULL(m.msg1, (SELECT msg1 FROM 송장출력_메세지 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg2 = IFNULL(m.msg2, (SELECT msg2 FROM 송장출력_메세지 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg3 = IFNULL(m.msg3, (SELECT msg3 FROM 송장출력_메세지 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg4 = IFNULL(m.msg4, (SELECT msg4 FROM 송장출력_메세지 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg5 = IFNULL(m.msg5, (SELECT msg5 FROM 송장출력_메세지 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg6 = IFNULL(m.msg6, (SELECT msg6 FROM 송장출력_메세지 WHERE 쇼핑몰 = '나머지' LIMIT 1))
        """
        
        # 쿼리 실행
        cursor.execute(sql)
        
    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

# ---. 송장'메세지' 넣기
print("송장 메세지 넣기 끝")
# ---끝


import time

time.sleep(1)




# ---. 이카운트 박스수량 넣기
print("이카운트 박스수량 넣기 시작")
# ---시작
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 쿼리 작성
        sql = """
        UPDATE 송장출력_사방넷원본변환 AS s
        JOIN 품목등록 AS p ON s.품목코드 = p.품목코드
        SET s.택배수량 = IFNULL(p.택배수량, 10)
        """
        
        # 쿼리 실행
        cursor.execute(sql)
        
    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()
# ---. 이카운트 박스수량 넣기
print("이카운트 박스수량 넣기 끝")
# ---끝


import time

time.sleep(1)





# ---. 송장구분자넣기
print("송장구분자넣기 시작")
# ---시작

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 쿼리 작성
        sql = """
        UPDATE 송장출력_사방넷원본변환
        SET 송장구분자 = LEFT(TRIM(송장명), 3)
        """
        
        # 쿼리 실행
        cursor.execute(sql)
        
    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()
# ---. 송장구분자넣기
print("송장구분자넣기 끝")
# ---끝


import time

time.sleep(1)




# ---. 송장구분하기 출고지별
print("출고지별로 송장구분하기 시작")
# --시작
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 쿼리 작성
        sql = """
        UPDATE 송장출력_사방넷원본변환
        SET 송장구분 = 
            CASE 
                WHEN 송장구분자 = 'GR_' THEN '위탁'
                WHEN 송장구분자 = 'AR_' THEN '위탁'
                WHEN 송장구분자 = 'BS_' THEN '부산'
                WHEN 송장구분자 = 'GS_' THEN '공산'
                WHEN 송장구분자 = 'YC_' THEN '청과'
                WHEN 송장구분자 = 'HY_' THEN '청과'
                WHEN 송장구분자 = 'GC_' THEN '감천'
                ELSE '냉동'
            END
        """
        
        # 쿼리 실행
        cursor.execute(sql)
        
    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

# ---. 송장구분하기 출고지별
print("출고지별로 송장구분하기 끝")
# --끝

#판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료

import pymysql

def truncate_and_insert():
    print("테이블 비우기 및 데이터 삽입 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 송장출력_주문정보 테이블의 모든 데이터를 삭제 (TRUNCATE)
            truncate_sql = "TRUNCATE TABLE 송장출력_주문정보;"
            cursor.execute(truncate_sql)
            print("송장출력_주문정보 테이블 비우기 완료")

            # 송장출력_사방넷원본변환에서 데이터를 선택하여 송장출력_주문정보 테이블에 삽입
            insert_sql = """
            INSERT INTO 송장출력_주문정보 (
                주문번호_쇼핑몰,
                주문번호_사방넷,
                수집일,
                쇼핑몰,
                받는사람,
                상품명,
                물류용코드,
                코드번호,
                수량,
                배송송,
                결제금액,
                주문금액,
                면과세_구분,
                결제수단,
                주소,
                전화번호,
                전화번호2,
                주문상태
            )
            SELECT 
                `주문번호(쇼핑몰)` AS 주문번호_쇼핑몰,
                주문번호,
                수집시간 AS 수집일,
                쇼핑몰,
                수취인명 AS 받는사람,
                옵션명 AS 상품명,
                품목코드 AS 물류용코드,
                품목코드 AS 코드번호,
                수량,
                배송송,
                결제금액,
                주문금액,
                면과세구분 AS 면과세_구분,
                결제수단,
                주소,
                송장구분 AS 전화번호,  -- '송장구분' 값을 '전화번호'로 삽입
                전화번호2,
                주문상태
            FROM 송장출력_사방넷원본변환;
            """
            cursor.execute(insert_sql)
            connection.commit()
            print("데이터 삽입 완료 (송장출력_주문정보)")

    except Exception as e:
        print(f"오류 발생: {e}")
    finally:
        # 연결 종료
        connection.close()

def update_product_names():
    print("상품명 업데이트 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        charset='utf8mb4',
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 상품명에 따른 업데이트 쿼리
            update_query = """
            UPDATE 송장출력_주문정보
            SET 전화번호 = CASE
                WHEN 전화번호 = '위탁' THEN '본사창고'
                WHEN 전화번호 = '부산' THEN '부산창고'
                WHEN 전화번호 = '공산' THEN '경기공산'
                WHEN 전화번호 = '청과' THEN '부산청과'
                WHEN 전화번호 = '냉동' THEN '본사창고'
                WHEN 전화번호 = '감천' THEN '감천항 물류센터'
                ELSE '본사창고'
            END;
            """
            cursor.execute(update_query)
            connection.commit()
            print("상품명 업데이트 완료")

    except Exception as e:
        print(f"오류 발생: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
if __name__ == "__main__":
    truncate_and_insert()
    update_product_names()


import pandas as pd
import mysql.connector
from datetime import datetime
import dropbox
import requests
import xlsxwriter  # xlsxwriter 패키지 추가

# MySQL 연결 설정
connection = mysql.connector.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci'
)

cursor = connection.cursor()
# 모든 행을 가져오는 쿼리
query = "SELECT * FROM 송장출력_주문정보"
cursor.execute(query)
result = cursor.fetchall()
columns = cursor.column_names
df = pd.DataFrame(result, columns=columns)
connection.close()

# 파일 저장 및 Dropbox 업로드
now = datetime.now()
file_path = f'판매입력/판매입력_이카운트자료_{now.strftime("%y%m%d_%H시%M분")}.xlsx'
with pd.ExcelWriter(file_path, engine='xlsxwriter') as writer:
    df.to_excel(writer, index=False, header=True)  # 엑셀 파일로 저장 (header=False로 설정)
    workbook  = writer.book
    worksheet = writer.sheets['Sheet1']

# Dropbox 액세스 토큰 갱신 및 파일 업로드
refresh_token = '1CLvznLL7BwAAAAAAAAAAagAlVx3w9P6NGyYjsITAxrSG9vlAEc31ohZZwYhUAB_'
app_key = 'vlxh3ec9nq5fi5t'
app_secret = 'h5rp5n0w9cp4ifk'
token_url = "https://api.dropbox.com/oauth2/token"
params = {
    'refresh_token': refresh_token,
    'grant_type': 'refresh_token',
    'client_id': app_key,
    'client_secret': app_secret
}
response = requests.post(token_url, data=params)
access_token = response.json().get('access_token')

dbx = dropbox.Dropbox(access_token)
with open(file_path, "rb") as f:
    dbx.files_upload(f.read(), f'/판매입력/{file_path}', mode=dropbox.files.WriteMode("overwrite"))
shared_link_metadata = dbx.sharing_create_shared_link_with_settings(f'/판매입력/{file_path}')

# 시간대별 차수 설정
hour = now.hour
minute = now.minute

if 1 <= hour <= 7:
    batch = "1차"
elif 8 <= hour <= 10:
    batch = "2차"
elif 11 <= hour <= 11:
    batch = "3차"
elif 12 <= hour <= 13:
    batch = "4차"
elif 14 <= hour <= 15:
    batch = "5차"
elif 16 <= hour <= 18:
    batch = "막차"
elif 19 <= hour <= 23:
    batch = "추가"
else:
    batch = ""  # 24시(0시)는 배치 처리하지 않음

# 카카오워크 메시지 전송
app_key = 'b36ed46e.0b55706350e94ef8b49e8647a97ae1b7'
chatroom_id = '10545642'
time_string = now.strftime("%m월 %d일 %H시 %M분")

def send_kakao_work_message(app_key, chatroom_id, file_url, batch):
    url = "https://api.kakaowork.com/v1/messages.send"
    headers = {
        "Authorization": f"Bearer {app_key}",
        "Content-Type": "application/json"
    }
    data = {
        "conversation_id": chatroom_id,
        "text": f"{batch} - 판매입력_이카운트자료",
        "blocks": [
            {
                "type": "header",
                "text": f"{batch} - 판매입력_이카운트자료",
                "style": "blue"
            },
            {
                "type": "text",
                "text": "파일 다운로드 후 DB로 한번 더 돌려주세요",
                "markdown": True
            },
            {
                "type": "button",
                "text": "판매입력 파일 다운로드",
                "style": "default",
                "action_type": "open_system_browser",
                "value": file_url
            }
        ]
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()

result = send_kakao_work_message(app_key, chatroom_id, shared_link_metadata.url, batch)
print(result)

import time

time.sleep(1)

#판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료판매입력자료
import time
time.sleep(1)


print("송장구분 에 따라 메세지 입력하기 시작")

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장구분이 '부산'인 경우 업데이트 쿼리
        sql_busan = """
        UPDATE 송장출력_사방넷원본변환 AS s
        LEFT JOIN 송장출력_메세지부산 AS m ON s.쇼핑몰 = m.쇼핑몰
        SET 
            s.msg1 = IFNULL(m.msg1, (SELECT msg1 FROM 송장출력_메세지부산 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg2 = IFNULL(m.msg2, (SELECT msg2 FROM 송장출력_메세지부산 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg3 = IFNULL(m.msg3, (SELECT msg3 FROM 송장출력_메세지부산 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg4 = IFNULL(m.msg4, (SELECT msg4 FROM 송장출력_메세지부산 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg5 = IFNULL(m.msg5, (SELECT msg5 FROM 송장출력_메세지부산 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg6 = IFNULL(m.msg6, (SELECT msg6 FROM 송장출력_메세지부산 WHERE 쇼핑몰 = '나머지' LIMIT 1))
        WHERE s.송장구분 = '부산'
        """
        
        # 부산에 대한 쿼리 실행
        cursor.execute(sql_busan)

        # 송장구분이 '청과'인 경우 업데이트 쿼리
        sql_chungkwa = """
        UPDATE 송장출력_사방넷원본변환 AS s
        LEFT JOIN 송장출력_메세지청과 AS m ON s.쇼핑몰 = m.쇼핑몰
        SET 
            s.msg1 = IFNULL(m.msg1, (SELECT msg1 FROM 송장출력_메세지청과 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg2 = IFNULL(m.msg2, (SELECT msg2 FROM 송장출력_메세지청과 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg3 = IFNULL(m.msg3, (SELECT msg3 FROM 송장출력_메세지청과 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg4 = IFNULL(m.msg4, (SELECT msg4 FROM 송장출력_메세지청과 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg5 = IFNULL(m.msg5, (SELECT msg5 FROM 송장출력_메세지청과 WHERE 쇼핑몰 = '나머지' LIMIT 1)),
            s.msg6 = IFNULL(m.msg6, (SELECT msg6 FROM 송장출력_메세지청과 WHERE 쇼핑몰 = '나머지' LIMIT 1))
        WHERE s.송장구분 = '청과'
        """
        
        # 청과에 대한 쿼리 실행
        cursor.execute(sql_chungkwa)
        
    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

print("송장 메세지 넣기 끝")


print("송장구분 에 따라 메세지 입력하기 끝")

import time

time.sleep(1)

#톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표
import pandas as pd
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'  # 데이터베이스 명시적으로 지정

# Excel 파일 경로
excel_file = '0.관리자파일/톡딜불가.xlsx'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,  # 데이터베이스 선택 필수!
    cursorclass=pymysql.cursors.DictCursor
)

try:
    # Excel 파일 읽기
    df = pd.read_excel(excel_file, header=0)  # 첫 번째 행을 컬럼으로 사용

    # 컬럼명 지정
    df.columns = ['쇼핑몰', '품목코드', '상품명', '필수코드1', '필수코드1상품명', 
                  '필수코드2', '필수코드2상품명', '필수코드3', '필수코드3상품명']

    # 빈 행 제거
    df = df.dropna(how='all')

    # NaN 값을 빈 문자열("")로 대체 (경고 해결)
    df = df.astype(str).fillna('')

    with connection.cursor() as cursor:
        # 기존 데이터 삭제
        cursor.execute("USE gramwonlogis")  # 🔹 MySQL에서 데이터베이스 선택
        cursor.execute("TRUNCATE TABLE 송장출력_톡딜불가")

        # 데이터 삽입
        for index, row in df.iterrows():
            sql = """
            INSERT INTO 송장출력_톡딜불가 (쇼핑몰, 품목코드, 상품명, 필수코드1, 필수코드1상품명, 
                                         필수코드2, 필수코드2상품명, 필수코드3, 필수코드3상품명)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
            """
            cursor.execute(sql, (
                row['쇼핑몰'], row['품목코드'], row['상품명'], row['필수코드1'], row['필수코드1상품명'], 
                row['필수코드2'], row['필수코드2상품명'], row['필수코드3'], row['필수코드3상품명']
            ))

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

# 실행 완료 메시지 출력
print("📢 톡딜불가 데이터 저장 완료 ✅")

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'  # 데이터베이스 명시

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,  # 데이터베이스 선택
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 1️⃣ 송장출력_사방넷원본변환.품목코드 와 송장출력_톡딜불가.품목코드 가 같은 행 찾기
        sql = """
        SELECT 
            A.품목코드 AS 사방넷_품목코드, A.쇼핑몰 AS 사방넷_쇼핑몰, A.주소 AS 사방넷_주소,
            B.품목코드 AS 톡딜_품목코드, B.쇼핑몰 AS 톡딜_쇼핑몰, 
            B.필수코드1, B.필수코드2, B.필수코드3
        FROM 송장출력_사방넷원본변환 AS A
        JOIN 송장출력_톡딜불가 AS B
        ON A.품목코드 = B.품목코드
        """
        cursor.execute(sql)
        matching_rows = cursor.fetchall()

        for row in matching_rows:
            # 2️⃣ 쇼핑몰이 같은지 확인
            if row['사방넷_쇼핑몰'] == row['톡딜_쇼핑몰']:  
                # 3️⃣ 주소가 같은 다른 행이 있는지 확인
                check_address_sql = """
                SELECT 품목코드 
                FROM 송장출력_사방넷원본변환 
                WHERE 주소 = %s
                """
                cursor.execute(check_address_sql, (row['사방넷_주소'],))
                address_rows = cursor.fetchall()

                if not address_rows:  # 같은 주소를 가진 다른 행이 없다면
                    update_sql = """
                    UPDATE 송장출력_사방넷원본변환 
                    SET 별표1 = '***'
                    WHERE 주소 = %s
                    """
                    cursor.execute(update_sql, (row['사방넷_주소'],))
                else:
                    # 4️⃣ 필수코드1, 필수코드2, 필수코드3 중 하나와 품목코드가 같은지 확인
                    필수코드_일치 = any(address_row['품목코드'] in [row['필수코드1'], row['필수코드2'], row['필수코드3']]
                                    for address_row in address_rows)

                    if not 필수코드_일치:
                        update_sql = """
                        UPDATE 송장출력_사방넷원본변환 
                        SET 별표1 = '***'
                        WHERE 주소 = %s
                        """
                        cursor.execute(update_sql, (row['사방넷_주소'],))

    # 변경 사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

# 실행 완료 메시지 출력
print("✅ '별표1' 컬럼 업데이트 완료!")


#톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표톡딜별표
# ---. 별표파일 데이터 검색
print("별표파일 데이터 검색 시작")
# --시작

import pandas as pd
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# Excel 파일 경로
excel_file = '0.관리자파일/별표송장.xlsx'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    # Excel 파일 읽기
    df = pd.read_excel(excel_file, header=None)

    # 첫 번째 행(헤더) 삭제
    df = df.iloc[1:]

    # 빈 행 제거
    df = df.dropna(how='all')

    # 열 이름 직접 지정
    df.columns = ['품절제품코드', '상품명', '적요', '배송메세지', '수취인명', '내용']

    # 인덱스 재설정
    df = df.reset_index(drop=True)

    # NaN 값을 빈 문자열("")로 대체
    df.fillna('', inplace=True)

    with connection.cursor() as cursor:
        # 송장출력_관리자 테이블 비우기 및 데이터 삽입
        cursor.execute("TRUNCATE TABLE 송장출력_관리자")
        for index, row in df.iterrows():
            if row['품절제품코드'] != '' or row['상품명'] != '':
                sql = """
                INSERT INTO 송장출력_관리자 (품절제품코드, 상품명)
                VALUES (%s, %s)
                """
                cursor.execute(sql, (row['품절제품코드'], row['상품명']))

        # 송장출력_관리자_배송메세지 테이블 비우기 및 데이터 삽입
        cursor.execute("TRUNCATE TABLE 송장출력_관리자_배송메세지")
        for index, row in df.iterrows():
            if row['배송메세지'] != '':
                sql = """
                INSERT INTO 송장출력_관리자_배송메세지 (배송메세지)
                VALUES (%s)
                """
                cursor.execute(sql, (row['배송메세지'],))

        # 송장출력_관리자_이름 테이블 비우기 및 데이터 삽입
        cursor.execute("TRUNCATE TABLE 송장출력_관리자_이름")
        for index, row in df.iterrows():
            if row['수취인명'] != '':
                sql = """
                INSERT INTO 송장출력_관리자_이름 (수취인명)
                VALUES (%s)
                """
                cursor.execute(sql, (row['수취인명'],))

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

# ---. 별표파일 데이터 검색
print("별표파일 데이터 검색 끝")
# --끝

import time

time.sleep(1)


# ---. 배송메세지에서 별표지우기
print("배송메세지에서 별표지우기 시작")
# --시작

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_사방넷원본변환 테이블의 배송메세지에서 ★ 기호를 제거합니다.
        sql = """
        UPDATE 송장출력_사방넷원본변환
        SET 배송메세지 = REPLACE(배송메세지, '★', '')
        WHERE 배송메세지 LIKE '%★%'
        """
        
        # 쿼리 실행
        cursor.execute(sql)
        
    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

# ---. 배송메세지에서 별표지우기
print("배송메세지에서 별표지우기 끝")
# --끝


import time

time.sleep(1)





# ---. 별표 품목코드 데이터입력
print("별표 품목코드 데이터입력 시작")
# --시작

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_사방넷원본변환 테이블의 품목코드와 송장출력_관리자 테이블의 품절제품코드가 일치하는 행을 찾고,
        # 그에 해당하는 송장출력_사방넷원본변환 테이블의 별표1 컬럼에 별표 세 개를 넣어줍니다.
        sql = """
        UPDATE 송장출력_사방넷원본변환 AS s
        JOIN 송장출력_관리자 AS a ON s.품목코드 = a.품절제품코드
        SET s.별표1 = '★★★'
        """
        
        # 쿼리 행
        cursor.execute(sql)
        
    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()


# ---. 별표 품목코드 데이터입력
print("별표 품목코드 데이터입력 끝")
# --끝

# ---. 별표 배송메세지 데이터입력
print("별표 배송메세지 데이터입력 시작")
# --시작


import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_사방넷원본변환 테이블의 배송메세지에 송장출력_관리자_배송메세지 테이블의 배송메세지가 TRIM 함수를 이용해 빈칸을 제거한 후 포함되는 경우에
        # 해당하는 행을 찾고, 그에 해당하는 송장출력_사방넷원본변환 테이블의 별표1 컬럼에 별표 세 개를 넣어줍니다.
        sql = """
        UPDATE 송장출력_사방넷원본변환 AS s
        JOIN 송장출력_관리자_배송메세지 AS a ON TRIM(s.배송메세지) LIKE CONCAT('%', TRIM(a.배송메세지), '%')
        SET s.별표1 = '★★★'
        """
        
        # 쿼리 실행
        cursor.execute(sql)
        
    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()


# ---. 별표 배송메세지 데이터입력
print("별표 배송메세지 데이터입력 끝")
# --끝


import time

time.sleep(1)






# ---. 별표 수취인 데이터입력
print("별표 수취인 데이터입력 시작")
# --시작


import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_사방넷원본변환 테이블의 수취인명과 송장출력_관리자_이름 테이블의 수취인명이 일치하는 행을 찾고,
        # 그에 해당하는 송장출력_사방넷원본변환 테이블의 별표1 컬럼에 별표 세 개를 넣어줍니다.
        sql = """
        UPDATE 송장출력_사방넷원본변환 AS s
        JOIN 송장출력_관리자_이름 AS a ON s.수취인명 = a.수취인명
        SET s.별표1 = '★★★'
        """
        
        # 쿼리 실행
        cursor.execute(sql)
        
    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()


# ---. 별표 수취인 데이터입력
print("별표 수취인 데이터입력 끝")
# --끝

import time

time.sleep(1)





# ---. 별표 제주도 찾기
print("별표 제주도 찾기 시작")
# --시작

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소에 '제주특별' 또는 '제주 제주' 포함 시 별표2에 '제주' 삽입
        sql = """
        UPDATE 송장출력_사방넷원본변환
        SET 별표2 = '제주'
        WHERE 주소 LIKE '%제주특별%' OR 주소 LIKE '%제주 제주%'
        """
        
        # 쿼리 실행
        cursor.execute(sql)
        
    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()




# ---. 별표 제주도 찾기
print("별표 제주도 찾기 끝")
# --끝


import time

time.sleep(1)

# ---. 별표 고객 공통 마킹
print("별표 고객 공통 마킹 시작")

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소와 수취인명 조합이 '★★★'인 경우 해당 조합의 모든 행의 별표1을 '★★★'로 업데이트
        sql_update = """
        UPDATE 송장출력_사방넷원본변환 AS t1
        JOIN (
            SELECT 주소, 수취인명
            FROM 송장출력_사방넷원본변환
            WHERE 별표1 = '★★★'
        ) AS t2 ON t1.주소 = t2.주소 AND t1.수취인명 = t2.수취인명
        SET t1.별표1 = '★★★'
        """
        cursor.execute(sql_update)
        connection.commit()
        print(f"업데이트된 행 수: {cursor.rowcount}")

finally:
    # 연결 종료
    connection.close()

# ---. 별표 고객 공통 마킹
print("별표 고객 공통 마킹 끝")



import time

time.sleep(1)


# ---. 박스상품 명칭변경
print("박스상품 명칭변경 시작")

import pymysql

# 데이터베이스 연결 설정
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci'
)

try:
    with conn.cursor() as cursor:
        # '박스'를 포함하는 송장명을 가진 행을 찾기
        select_sql = """
        SELECT id, 송장명
        FROM 송장출력_사방넷원본변환
        WHERE 송장명 LIKE '%박스%'
        """
        cursor.execute(select_sql)
        results = cursor.fetchall()

        # 송장명 앞에 기호 추가하여 업데이트
        update_sql = """
        UPDATE 송장출력_사방넷원본변환
        SET 송장명 = CONCAT('▨▧▦ ', 송장명)
        WHERE id = %s
        """
        for row in results:
            cursor.execute(update_sql, (row[0],))

        conn.commit()

finally:
    conn.close()


# ---. 박스상품 명칭변경
print("박스상품 명칭변경 끝")

import time

time.sleep(1)


# ---. 택배 박스 낱개 나누기
print("택배 박스 낱개 나누기 시작")
# --시작

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량 컬럼의 값이 1인 경우에는 '박스', 그 외의 경우에는 '낱개'로 변경합니다.
        sql = """
            UPDATE 송장출력_사방넷원본변환
            SET 택배수량1 = CASE WHEN CAST(택배수량 AS UNSIGNED) = 1 THEN '박스' ELSE '낱개' END
            WHERE 택배수량 REGEXP '^[0-9]+$';
        """
        
        # 쿼리 실행
        cursor.execute(sql)
        
    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()


# ---. 택배 박스 낱개 나누기
print("택배 박스 낱개 나누기 끝")
# --끝

import time

time.sleep(1)




# ---. 카카오 행사 송장 코드 검색
print("카카오 행사 송장 코드 시작")
# --시작

import pandas as pd
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# Excel 파일 경로
excel_file = '0.관리자파일/분리송장.xlsx'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    # Excel 파일 읽기
    df = pd.read_excel(excel_file)

    # NaN 값을 빈 문자열("")로 대체
    df.fillna('', inplace=True)

    # MySQL 테이블에 데이터 삽입 전에 테이블 비우기
    with connection.cursor() as cursor:
        # 테이블 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_분리출력")

    # MySQL 테이블에 데이터 삽입
    with connection.cursor() as cursor:
        for index, row in df.iterrows():
            sql = """
            INSERT INTO 송장출력_분리출력 (분리제품코드, 상품명, 적요)
            VALUES (%s, %s, %s)
            """
            cursor.execute(sql, (row['분리제품코드'], row['상품명'], row['적요']))

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

# ---. 카카오 행사 송장 코드
print("카카오 행사 송장 코드 끝")
# --끝

import time

time.sleep(1)






# ---. 송장 출고지별로 구분하기
print("송장 출고지별로 구분하기 시작")
# --시작

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # '송장구분최종' 컬럼 업데이트
        sql = """
        UPDATE 송장출력_사방넷원본변환
        SET `송장구분최종` = CONCAT(`송장구분`, IFNULL(`택배수량1`, ''))
        """
        cursor.execute(sql)
        
    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()



# ---. 송장 출고지별로 구분하기
print("송장 출고지별로 구분하기 끝")
# --끝


import time

time.sleep(1)




# ---. 냉동 렉 위치 입력
print("냉동 렉 위치 입력 시작")
# --시작

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 품목등록 테이블과 송장출력_사방넷원본변환 테이블을 조인하여 품목코드가 같은 행 찾기
        sql_select = """
        SELECT p.품목그룹2코드, s.품목코드
        FROM 품목등록 AS p
        JOIN 송장출력_사방넷원본변환 AS s ON p.품목코드 = s.품목코드
        """
        cursor.execute(sql_select)
        results = cursor.fetchall()

        # 결과를 송장출력_사방넷원본변환 테이블에 업데이트
        for result in results:
            sql_update = """
            UPDATE 송장출력_사방넷원본변환
            SET 위치 = %s
            WHERE 품목코드 = %s
            """
            cursor.execute(sql_update, (result['품목그룹2코드'], result['품목코드']))

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()



# ---. 냉동 렉 위치 입력
print("냉동 렉 위치 입력 끝")
# --끝

import time

time.sleep(1)






# ---. 냉동 공산 제품 중 작은 품목 합포장처리
print("냉동 공산 제품 중 작은 품목 합포장처리 시작")
# --시작

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 위치가 '공2' 이면서 택배수량이 20 이하인 행의 위치 값을 '공3'으로 변경
        sql_update_location_and_quantity = """
        UPDATE 송장출력_사방넷원본변환
        SET 위치 = '공3'
        WHERE 위치 = '공2' AND 택배수량 BETWEEN 20 AND 1000000
        """
        cursor.execute(sql_update_location_and_quantity)

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

# ---. 냉동 공산 제품 중 작은 품목 합포장처리
print("냉동 공산 제품 중 작은 품목 합포장처리 끝")
# --끝

import time

time.sleep(1)




# ---. 위치 업데이트 스크립트
print("빈 위치 업데이트 작업 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 빈 위치를 '99-1'로 업데이트
        update_query = """
        UPDATE 송장출력_사방넷원본변환
        SET 위치 = '99-1'
        WHERE 위치 IS NULL OR 위치 = ''
        """
        cursor.execute(update_query)
        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("빈 위치 업데이트 작업 끝")
# ---끝

import time

time.sleep(1)





# ---. 이름 주소 전화번호 합치기
print("이름 주소 전화번호 합치기 시작")
# --시작

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 위치 컬럼의 값이 '공2'인 행을 찾아서 해당 컬럼들을 업데이트
        sql_update_with_location = """
        UPDATE 송장출력_사방넷원본변환
        SET 위치변환 = CONCAT(위치, 품목코드, LPAD(수량, 2, '0'), 수취인명, 주소, 전화번호1)
        WHERE 위치 = '공2'
        """
        cursor.execute(sql_update_with_location)

        # 위치 컬럼의 값이 '공2'가 아닌 행을 찾아서 해당 컬럼들을 업데이트
        sql_update_without_location = """
        UPDATE 송장출력_사방넷원본변환
        SET 위치변환 = CONCAT(위치,'0',품목코드, LPAD(수량, 2, '0'), 수취인명, 주소, 전화번호1)
        WHERE 위치 != '공2'
        """
        cursor.execute(sql_update_without_location)

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()



# ---. 이름 주소 전화번호 합치기
print("이름 주소 전화번호 합치기 끝")
# --끝

import time

time.sleep(1)




# ---. 냉동창고 공산품 송장분리입력
print("냉동창고 공산품 송장분리입력 시작")
# --시작

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 위치 컬럼의 값이 '공2'인 행을 찾아서 주소 컬럼의 마지막에 '☆' 추가
        sql_update = """
        UPDATE 송장출력_사방넷원본변환
        SET 주소 = CONCAT(주소, '☆')
        WHERE 위치 = '공2'
        """
        cursor.execute(sql_update)

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()


# ---. 냉동창고 공산품 송장분리입력
print("냉동창고 공산품 송장분리입력 끝")
# --끝


import time

time.sleep(1)




# ---. 공통박스 분류작업
print("공통박스 분류작업 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
try:
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )
    with connection.cursor() as cursor:
        # 송장출력_공통박스 테이블의 내용을 truncate (초기화)
        sql_truncate = "TRUNCATE TABLE 송장출력_공통박스"
        cursor.execute(sql_truncate)
        connection.commit()  # 중요한 변경 사항 바로 커밋

        # 수량이 2 이상인 행만을 복사하여 추가
        sql_copy_rows = """
        INSERT INTO 송장출력_공통박스 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_사방넷원본변환
        WHERE 택배수량1 = '박스'
        ORDER BY  품목코드 ASC, 수취인명 ASC, 위치 ASC
        """
        cursor.execute(sql_copy_rows)
        connection.commit()  # 변경사항 저장

except pymysql.MySQLError as e:
    print("MySQL Error:", e)
finally:
    if connection:
        connection.close()  # 연결 종료

print("공통박스 분류작업 끝")
# --끝

import time

time.sleep(1)


# ---. 박스 공통늘리기 
print("박스 공통늘리기 시작")
# --시작

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 먼저 모든 행을 가져옵니다.
        sql_select = "SELECT * FROM 송장출력_공통박스"
        cursor.execute(sql_select)
        rows = cursor.fetchall()

        # 각 행을 '수량-1' 만큼 복사하여 삽입합니다.
        for row in rows:
            count = row['수량'] - 1  # 추가할 행의 수
            if count > 0:  # 수량이 1보다 큰 경우에만 처리
                sql_insert = """
                INSERT INTO 송장출력_공통박스
                (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
                """
                for _ in range(count):
                    cursor.execute(sql_insert, (row['msg1'], row['msg2'], row['msg3'], row['msg4'], row['msg5'], row['msg6'], row['수취인명'], row['전화번호1'], row['전화번호2'], row['우편번호'], row['주소'], row['옵션명'], row['수량'], row['배송메세지'], row['주문번호'], row['쇼핑몰'], row['수집시간'], row['송장명'], row['품목코드'], row['택배비용'], row['박스크기'], row['출력개수'], row['송장수량'], row['별표1'], row['별표2'], row['품목개수'], row['택배수량'], row['택배수량1'], row['택배수량합산'], row['송장구분자'], row['송장구분'], row['송장구분최종'], row['위치'], row['위치변환']))

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()


# ---. 박스 공통늘리기 
print("박스 공통늘리기 끝")
# --끝

import time

time.sleep(5)



# ---. 박스주문 순번 매기기
print("박스주문 순번 매기기 시작")
# --시작

import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor  # 결과를 딕셔너리 형태로 받기 위함
)

try:
    with conn.cursor() as cursor:
        # 위치변환 값을 기준으로 정렬하여 모든 데이터를 가져옴
        sql = "SELECT id, 위치변환 FROM 송장출력_공통박스 ORDER BY 위치변환, id"
        cursor.execute(sql)
        results = cursor.fetchall()

        # 현재 위치변환 값
        current_location = None
        counter = 1

        # 결과를 순회하면서 순번을 매김
        for row in results:
            if current_location != row['위치변환']:
                current_location = row['위치변환']
                counter = 1  # 위치변환 값이 바뀌면 순번을 리셋
            
            # 송장구분자 컬럼 업데이트 (중괄호 형식으로)
            formatted_number = f"({counter})"  # 숫자 앞뒤로 소괄호 추가
            update_sql = "UPDATE 송장출력_공통박스 SET 송장구분자=%s WHERE id=%s"
            cursor.execute(update_sql, (formatted_number, row['id']))
            counter += 1

        conn.commit()  # 변경사항을 데이터베이스에 반영

finally:
    conn.close()  # 데이터베이스 연결 종료

# ---. 박스주문 순번 매기기
print("박스주문 순번 매기기 끝")
# --끝

import time

time.sleep(1)



# ---. 박스주문 주소업데이트
print("박스주문 주소업데이트 시작")
# --시작


import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # '주소' 컬럼 업데이트 쿼리 실행
        update_sql = "UPDATE 송장출력_공통박스 SET 주소 = CONCAT(주소, 송장구분자)"
        cursor.execute(update_sql)
        conn.commit()  # 변경사항을 데이터베이스에 반영

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    conn.close()  # 데이터베이스 연결 종료


# ---. 박스주문 주소업데이트
print("박스주문 주소업데이트 끝")
# --끝

import time

time.sleep(1)

# ---. 박스주소 순번 매기기
print("박스주소 순번 매기기 시작")
# --끝

import pymysql

# 데이터베이스 연결 설정
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # 모든 주소 데이터를 불러옴
        sql = "SELECT id, 주소 FROM 송장출력_공통박스 ORDER BY 주소, id"
        cursor.execute(sql)
        results = cursor.fetchall()

        # 주소별 순번 매김을 위한 사전
        address_count = {}
        updates = []

        for row in results:
            address = row['주소']
            if address not in address_count:
                address_count[address] = 1
            else:
                address_count[address] += 1

            # 주소에 순번을 추가하여 업데이트
            new_address = f"{address} ({address_count[address]})" if address_count[address] > 1 else address
            updates.append((new_address, row['id']))

        # 업데이트된 주소를 데이터베이스에 반영
        update_sql = "UPDATE 송장출력_공통박스 SET 주소=%s WHERE id=%s"
        cursor.executemany(update_sql, updates)
        conn.commit()

finally:
    conn.close()



# ---. 박스주소 순번 매기기
print("박스주소 순번 매기기 끝")
# --끝

import time

time.sleep(1)


# ---. 박스주문 수량1로변경
print("박스주문 수량1로변경 시작")
# --시작


import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # '수량' 컬럼을 1로 업데이트 하는 쿼리 실행
        update_sql = "UPDATE 송장출력_공통박스 SET 수량 = 1"
        cursor.execute(update_sql)
        conn.commit()  # 변경사항을 데이터베이스에 반영

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    conn.close()  # 데이터베이스 연결 종료

# ---. 박스주문 수량1로변경
print("박스주문 수량1로변경 끝")
# --끝

import time

time.sleep(1)



# ---. 박스주문 유일자설정
print("박스주문 유일자설정 시작")
# --시작


import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # '위치변환' 컬럼을 업데이트 하는 쿼리 실행
        update_sql = "UPDATE 송장출력_공통박스 SET 위치변환 = CONCAT('0',위치, 품목코드, LPAD(수량, 2, '0'), 수취인명, 주소, 전화번호1)"
        cursor.execute(update_sql)
        conn.commit()  # 변경사항을 데이터베이스에 반영

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    conn.close()  # 데이터베이스 연결 종료


# ---. 박스주문 유일자설정
print("박스주문 유일자설정 끝")
# --끝

import time

time.sleep(1)


#공통박스 수량 처리 --------------------------------------------------------------------시작
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 품목코드별로 수량을 합산하여 출력개수에 업데이트
        sql_update_output_count = """
        UPDATE 송장출력_공통박스 AS t1 
        INNER JOIN (
            SELECT 품목코드, SUM(수량) AS total_quantity
            FROM 송장출력_공통박스
            GROUP BY 품목코드
        ) AS t2 ON t1.품목코드 = t2.품목코드
        SET t1.품목개수 = t2.total_quantity
        """
        cursor.execute(sql_update_output_count)

        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

#공통박스 수량 처리 --------------------------------------------------------------------끝





# ---. 공통작업 끝 -> 개별작업 시작
print("공통작업 끝 -> 개별작업 시작")
# --끝

# 박스구분서울과아닌것
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# 연결
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 1. 서울낱개 중 서울 주소 + 쇼핑몰 조건
        update_query_1 = """
        UPDATE 송장출력_사방넷원본변환
        SET 송장구분최종 = '서울낱개'
        WHERE 송장구분최종 = '냉동낱개'
          AND SUBSTRING(
                TRIM(SUBSTRING_INDEX(주소, ']', -1)), 1, 2
              ) = '서울'
          AND 쇼핑몰 IN ('Cafe24(신)', 'Gfresh')
        """

        # 2. 서울박스 중 서울 주소 + 쇼핑몰 조건
        update_query_2 = """
        UPDATE 송장출력_사방넷원본변환
        SET 송장구분최종 = '서울박스'
        WHERE 송장구분최종 = '냉동박스'
          AND SUBSTRING(
                TRIM(SUBSTRING_INDEX(주소, ']', -1)), 1, 2
              ) = '서울'
          AND 쇼핑몰 IN ('Cafe24(신)', 'Gfresh')
        """

        # 쿼리 실행
        cursor.execute(update_query_1)
        cursor.execute(update_query_2)
        connection.commit()
        print("송장구분최종 컬럼 업데이트 완료 ✅")

finally:
    connection.close()


import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# 연결
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 서울박스 중 서울 주소 → 서울박스
        update_query = """
        UPDATE 송장출력_공통박스
        SET 송장구분최종 = '서울박스'
        WHERE 송장구분최종 = '냉동박스'
          AND SUBSTRING(
                TRIM(SUBSTRING_INDEX(주소, ']', -1)), 1, 2
              ) = '서울'
          AND 쇼핑몰 IN ('Cafe24(신)', 'Gfresh')
        """

        cursor.execute(update_query)
        connection.commit()
        print("서울박스 업데이트 완료 ✅")

finally:
    connection.close()


# ---. 서울서울낱개 분류
print("서울서울낱개 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울냉동변환 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_서울냉동변환"
        cursor.execute(sql_truncate)

        # 서울냉동 위치의 행만 복사하여 추가
        sql_copy_rows = """
        INSERT INTO 송장출력_서울냉동변환 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_사방넷원본변환
        WHERE 송장구분최종 = '서울낱개'
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("서울서울낱개 분류 끝")
# --끝

import time

time.sleep(1)




# ---. 택배수량 계산 및 송장구분자 업데이트
print("택배수량 계산 및 송장구분자 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량을 이용하여 1을 나눈 결과를 소수점 세 자리에서 내림하여 송장구분자 컬럼에 업데이트
        sql_update = """
        UPDATE 송장출력_서울냉동변환
        SET 송장구분자 = FLOOR((1 / IFNULL(NULLIF(택배수량, 0), 10)) * 1000) / 1000
        """
        cursor.execute(sql_update)

        # 변경사항 저장
        connection.commit()

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    # 연결 종료
    connection.close()

print("택배수량 계산 및 송장구분자 업데이트 끝")
# --끝


import time

time.sleep(1)



# ---. 송장구분자와 수량 곱 업데이트
print("송장구분자와 수량 곱 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장구분자와 수량을 곱하여 결과 업데이트
        sql_multiply_update = """
        UPDATE 송장출력_서울냉동변환
        SET 송장구분자 = 송장구분자 * 수량
        """
        cursor.execute(sql_multiply_update)
        connection.commit()

        print(f"송장구분자 업데이트 완료, {cursor.rowcount} 행이 변경되었습니다.")

finally:
    # 연결 종료
    connection.close()

print("송장구분자와 수량 곱 업데이트 끝")
# --끝


import time

time.sleep(1)



# ---. 주소 + 수취인명 기반 송장구분자 합산 및 택배수량1 업데이트
print("주소 + 수취인명 기반 송장구분자 합산 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소 + 수취인명을 기준으로 송장구분자를 합산
        sql_group_sum = """
        SELECT 주소, 수취인명, SUM(송장구분자) AS 구분자합
        FROM 송장출력_서울냉동변환
        GROUP BY 주소, 수취인명
        """
        cursor.execute(sql_group_sum)
        results = cursor.fetchall()

        # 각 그룹의 구분자합을 택배수량1에 업데이트
        for result in results:
            sql_update = """
            UPDATE 송장출력_서울냉동변환
            SET 택배수량1 = %s
            WHERE 주소 = %s AND 수취인명 = %s
            """
            cursor.execute(sql_update, (result['구분자합'], result['주소'], result['수취인명']))

        # 변경사항 저장
        connection.commit()

        print(f"Updated {cursor.rowcount} rows based on address and recipient name.")  # 업데이트된 행 수 출력

finally:
    # 연결 종료
    connection.close()

print("주소 + 수취인명 기반 송장구분자 합산 및 택배수량1 업데이트 끝")
# --끝

import time

time.sleep(1)




print("택배수량1 올림 처리 시작")
import pymysql
import math

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량1의 현재 값을 가져옵니다.
        sql_fetch = "SELECT id, 택배수량1 FROM 송장출력_서울냉동변환"
        cursor.execute(sql_fetch)
        results = cursor.fetchall()

        updated_rows = 0  # 업데이트된 행 수를 추적
        # 각 행의 택배수량1 값을 올림 처리하고 업데이트 합니다.
        for result in results:
            current_quantity = result['택배수량1']
            if current_quantity is None:  # 택배수량1이 None일 때 처리
                current_quantity = 1  # None 값을 30으로 설정
            
            rounded_quantity = math.ceil(float(current_quantity))  # 택배수량1 값을 올림
            sql_update = "UPDATE 송장출력_서울냉동변환 SET 택배수량1 = %s WHERE id = %s"
            cursor.execute(sql_update, (rounded_quantity, result['id']))
            updated_rows += cursor.rowcount

        # 변경사항 저장
        connection.commit()

        print(f"업데이트된 행 수: {updated_rows}")

finally:
    # 연결 종료
    connection.close()

print("택배수량1 올림 처리 완료")
# --끝


import time

time.sleep(1)




# ---. 택배수량1에 따른 송장구분 업데이트
print("택배수량1에 따른 송장구분 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량1이 1보다 큰 경우 '추가'로 업데이트
        update_more_than_one = """
        UPDATE 송장출력_서울냉동변환
        SET 송장구분 = '추가'
        WHERE 택배수량1 > 1
        """
        cursor.execute(update_more_than_one)
        
        # 택배수량1이 1 이하인 경우 '1장'으로 업데이트
        update_one_or_less = """
        UPDATE 송장출력_서울냉동변환
        SET 송장구분 = '1장'
        WHERE 택배수량1 <= 1
        """
        cursor.execute(update_one_or_less)
        
        connection.commit()  # 변경사항 저장
        print(f"Updated rows for more than one: {cursor.rowcount}")  # '추가'로 업데이트된 행 수 출력
        print(f"Updated rows for one or less: {cursor.rowcount}")  # '1장'으로 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("택배수량1에 따른 송장구분 업데이트 작업 끝")
# ---끝

import time

time.sleep(1)



# ---. 주소 및 수취인명 유일성에 따른 송장구분 업데이트
print("주소 및 수취인명 유일성에 따른 송장구분 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소 + 수취인명 조합이 유일한 경우 '단일'로 업데이트
        update_unique_address_and_name = """
        UPDATE 송장출력_서울냉동변환 t1
        JOIN (
            SELECT 주소, 수취인명
            FROM 송장출력_서울냉동변환
            WHERE 송장구분 = '1장'
            GROUP BY 주소, 수취인명
            HAVING COUNT(*) = 1
        ) AS unique_address ON t1.주소 = unique_address.주소 AND t1.수취인명 = unique_address.수취인명
        SET t1.송장구분 = '단일'
        WHERE t1.송장구분 = '1장'
        """
        cursor.execute(update_unique_address_and_name)

        connection.commit()  # 변경사항 저장
        print(f"Updated unique address and name rows to '단일': {cursor.rowcount}")  # '단일'로 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("주소 및 수취인명 유일성에 따른 송장구분 업데이트 작업 끝")
# ---끝



# ---. 서울냉동1장 분류
print("서울냉동1장 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울냉동1장 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_서울냉동1장"
        cursor.execute(sql_truncate)

        # 서울냉동 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_서울냉동1장 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울냉동변환
        WHERE 송장구분 = '1장'
        ORDER BY 위치변환 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("서울냉동1장 분류 끝")
# --끝

import time

time.sleep(1)


# ---. 서울냉동단일 분류
print("서울냉동단일 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울냉동단일 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_서울냉동단일"
        cursor.execute(sql_truncate)

        # 서울냉동 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_서울냉동단일 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울냉동변환
        WHERE 송장구분 = '단일'
        ORDER BY 위치변환 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("서울냉동단일 분류 끝")
# --끝

import time

time.sleep(1)

# ---. 품목코드별 수량 합산 및 품목개수
print("품목코드별 수량 합산 및 품목개수 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 품목코드별로 수량을 합산하여 출력개수에 업데이트
        sql_update_output_count = """
        UPDATE 송장출력_서울냉동단일 AS t1 
        INNER JOIN (
            SELECT 품목코드, SUM(수량) AS total_quantity
            FROM 송장출력_서울냉동단일
            GROUP BY 품목코드
        ) AS t2 ON t1.품목코드 = t2.품목코드
        SET t1.품목개수 = t2.total_quantity
        """
        cursor.execute(sql_update_output_count)

        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("품목코드별 수량 합산 및 품목개수 작업 끝")
# ---끝

import time

time.sleep(1)

# ---. 서울냉동추가 분류
print("서울냉동추가 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울냉동추가 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_서울냉동추가"
        cursor.execute(sql_truncate)

        # 서울냉동 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_서울냉동추가 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울냉동변환
        WHERE 송장구분 = '추가'
        ORDER BY 주소 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("서울냉동추가 분류 끝")
# --끝


import time

time.sleep(1)




# ---. 서울냉동추가송장 테이블로 유니크 주소 행 이동
print("서울냉동추가송장 테이블로 유니크 주소 행 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울냉동추가송장 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_서울냉동추가송장"
        cursor.execute(sql_truncate)

        # 송장출력_서울냉동추가 테이블에서 유니크한 주소를 가진 행을 선택하여 이동
        sql_insert_unique = """
        INSERT INTO 송장출력_서울냉동추가송장 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM (
            SELECT *, ROW_NUMBER() OVER (PARTITION BY 주소 ORDER BY id ASC) AS rn
            FROM 송장출력_서울냉동추가
        ) AS subquery
        WHERE subquery.rn = 1
        """
        cursor.execute(sql_insert_unique)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("서울냉동추가송장 테이블로 유니크 주소 행 이동 끝")
# --끝


import time

time.sleep(1)




# ---. 서울냉동추가송장 업데이트
print("서울냉동추가송장 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 모든 '수량'을 1로 변경하고 '송장명'을 "추가송장"으로 변경
        sql_update = """
        UPDATE 송장출력_서울냉동추가송장
        SET 수량 = 1, 송장명 = '+++', 옵션명 = '+++' , 품목코드 = '0000'
        """
        cursor.execute(sql_update)

        # 변경사항 저장
        connection.commit()
        print(f"Updated {cursor.rowcount} rows in 송장출력_서울냉동추가송장.")

finally:
    # 연결 종료
    connection.close()

print("서울냉동추가송장 업데이트 완료")
# --끝

import time

time.sleep(1)



# ---. 서울냉동 추가송장 늘리기 
print("서울냉동 추가송장 늘리기 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 먼저 모든 행을 가져옵니다.
        sql_select = "SELECT * FROM 송장출력_서울냉동추가송장 WHERE 택배수량1 > 2"
        cursor.execute(sql_select)
        rows = cursor.fetchall()

        # 각 행을 '택배수량1 - 2' 만큼 복사하여 삽입합니다.
        for row in rows:
            count = int(row['택배수량1']) - 2  # 추가할 행의 수
            sql_insert = """
            INSERT INTO 송장출력_서울냉동추가송장
            (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            """
            params = (row['msg1'], row['msg2'], row['msg3'], row['msg4'], row['msg5'], row['msg6'], row['수취인명'], row['전화번호1'], row['전화번호2'], row['우편번호'], row['주소'], row['옵션명'], row['수량'], row['배송메세지'], row['주문번호'], row['쇼핑몰'], row['수집시간'], row['송장명'], row['품목코드'], row['택배비용'], row['박스크기'], row['출력개수'], row['송장수량'], row['별표1'], row['별표2'], row['품목개수'], row['택배수량'], row['택배수량1'], row['택배수량합산'], row['송장구분자'], row['송장구분'], row['송장구분최종'], row['위치'], row['위치변환'])
            for _ in range(count):
                cursor.execute(sql_insert, params)

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

print("서울냉동 추가송장 늘리기 끝")
# --끝

import time

time.sleep(1)


# ---. 서울냉동추가송장 순번 매기기
print("서울냉동추가송장 순번 매기기 시작")
# --시작

import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor  # 결과를 딕셔너리 형태로 받기 위함
)

try:
    with conn.cursor() as cursor:
        # 위치변환 값을 기준으로 정렬하여 모든 데이터를 가져옴
        sql = "SELECT id, 위치변환 FROM 송장출력_서울냉동추가송장 ORDER BY 위치변환, id"
        cursor.execute(sql)
        results = cursor.fetchall()

        # 현재 위치변환 값
        current_location = None
        counter = 1

        # 결과를 순회하면서 순번을 매김
        for row in results:
            if current_location != row['위치변환']:
                current_location = row['위치변환']
                counter = 1  # 위치변환 값이 바뀌면 순번을 리셋
            
            # 송장구분자 컬럼 업데이트 (중괄호 형식으로)
            formatted_number = f"[{counter}]"  # 숫자 앞뒤로 대괄호 추가
            update_sql = "UPDATE 송장출력_서울냉동추가송장 SET 송장구분자=%s WHERE id=%s"
            cursor.execute(update_sql, (formatted_number, row['id']))
            counter += 1

        conn.commit()  # 변경사항을 데이터베이스에 반영

finally:
    conn.close()  # 데이터베이스 연결 종료

# ---. 서울냉동추가송장 순번 매기기
print("서울냉동추가송장 순번 매기기 끝")
# --끝

import time

time.sleep(1)


# ---. 서울냉동추가송장 주소업데이트
print("서울냉동추가송장 주소업데이트 시작")
# --시작


import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # '주소' 컬럼 업데이트 쿼리 실행
        update_sql = "UPDATE 송장출력_서울냉동추가송장 SET 주소 = CONCAT(주소, 송장구분자)"
        cursor.execute(update_sql)
        conn.commit()  # 변경사항을 데이터베이스에 반영

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    conn.close()  # 데이터베이스 연결 종료


# ---. 서울냉동추가송장 주소업데이트
print("서울냉동추가송장 주소업데이트 끝")
# --끝

import time

time.sleep(1)


import pymysql
import pymysql.cursors

# MySQL 연결 설정
connection = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 테이블을 비웁니다.
        cursor.execute("TRUNCATE TABLE 송장출력_서울냉동추가합치기")
        
        # 데이터 병합 및 삽입 쿼리
        merge_and_insert_query = """
        INSERT INTO 송장출력_서울냉동추가합치기(msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM (
            SELECT * FROM 송장출력_서울냉동추가
            UNION ALL
            SELECT * FROM 송장출력_서울냉동추가송장
        ) AS combined
        ORDER BY 위치 DESC
        """
        cursor.execute(merge_and_insert_query)
        
        # 변경 사항을 데이터베이스에 확정합니다.
        connection.commit()

finally:
    # 연결을 닫습니다.
    connection.close()


import time

time.sleep(1)



# ---. 서울냉동 테이블 마지막정리
print("서울냉동 테이블 마지막정리 시작")
# --시작


import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울냉동 테이블 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_서울냉동")
        
        # 송장출력_서울냉동단일 테이블에서 데이터 가져와서 정렬 후 삽입
        sql_insert_from_single = """
        INSERT INTO 송장출력_서울냉동 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울냉동단일
        ORDER BY 위치변환 ASC
        """
        cursor.execute(sql_insert_from_single)

        # 송장출력_공통박스 테이블에서 데이터 가져와서 정렬 후 삽입
        sql_insert_from_box = """
            INSERT INTO 송장출력_서울냉동 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
            SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
            FROM 송장출력_공통박스
            WHERE 송장구분최종 = '서울박스'
            ORDER BY 위치변환 ASC
        """
        cursor.execute(sql_insert_from_box)




        # 송장출력_서울냉동1장 테이블의 데이터도 송장출력_서울냉동에 추가
        sql_insert_from_one = """
        INSERT INTO 송장출력_서울냉동 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울냉동1장
        """
        cursor.execute(sql_insert_from_one)

        # 두 테이블의 데이터를 합치고, ID 컬럼을 제외한 후 정렬하여 송장출력_서울냉동에 삽입
        sql_merge_and_sort = """
        INSERT INTO 송장출력_서울냉동 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울냉동추가합치기
        ORDER BY 주소 ASC
        """
        cursor.execute(sql_merge_and_sort)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()


# ---. 서울냉동 테이블 마지막정리
print("서울냉동 테이블 마지막정리 끝")
# --끝

import time

time.sleep(1)


# ---. 별표 행 이동 및 삭제 작업
print("별표 행 이동 및 삭제 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울냉동별표 테이블을 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_서울냉동별표")
        print("송장출력_서울냉동별표 테이블이 비워졌습니다.")

        # 별표1 또는 별표2가 비어있지 않은 행을 송장출력_서울냉동별표 테이블로 이동
        sql_move_to_star_table = """
        INSERT INTO 송장출력_서울냉동별표
        SELECT * FROM 송장출력_서울냉동
        WHERE 별표1 <> '' OR 별표2 <> ''
        """
        cursor.execute(sql_move_to_star_table)
        print(f"Moved {cursor.rowcount} rows to '송장출력_서울냉동별표'.")

        # 이동된 행 삭제
        sql_delete_moved_rows = """
        DELETE FROM 송장출력_서울냉동
        WHERE 별표1 <> '' OR 별표2 <> ''
        """
        cursor.execute(sql_delete_moved_rows)
        print(f"Deleted {cursor.rowcount} rows from '송장출력_서울냉동'.")

        connection.commit()  # 변경사항 저장


finally:
    connection.close()  # 데이터베이스 연결 종료

print("별표 행 이동 및 삭제 작업 완료")
# ---끝


import time

time.sleep(1)


# ---. 별표1 기준으로 정렬하여 행 이동
print("별표1 기준으로 정렬하여 행 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울냉동별표에서 별표1로 정렬하여 송장출력_서울냉동에 데이터 삽입
        sql_transfer_data = """
        INSERT INTO 송장출력_서울냉동
        (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울냉동별표
        ORDER BY 주소 ASC, 옵션명 ASC
        """
        cursor.execute(sql_transfer_data)

        print(f"Rows moved: {cursor.rowcount}")  # 이동된 행의 수 출력

        connection.commit()  # 변경사항 저장

finally:
    connection.close()  # 데이터베이스 연결 종료

print("별표1 기준으로 정렬하여 행 이동 작업 완료")
# ---끝


import time

time.sleep(1)



# ---. 데이터 이동 작업
print("송장출력_서울냉동에서 송장출력_서울냉동_최종으로 데이터 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울냉동_최종 테이블을 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_서울냉동_최종")

        # 송장출력_서울냉동에서 송장출력_서울냉동_최종으로 데이터 이동
        sql_transfer_data = """
        INSERT INTO 송장출력_서울냉동_최종
            (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
             송장명, 수량, 배송메세지, 주문번호, 쇼핑몰, 품목코드, 택배비용, 박스크기, 출력개수, 
             별표1, 별표2, 품목개수)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
               송장명, 수량, 배송메세지, 주문번호, 쇼핑몰, 품목코드, 택배비용, 박스크기, 출력개수, 
               별표1, 별표2, 품목개수
        FROM 송장출력_서울냉동
        """
        cursor.execute(sql_transfer_data)
        connection.commit()  # 변경사항 저장
        print(f"Moved {cursor.rowcount} rows from '송장출력_서울냉동' to '송장출력_서울냉동_최종'.")

finally:
    connection.close()  # 데이터베이스 연결 종료

print("송장출력_서울냉동에서 송장출력_서울냉동_최종으로 데이터 이동 작업 완료")
# ---끝

import time

time.sleep(1)

# ---. 송장출력_서울냉동_최종 테이블 업데이트
print("송장출력_서울냉동_최종 테이블 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배비용, 박스크기, 출력개수 업데이트
        sql_update = """
        UPDATE 송장출력_서울냉동_최종
        SET 택배비용 = 2150, 박스크기 = '극소', 출력개수 = 1
        """
        cursor.execute(sql_update)
        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows in '송장출력_서울냉동_최종'.")

finally:
    connection.close()  # 데이터베이스 연결 종료

print("송장출력_서울냉동_최종 테이블 업데이트 완료")
# ---끝

import time

time.sleep(1)

print("서울냉동_최종파일만들기 시작")
# ---시작

import pandas as pd
import mysql.connector
from datetime import datetime
import dropbox
import requests

# 데이터베이스 및 데이터 처리 시작
connection = mysql.connector.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci'
)

cursor = connection.cursor()
query = "SELECT * FROM 송장출력_서울냉동_최종"
cursor.execute(query)
result = cursor.fetchall()
columns = cursor.column_names
df = pd.DataFrame(result, columns=columns)
unique_count = df.drop_duplicates(subset=['주소', '수취인명', '전화번호1']).shape[0]
connection.close()

# 파일 저장 및 Dropbox 업로드
now = datetime.now()
file_path = f'서울냉동/서울냉동_{now.strftime("%y%m%d_%H시%M분")}.xlsx'
df.to_excel(file_path, index=False, header=False)

refresh_token = '1CLvznLL7BwAAAAAAAAAAagAlVx3w9P6NGyYjsITAxrSG9vlAEc31ohZZwYhUAB_'
app_key = 'vlxh3ec9nq5fi5t'
app_secret = 'h5rp5n0w9cp4ifk'
token_url = "https://api.dropbox.com/oauth2/token"
params = {
    'refresh_token': refresh_token,
    'grant_type': 'refresh_token',
    'client_id': app_key,
    'client_secret': app_secret
}
response = requests.post(token_url, data=params)
access_token = response.json().get('access_token')

dbx = dropbox.Dropbox(access_token)
with open(file_path, "rb") as f:
    dbx.files_upload(f.read(), f'/서울냉동/{file_path}', mode=dropbox.files.WriteMode("overwrite"))
shared_link_metadata = dbx.sharing_create_shared_link_with_settings(f'/서울냉동/{file_path}')

# 시간대별 차수 설정
hour = now.hour
minute = now.minute

if 1 <= hour <= 7:
    batch = "1차"
elif 8 <= hour <= 10:
    batch = "2차"
elif 11 <= hour <= 11:
    batch = "3차"
elif 12 <= hour <= 13:
    batch = "4차"
elif 14 <= hour <= 15:
    batch = "5차"
elif 16 <= hour <= 18:
    batch = "막차"
elif 19 <= hour <= 23:
    batch = "추가"
else:
    batch = ""  # 24시(0시)는 배치 처리하지 않음


import time

time.sleep(1)

# 카카오워크 메시지 전송
app_key = 'b36ed46e.0b55706350e94ef8b49e8647a97ae1b7'
chatroom_id = '9483024'
time_string = now.strftime("%m월 %d일 %H시 %M분")

def send_kakao_work_message(app_key, chatroom_id, file_url, batch):
    url = "https://api.kakaowork.com/v1/messages.send"
    headers = {
        "Authorization": f"Bearer {app_key}",
        "Content-Type": "application/json"
    }
    data = {
        "conversation_id": chatroom_id,
        "text": f"{batch} - 서울냉동 운송장 수집 완료",
        "blocks": [
            {
                "type": "header",
                "text": f"{batch} - 서울냉동 운송장 수집 완료",
                "style": "blue"
            },
            {
                "type": "text",
                "text": "아래 링크에서 파일을 다운로드하세요!",
                "markdown": True
            },
            {
                "type": "button",
                "text": "파일 다운로드",
                "style": "default",
                "action_type": "open_system_browser",
                "value": file_url
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": f"*송장 개수:* {unique_count}건",
                "markdown": True
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": "*송장넘기기*\n아이디: `gram`\n비번: `3535`\n[👉 송장 관리 페이지 바로가기](https://gramwon.me/orders/transfer)",
                "markdown": True
            },
            {
                "type": "divider"
            },
        ]
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()

result = send_kakao_work_message(app_key, chatroom_id, shared_link_metadata.url, batch)
print(result)



# ---. 경기냉동낱개 분류
print("경기냉동낱개 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기냉동변환 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_경기냉동변환"
        cursor.execute(sql_truncate)

        # 경기냉동 위치의 행만 복사하여 추가
        sql_copy_rows = """
        INSERT INTO 송장출력_경기냉동변환 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_사방넷원본변환
        WHERE 송장구분최종 = '냉동낱개'
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("경기냉동낱개 분류 끝")
# --끝

import time

time.sleep(1)




# ---. 택배수량 계산 및 송장구분자 업데이트
print("택배수량 계산 및 송장구분자 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량을 이용하여 1을 나눈 결과를 소수점 세 자리에서 내림하여 송장구분자 컬럼에 업데이트
        sql_update = """
        UPDATE 송장출력_경기냉동변환
        SET 송장구분자 = FLOOR((1 / IFNULL(NULLIF(택배수량, 0), 10)) * 1000) / 1000
        """
        cursor.execute(sql_update)

        # 변경사항 저장
        connection.commit()

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    # 연결 종료
    connection.close()

print("택배수량 계산 및 송장구분자 업데이트 끝")
# --끝


import time

time.sleep(1)



# ---. 송장구분자와 수량 곱 업데이트
print("송장구분자와 수량 곱 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장구분자와 수량을 곱하여 결과 업데이트
        sql_multiply_update = """
        UPDATE 송장출력_경기냉동변환
        SET 송장구분자 = 송장구분자 * 수량
        """
        cursor.execute(sql_multiply_update)
        connection.commit()

        print(f"송장구분자 업데이트 완료, {cursor.rowcount} 행이 변경되었습니다.")

finally:
    # 연결 종료
    connection.close()

print("송장구분자와 수량 곱 업데이트 끝")
# --끝


import time

time.sleep(1)



# ---. 주소 + 수취인명 기반 송장구분자 합산 및 택배수량1 업데이트
print("주소 + 수취인명 기반 송장구분자 합산 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소 + 수취인명을 기준으로 송장구분자를 합산
        sql_group_sum = """
        SELECT 주소, 수취인명, SUM(송장구분자) AS 구분자합
        FROM 송장출력_경기냉동변환
        GROUP BY 주소, 수취인명
        """
        cursor.execute(sql_group_sum)
        results = cursor.fetchall()

        # 각 그룹의 구분자합을 택배수량1에 업데이트
        for result in results:
            sql_update = """
            UPDATE 송장출력_경기냉동변환
            SET 택배수량1 = %s
            WHERE 주소 = %s AND 수취인명 = %s
            """
            cursor.execute(sql_update, (result['구분자합'], result['주소'], result['수취인명']))

        # 변경사항 저장
        connection.commit()

        print(f"Updated {cursor.rowcount} rows based on address and recipient name.")  # 업데이트된 행 수 출력

finally:
    # 연결 종료
    connection.close()

print("주소 + 수취인명 기반 송장구분자 합산 및 택배수량1 업데이트 끝")
# --끝

import time

time.sleep(1)




print("택배수량1 올림 처리 시작")
import pymysql
import math

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량1의 현재 값을 가져옵니다.
        sql_fetch = "SELECT id, 택배수량1 FROM 송장출력_경기냉동변환"
        cursor.execute(sql_fetch)
        results = cursor.fetchall()

        updated_rows = 0  # 업데이트된 행 수를 추적
        # 각 행의 택배수량1 값을 올림 처리하고 업데이트 합니다.
        for result in results:
            current_quantity = result['택배수량1']
            if current_quantity is None:  # 택배수량1이 None일 때 처리
                current_quantity = 1  # None 값을 30으로 설정
            
            rounded_quantity = math.ceil(float(current_quantity))  # 택배수량1 값을 올림
            sql_update = "UPDATE 송장출력_경기냉동변환 SET 택배수량1 = %s WHERE id = %s"
            cursor.execute(sql_update, (rounded_quantity, result['id']))
            updated_rows += cursor.rowcount

        # 변경사항 저장
        connection.commit()

        print(f"업데이트된 행 수: {updated_rows}")

finally:
    # 연결 종료
    connection.close()

print("택배수량1 올림 처리 완료")
# --끝


import time

time.sleep(1)




# ---. 택배수량1에 따른 송장구분 업데이트
print("택배수량1에 따른 송장구분 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량1이 1보다 큰 경우 '추가'로 업데이트
        update_more_than_one = """
        UPDATE 송장출력_경기냉동변환
        SET 송장구분 = '추가'
        WHERE 택배수량1 > 1
        """
        cursor.execute(update_more_than_one)
        
        # 택배수량1이 1 이하인 경우 '1장'으로 업데이트
        update_one_or_less = """
        UPDATE 송장출력_경기냉동변환
        SET 송장구분 = '1장'
        WHERE 택배수량1 <= 1
        """
        cursor.execute(update_one_or_less)
        
        connection.commit()  # 변경사항 저장
        print(f"Updated rows for more than one: {cursor.rowcount}")  # '추가'로 업데이트된 행 수 출력
        print(f"Updated rows for one or less: {cursor.rowcount}")  # '1장'으로 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("택배수량1에 따른 송장구분 업데이트 작업 끝")
# ---끝

import time

time.sleep(1)



# ---. 주소 및 수취인명 유일성에 따른 송장구분 업데이트
print("주소 및 수취인명 유일성에 따른 송장구분 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소 + 수취인명 조합이 유일한 경우 '단일'로 업데이트
        update_unique_address_and_name = """
        UPDATE 송장출력_경기냉동변환 t1
        JOIN (
            SELECT 주소, 수취인명
            FROM 송장출력_경기냉동변환
            WHERE 송장구분 = '1장'
            GROUP BY 주소, 수취인명
            HAVING COUNT(*) = 1
        ) AS unique_address ON t1.주소 = unique_address.주소 AND t1.수취인명 = unique_address.수취인명
        SET t1.송장구분 = '단일'
        WHERE t1.송장구분 = '1장'
        """
        cursor.execute(update_unique_address_and_name)

        connection.commit()  # 변경사항 저장
        print(f"Updated unique address and name rows to '단일': {cursor.rowcount}")  # '단일'로 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("주소 및 수취인명 유일성에 따른 송장구분 업데이트 작업 끝")
# ---끝



# ---. 경기냉동1장 분류
print("경기냉동1장 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기냉동1장 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_경기냉동1장"
        cursor.execute(sql_truncate)

        # 경기냉동 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_경기냉동1장 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기냉동변환
        WHERE 송장구분 = '1장'
        ORDER BY 위치변환 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("경기냉동1장 분류 끝")
# --끝

import time

time.sleep(1)


# ---. 경기냉동단일 분류
print("경기냉동단일 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기냉동단일 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_경기냉동단일"
        cursor.execute(sql_truncate)

        # 경기냉동 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_경기냉동단일 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기냉동변환
        WHERE 송장구분 = '단일'
        ORDER BY 위치변환 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("경기냉동단일 분류 끝")
# --끝

import time

time.sleep(1)

# ---. 품목코드별 수량 합산 및 품목개수
print("품목코드별 수량 합산 및 품목개수 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 품목코드별로 수량을 합산하여 출력개수에 업데이트
        sql_update_output_count = """
        UPDATE 송장출력_경기냉동단일 AS t1 
        INNER JOIN (
            SELECT 품목코드, SUM(수량) AS total_quantity
            FROM 송장출력_경기냉동단일
            GROUP BY 품목코드
        ) AS t2 ON t1.품목코드 = t2.품목코드
        SET t1.품목개수 = t2.total_quantity
        """
        cursor.execute(sql_update_output_count)

        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("품목코드별 수량 합산 및 품목개수 작업 끝")
# ---끝

import time

time.sleep(1)

# ---. 경기냉동추가 분류
print("경기냉동추가 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기냉동추가 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_경기냉동추가"
        cursor.execute(sql_truncate)

        # 경기냉동 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_경기냉동추가 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기냉동변환
        WHERE 송장구분 = '추가'
        ORDER BY 주소 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("경기냉동추가 분류 끝")
# --끝


import time

time.sleep(1)




# ---. 경기냉동추가송장 테이블로 유니크 주소 행 이동
print("경기냉동추가송장 테이블로 유니크 주소 행 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기냉동추가송장 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_경기냉동추가송장"
        cursor.execute(sql_truncate)

        # 송장출력_경기냉동추가 테이블에서 유니크한 주소를 가진 행을 선택하여 이동
        sql_insert_unique = """
        INSERT INTO 송장출력_경기냉동추가송장 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM (
            SELECT *, ROW_NUMBER() OVER (PARTITION BY 주소 ORDER BY id ASC) AS rn
            FROM 송장출력_경기냉동추가
        ) AS subquery
        WHERE subquery.rn = 1
        """
        cursor.execute(sql_insert_unique)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("경기냉동추가송장 테이블로 유니크 주소 행 이동 끝")
# --끝


import time

time.sleep(1)




# ---. 경기냉동추가송장 업데이트
print("경기냉동추가송장 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 모든 '수량'을 1로 변경하고 '송장명'을 "추가송장"으로 변경
        sql_update = """
        UPDATE 송장출력_경기냉동추가송장
        SET 수량 = 1, 송장명 = '+++', 옵션명 = '+++' , 품목코드 = '0000'
        """
        cursor.execute(sql_update)

        # 변경사항 저장
        connection.commit()
        print(f"Updated {cursor.rowcount} rows in 송장출력_경기냉동추가송장.")

finally:
    # 연결 종료
    connection.close()

print("경기냉동추가송장 업데이트 완료")
# --끝

import time

time.sleep(1)



# ---. 경기냉동 추가송장 늘리기 
print("경기냉동 추가송장 늘리기 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 먼저 모든 행을 가져옵니다.
        sql_select = "SELECT * FROM 송장출력_경기냉동추가송장 WHERE 택배수량1 > 2"
        cursor.execute(sql_select)
        rows = cursor.fetchall()

        # 각 행을 '택배수량1 - 2' 만큼 복사하여 삽입합니다.
        for row in rows:
            count = int(row['택배수량1']) - 2  # 추가할 행의 수
            sql_insert = """
            INSERT INTO 송장출력_경기냉동추가송장
            (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            """
            params = (row['msg1'], row['msg2'], row['msg3'], row['msg4'], row['msg5'], row['msg6'], row['수취인명'], row['전화번호1'], row['전화번호2'], row['우편번호'], row['주소'], row['옵션명'], row['수량'], row['배송메세지'], row['주문번호'], row['쇼핑몰'], row['수집시간'], row['송장명'], row['품목코드'], row['택배비용'], row['박스크기'], row['출력개수'], row['송장수량'], row['별표1'], row['별표2'], row['품목개수'], row['택배수량'], row['택배수량1'], row['택배수량합산'], row['송장구분자'], row['송장구분'], row['송장구분최종'], row['위치'], row['위치변환'])
            for _ in range(count):
                cursor.execute(sql_insert, params)

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

print("경기냉동 추가송장 늘리기 끝")
# --끝

import time

time.sleep(1)


# ---. 경기냉동추가송장 순번 매기기
print("경기냉동추가송장 순번 매기기 시작")
# --시작

import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor  # 결과를 딕셔너리 형태로 받기 위함
)

try:
    with conn.cursor() as cursor:
        # 위치변환 값을 기준으로 정렬하여 모든 데이터를 가져옴
        sql = "SELECT id, 위치변환 FROM 송장출력_경기냉동추가송장 ORDER BY 위치변환, id"
        cursor.execute(sql)
        results = cursor.fetchall()

        # 현재 위치변환 값
        current_location = None
        counter = 1

        # 결과를 순회하면서 순번을 매김
        for row in results:
            if current_location != row['위치변환']:
                current_location = row['위치변환']
                counter = 1  # 위치변환 값이 바뀌면 순번을 리셋
            
            # 송장구분자 컬럼 업데이트 (중괄호 형식으로)
            formatted_number = f"[{counter}]"  # 숫자 앞뒤로 대괄호 추가
            update_sql = "UPDATE 송장출력_경기냉동추가송장 SET 송장구분자=%s WHERE id=%s"
            cursor.execute(update_sql, (formatted_number, row['id']))
            counter += 1

        conn.commit()  # 변경사항을 데이터베이스에 반영

finally:
    conn.close()  # 데이터베이스 연결 종료

# ---. 경기냉동추가송장 순번 매기기
print("경기냉동추가송장 순번 매기기 끝")
# --끝

import time

time.sleep(1)


# ---. 경기냉동추가송장 주소업데이트
print("경기냉동추가송장 주소업데이트 시작")
# --시작


import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # '주소' 컬럼 업데이트 쿼리 실행
        update_sql = "UPDATE 송장출력_경기냉동추가송장 SET 주소 = CONCAT(주소, 송장구분자)"
        cursor.execute(update_sql)
        conn.commit()  # 변경사항을 데이터베이스에 반영

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    conn.close()  # 데이터베이스 연결 종료


# ---. 경기냉동추가송장 주소업데이트
print("경기냉동추가송장 주소업데이트 끝")
# --끝

import time

time.sleep(1)


import pymysql
import pymysql.cursors

# MySQL 연결 설정
connection = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 테이블을 비웁니다.
        cursor.execute("TRUNCATE TABLE 송장출력_경기냉동추가합치기")
        
        # 데이터 병합 및 삽입 쿼리
        merge_and_insert_query = """
        INSERT INTO 송장출력_경기냉동추가합치기(msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM (
            SELECT * FROM 송장출력_경기냉동추가
            UNION ALL
            SELECT * FROM 송장출력_경기냉동추가송장
        ) AS combined
        ORDER BY 위치 DESC
        """
        cursor.execute(merge_and_insert_query)
        
        # 변경 사항을 데이터베이스에 확정합니다.
        connection.commit()

finally:
    # 연결을 닫습니다.
    connection.close()


import time

time.sleep(1)



# ---. 경기냉동 테이블 마지막정리
print("경기냉동 테이블 마지막정리 시작")
# --시작


import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기냉동 테이블 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_경기냉동")
        
        # 송장출력_경기냉동단일 테이블에서 데이터 가져와서 정렬 후 삽입
        sql_insert_from_single = """
        INSERT INTO 송장출력_경기냉동 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기냉동단일
        ORDER BY 위치변환 ASC
        """
        cursor.execute(sql_insert_from_single)

        # 송장출력_공통박스 테이블에서 데이터 가져와서 정렬 후 삽입
        sql_insert_from_box = """
            INSERT INTO 송장출력_경기냉동 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
            SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
            FROM 송장출력_공통박스
            WHERE 송장구분최종 = '냉동박스'
            ORDER BY 위치변환 ASC
        """
        cursor.execute(sql_insert_from_box)




        # 송장출력_경기냉동1장 테이블의 데이터도 송장출력_경기냉동에 추가
        sql_insert_from_one = """
        INSERT INTO 송장출력_경기냉동 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기냉동1장
        """
        cursor.execute(sql_insert_from_one)

        # 두 테이블의 데이터를 합치고, ID 컬럼을 제외한 후 정렬하여 송장출력_경기냉동에 삽입
        sql_merge_and_sort = """
        INSERT INTO 송장출력_경기냉동 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기냉동추가합치기
        ORDER BY 주소 ASC
        """
        cursor.execute(sql_merge_and_sort)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()


# ---. 경기냉동 테이블 마지막정리
print("경기냉동 테이블 마지막정리 끝")
# --끝

import time

time.sleep(1)


# ---. 별표 행 이동 및 삭제 작업
print("별표 행 이동 및 삭제 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기냉동별표 테이블을 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_경기냉동별표")
        print("송장출력_경기냉동별표 테이블이 비워졌습니다.")

        # 별표1 또는 별표2가 비어있지 않은 행을 송장출력_경기냉동별표 테이블로 이동
        sql_move_to_star_table = """
        INSERT INTO 송장출력_경기냉동별표
        SELECT * FROM 송장출력_경기냉동
        WHERE 별표1 <> '' OR 별표2 <> ''
        """
        cursor.execute(sql_move_to_star_table)
        print(f"Moved {cursor.rowcount} rows to '송장출력_경기냉동별표'.")

        # 이동된 행 삭제
        sql_delete_moved_rows = """
        DELETE FROM 송장출력_경기냉동
        WHERE 별표1 <> '' OR 별표2 <> ''
        """
        cursor.execute(sql_delete_moved_rows)
        print(f"Deleted {cursor.rowcount} rows from '송장출력_경기냉동'.")

        connection.commit()  # 변경사항 저장


finally:
    connection.close()  # 데이터베이스 연결 종료

print("별표 행 이동 및 삭제 작업 완료")
# ---끝


import time

time.sleep(1)


# ---. 별표1 기준으로 정렬하여 행 이동
print("별표1 기준으로 정렬하여 행 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기냉동별표에서 별표1로 정렬하여 송장출력_경기냉동에 데이터 삽입
        sql_transfer_data = """
        INSERT INTO 송장출력_경기냉동
        (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기냉동별표
        ORDER BY 주소 ASC, 옵션명 ASC
        """
        cursor.execute(sql_transfer_data)

        print(f"Rows moved: {cursor.rowcount}")  # 이동된 행의 수 출력

        connection.commit()  # 변경사항 저장

finally:
    connection.close()  # 데이터베이스 연결 종료

print("별표1 기준으로 정렬하여 행 이동 작업 완료")
# ---끝


import time

time.sleep(1)



# ---. 데이터 이동 작업
print("송장출력_경기냉동에서 송장출력_경기냉동_최종으로 데이터 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기냉동_최종 테이블을 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_경기냉동_최종")

        # 송장출력_경기냉동에서 송장출력_경기냉동_최종으로 데이터 이동
        sql_transfer_data = """
        INSERT INTO 송장출력_경기냉동_최종
            (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
             송장명, 수량, 배송메세지, 주문번호, 쇼핑몰, 품목코드, 택배비용, 박스크기, 출력개수, 
             별표1, 별표2, 품목개수)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
               송장명, 수량, 배송메세지, 주문번호, 쇼핑몰, 품목코드, 택배비용, 박스크기, 출력개수, 
               별표1, 별표2, 품목개수
        FROM 송장출력_경기냉동
        """
        cursor.execute(sql_transfer_data)
        connection.commit()  # 변경사항 저장
        print(f"Moved {cursor.rowcount} rows from '송장출력_경기냉동' to '송장출력_경기냉동_최종'.")

finally:
    connection.close()  # 데이터베이스 연결 종료

print("송장출력_경기냉동에서 송장출력_경기냉동_최종으로 데이터 이동 작업 완료")
# ---끝

import time

time.sleep(1)

# ---. 송장출력_경기냉동_최종 테이블 업데이트
print("송장출력_경기냉동_최종 테이블 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배비용, 박스크기, 출력개수 업데이트
        sql_update = """
        UPDATE 송장출력_경기냉동_최종
        SET 택배비용 = 2150, 박스크기 = '극소', 출력개수 = 1
        """
        cursor.execute(sql_update)
        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows in '송장출력_경기냉동_최종'.")

finally:
    connection.close()  # 데이터베이스 연결 종료

print("송장출력_경기냉동_최종 테이블 업데이트 완료")
# ---끝

import time

time.sleep(5)

print("경기냉동_최종파일만들기 시작")
# ---시작

import pandas as pd
import mysql.connector
from datetime import datetime
import dropbox
import requests

# 데이터베이스 및 데이터 처리 시작
connection = mysql.connector.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci'
)

cursor = connection.cursor()
query = "SELECT * FROM 송장출력_경기냉동_최종"
cursor.execute(query)
result = cursor.fetchall()
columns = cursor.column_names
df = pd.DataFrame(result, columns=columns)
unique_count = df.drop_duplicates(subset=['주소', '수취인명', '전화번호1']).shape[0]
connection.close()

# 파일 저장 및 Dropbox 업로드
now = datetime.now()
file_path = f'경기냉동/경기냉동_{now.strftime("%y%m%d_%H시%M분")}.xlsx'
df.to_excel(file_path, index=False, header=False)

refresh_token = '1CLvznLL7BwAAAAAAAAAAagAlVx3w9P6NGyYjsITAxrSG9vlAEc31ohZZwYhUAB_'
app_key = 'vlxh3ec9nq5fi5t'
app_secret = 'h5rp5n0w9cp4ifk'
token_url = "https://api.dropbox.com/oauth2/token"
params = {
    'refresh_token': refresh_token,
    'grant_type': 'refresh_token',
    'client_id': app_key,
    'client_secret': app_secret
}
response = requests.post(token_url, data=params)
access_token = response.json().get('access_token')

dbx = dropbox.Dropbox(access_token)
with open(file_path, "rb") as f:
    dbx.files_upload(f.read(), f'/경기냉동/{file_path}', mode=dropbox.files.WriteMode("overwrite"))
shared_link_metadata = dbx.sharing_create_shared_link_with_settings(f'/경기냉동/{file_path}')

# 시간대별 차수 설정
hour = now.hour
minute = now.minute

if 1 <= hour <= 7:
    batch = "1차"
elif 8 <= hour <= 10:
    batch = "2차"
elif 11 <= hour <= 11:
    batch = "3차"
elif 12 <= hour <= 13:
    batch = "4차"
elif 14 <= hour <= 15:
    batch = "5차"
elif 16 <= hour <= 18:
    batch = "막차"
elif 19 <= hour <= 23:
    batch = "추가"
else:
    batch = ""  # 24시(0시)는 배치 처리하지 않음


import time

time.sleep(10)

# 카카오워크 메시지 전송
app_key = 'b36ed46e.0b55706350e94ef8b49e8647a97ae1b7'
chatroom_id = '9483024'
time_string = now.strftime("%m월 %d일 %H시 %M분")

def send_kakao_work_message(app_key, chatroom_id, file_url, batch):
    url = "https://api.kakaowork.com/v1/messages.send"
    headers = {
        "Authorization": f"Bearer {app_key}",
        "Content-Type": "application/json"
    }
    data = {
        "conversation_id": chatroom_id,
        "text": f"{batch} - 경기냉동 운송장 수집 완료",
        "blocks": [
            {
                "type": "header",
                "text": f"{batch} - 경기냉동 운송장 수집 완료",
                "style": "blue"
            },
            {
                "type": "text",
                "text": "아래 링크에서 파일을 다운로드하세요!",
                "markdown": True
            },
            {
                "type": "button",
                "text": "파일 다운로드",
                "style": "default",
                "action_type": "open_system_browser",
                "value": file_url
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": f"*송장 개수:* {unique_count}건",
                "markdown": True
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": "*송장넘기기*\n아이디: `gram`\n비번: `3535`\n[👉 송장 관리 페이지 바로가기](https://gramwon.me/orders/transfer)",
                "markdown": True
            },
            {
                "type": "divider"
            },
        ]
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()

result = send_kakao_work_message(app_key, chatroom_id, shared_link_metadata.url, batch)
print(result)



import time

time.sleep(1)


# ---. 경기냉동 전체 끝
print("경기냉동 전체 끝")
print("경기공산 시작")
# ---. 경기공산 시작



print("서울공산 시작")
# ---. 경기공산 시작

import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# 연결
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 1. 공산낱개 중 서울 주소 → 서공낱개
        update_query_1 = """
        UPDATE 송장출력_사방넷원본변환
        SET 송장구분최종 = '서공낱개'
        WHERE 송장구분최종 = '공산낱개'
          AND SUBSTRING(
                TRIM(SUBSTRING_INDEX(주소, ']', -1)), 1, 2
              ) = '서울'
          AND 쇼핑몰 IN ('Cafe24(신)', 'Gfresh')
        """

        # 2. 공산박스 중 서울 주소 → 서공박스
        update_query_2 = """
        UPDATE 송장출력_사방넷원본변환
        SET 송장구분최종 = '서공박스'
        WHERE 송장구분최종 = '공산박스'
          AND SUBSTRING(
                TRIM(SUBSTRING_INDEX(주소, ']', -1)), 1, 2
              ) = '서울'
          AND 쇼핑몰 IN ('Cafe24(신)', 'Gfresh')
        """

        cursor.execute(update_query_1)
        cursor.execute(update_query_2)
        connection.commit()
        print("송장구분최종 컬럼 업데이트 완료 ✅")

finally:
    connection.close()


import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# 연결
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 공산박스 중 서울 주소 → 서공박스
        update_query = """
        UPDATE 송장출력_공통박스
        SET 송장구분최종 = '서공박스'
        WHERE 송장구분최종 = '공산박스'
          AND SUBSTRING(
                TRIM(SUBSTRING_INDEX(주소, ']', -1)), 1, 2
              ) = '서울'
          AND 쇼핑몰 IN ('Cafe24(신)', 'Gfresh')
        """

        cursor.execute(update_query)
        connection.commit()
        print("서공박스 업데이트 완료 ✅")

finally:
    connection.close()


# ---. 서울공산낱개 분류
print("서울공산낱개 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울공산변환 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_서울공산변환"
        cursor.execute(sql_truncate)

        # 서울공산 위치의 행만 복사하여 추가
        sql_copy_rows = """
        INSERT INTO 송장출력_서울공산변환 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_사방넷원본변환
        WHERE 송장구분최종 = '서공낱개'
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("서울공산낱개 분류 끝")
# --끝

import time

time.sleep(1)




# ---. 택배수량 계산 및 송장구분자 업데이트
print("택배수량 계산 및 송장구분자 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량을 이용하여 1을 나눈 결과를 소수점 세 자리에서 내림하여 송장구분자 컬럼에 업데이트
        sql_update = """
        UPDATE 송장출력_서울공산변환
        SET 송장구분자 = FLOOR((1 / IFNULL(NULLIF(택배수량, 0), 10)) * 1000) / 1000
        """
        cursor.execute(sql_update)

        # 변경사항 저장
        connection.commit()

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    # 연결 종료
    connection.close()

print("택배수량 계산 및 송장구분자 업데이트 끝")
# --끝


import time

time.sleep(1)



# ---. 송장구분자와 수량 곱 업데이트
print("송장구분자와 수량 곱 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장구분자와 수량을 곱하여 결과 업데이트
        sql_multiply_update = """
        UPDATE 송장출력_서울공산변환
        SET 송장구분자 = 송장구분자 * 수량
        """
        cursor.execute(sql_multiply_update)
        connection.commit()

        print(f"송장구분자 업데이트 완료, {cursor.rowcount} 행이 변경되었습니다.")

finally:
    # 연결 종료
    connection.close()

print("송장구분자와 수량 곱 업데이트 끝")
# --끝


import time

time.sleep(1)



# ---. 주소 + 수취인명 기반 송장구분자 합산 및 택배수량1 업데이트
print("주소 + 수취인명 기반 송장구분자 합산 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소 + 수취인명을 기준으로 송장구분자를 합산
        sql_group_sum = """
        SELECT 주소, 수취인명, SUM(송장구분자) AS 구분자합
        FROM 송장출력_서울공산변환
        GROUP BY 주소, 수취인명
        """
        cursor.execute(sql_group_sum)
        results = cursor.fetchall()

        # 각 그룹의 구분자합을 택배수량1에 업데이트
        for result in results:
            sql_update = """
            UPDATE 송장출력_서울공산변환
            SET 택배수량1 = %s
            WHERE 주소 = %s AND 수취인명 = %s
            """
            cursor.execute(sql_update, (result['구분자합'], result['주소'], result['수취인명']))

        # 변경사항 저장
        connection.commit()

        print(f"Updated {cursor.rowcount} rows based on address and recipient name.")  # 업데이트된 행 수 출력

finally:
    # 연결 종료
    connection.close()

print("주소 + 수취인명 기반 송장구분자 합산 및 택배수량1 업데이트 끝")
# --끝

import time

time.sleep(1)




print("택배수량1 올림 처리 시작")
import pymysql
import math

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량1의 현재 값을 가져옵니다.
        sql_fetch = "SELECT id, 택배수량1 FROM 송장출력_서울공산변환"
        cursor.execute(sql_fetch)
        results = cursor.fetchall()

        updated_rows = 0  # 업데이트된 행 수를 추적
        # 각 행의 택배수량1 값을 올림 처리하고 업데이트 합니다.
        for result in results:
            current_quantity = result['택배수량1']
            if current_quantity is None:  # 택배수량1이 None일 때 처리
                current_quantity = 1  # None 값을 30으로 설정
            
            rounded_quantity = math.ceil(float(current_quantity))  # 택배수량1 값을 올림
            sql_update = "UPDATE 송장출력_서울공산변환 SET 택배수량1 = %s WHERE id = %s"
            cursor.execute(sql_update, (rounded_quantity, result['id']))
            updated_rows += cursor.rowcount

        # 변경사항 저장
        connection.commit()

        print(f"업데이트된 행 수: {updated_rows}")

finally:
    # 연결 종료
    connection.close()

print("택배수량1 올림 처리 완료")
# --끝


import time

time.sleep(1)




# ---. 택배수량1에 따른 송장구분 업데이트
print("택배수량1에 따른 송장구분 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량1이 1보다 큰 경우 '추가'로 업데이트
        update_more_than_one = """
        UPDATE 송장출력_서울공산변환
        SET 송장구분 = '추가'
        WHERE 택배수량1 > 1
        """
        cursor.execute(update_more_than_one)
        
        # 택배수량1이 1 이하인 경우 '1장'으로 업데이트
        update_one_or_less = """
        UPDATE 송장출력_서울공산변환
        SET 송장구분 = '1장'
        WHERE 택배수량1 <= 1
        """
        cursor.execute(update_one_or_less)
        
        connection.commit()  # 변경사항 저장
        print(f"Updated rows for more than one: {cursor.rowcount}")  # '추가'로 업데이트된 행 수 출력
        print(f"Updated rows for one or less: {cursor.rowcount}")  # '1장'으로 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("택배수량1에 따른 송장구분 업데이트 작업 끝")
# ---끝

import time

time.sleep(1)



# ---. 주소 및 수취인명 유일성에 따른 송장구분 업데이트
print("주소 및 수취인명 유일성에 따른 송장구분 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소 + 수취인명 조합이 유일한 경우 '단일'로 업데이트
        update_unique_address_and_name = """
        UPDATE 송장출력_서울공산변환 t1
        JOIN (
            SELECT 주소, 수취인명
            FROM 송장출력_서울공산변환
            WHERE 송장구분 = '1장'
            GROUP BY 주소, 수취인명
            HAVING COUNT(*) = 1
        ) AS unique_address ON t1.주소 = unique_address.주소 AND t1.수취인명 = unique_address.수취인명
        SET t1.송장구분 = '단일'
        WHERE t1.송장구분 = '1장'
        """
        cursor.execute(update_unique_address_and_name)

        connection.commit()  # 변경사항 저장
        print(f"Updated unique address and name rows to '단일': {cursor.rowcount}")  # '단일'로 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("주소 및 수취인명 유일성에 따른 송장구분 업데이트 작업 끝")
# ---끝



# ---. 서울공산1장 분류
print("서울공산1장 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울공산1장 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_서울공산1장"
        cursor.execute(sql_truncate)

        # 서울공산 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_서울공산1장 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울공산변환
        WHERE 송장구분 = '1장'
        ORDER BY 위치변환 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("서울공산1장 분류 끝")
# --끝

import time

time.sleep(1)


# ---. 서울공산단일 분류
print("서울공산단일 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울공산단일 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_서울공산단일"
        cursor.execute(sql_truncate)

        # 서울공산 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_서울공산단일 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울공산변환
        WHERE 송장구분 = '단일'
        ORDER BY 위치변환 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("서울공산단일 분류 끝")
# --끝

import time

time.sleep(1)

# ---. 품목코드별 수량 합산 및 품목개수
print("품목코드별 수량 합산 및 품목개수 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 품목코드별로 수량을 합산하여 출력개수에 업데이트
        sql_update_output_count = """
        UPDATE 송장출력_서울공산단일 AS t1 
        INNER JOIN (
            SELECT 품목코드, SUM(수량) AS total_quantity
            FROM 송장출력_서울공산단일
            GROUP BY 품목코드
        ) AS t2 ON t1.품목코드 = t2.품목코드
        SET t1.품목개수 = t2.total_quantity
        """
        cursor.execute(sql_update_output_count)

        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("품목코드별 수량 합산 및 품목개수 작업 끝")
# ---끝

import time

time.sleep(1)

# ---. 서울공산추가 분류
print("서울공산추가 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울공산추가 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_서울공산추가"
        cursor.execute(sql_truncate)

        # 서울공산 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_서울공산추가 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울공산변환
        WHERE 송장구분 = '추가'
        ORDER BY 주소 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("서울공산추가 분류 끝")
# --끝


import time

time.sleep(1)




# ---. 서울공산추가송장 테이블로 유니크 주소 행 이동
print("서울공산추가송장 테이블로 유니크 주소 행 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울공산추가송장 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_서울공산추가송장"
        cursor.execute(sql_truncate)

        # 송장출력_서울공산추가 테이블에서 유니크한 주소를 가진 행을 선택하여 이동
        sql_insert_unique = """
        INSERT INTO 송장출력_서울공산추가송장 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM (
            SELECT *, ROW_NUMBER() OVER (PARTITION BY 주소 ORDER BY id ASC) AS rn
            FROM 송장출력_서울공산추가
        ) AS subquery
        WHERE subquery.rn = 1
        """
        cursor.execute(sql_insert_unique)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("서울공산추가송장 테이블로 유니크 주소 행 이동 끝")
# --끝


import time

time.sleep(1)




# ---. 서울공산추가송장 업데이트
print("서울공산추가송장 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 모든 '수량'을 1로 변경하고 '송장명'을 "추가송장"으로 변경
        sql_update = """
        UPDATE 송장출력_서울공산추가송장
        SET 수량 = 1, 송장명 = '+++', 옵션명 = '+++' , 품목코드 = '0000'
        """
        cursor.execute(sql_update)

        # 변경사항 저장
        connection.commit()
        print(f"Updated {cursor.rowcount} rows in 송장출력_서울공산추가송장.")

finally:
    # 연결 종료
    connection.close()

print("서울공산추가송장 업데이트 완료")
# --끝

import time

time.sleep(1)



# ---. 서울공산 추가송장 늘리기 
print("서울공산 추가송장 늘리기 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 먼저 모든 행을 가져옵니다.
        sql_select = "SELECT * FROM 송장출력_서울공산추가송장 WHERE 택배수량1 > 2"
        cursor.execute(sql_select)
        rows = cursor.fetchall()

        # 각 행을 '택배수량1 - 2' 만큼 복사하여 삽입합니다.
        for row in rows:
            count = int(row['택배수량1']) - 2  # 추가할 행의 수
            sql_insert = """
            INSERT INTO 송장출력_서울공산추가송장
            (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            """
            params = (row['msg1'], row['msg2'], row['msg3'], row['msg4'], row['msg5'], row['msg6'], row['수취인명'], row['전화번호1'], row['전화번호2'], row['우편번호'], row['주소'], row['옵션명'], row['수량'], row['배송메세지'], row['주문번호'], row['쇼핑몰'], row['수집시간'], row['송장명'], row['품목코드'], row['택배비용'], row['박스크기'], row['출력개수'], row['송장수량'], row['별표1'], row['별표2'], row['품목개수'], row['택배수량'], row['택배수량1'], row['택배수량합산'], row['송장구분자'], row['송장구분'], row['송장구분최종'], row['위치'], row['위치변환'])
            for _ in range(count):
                cursor.execute(sql_insert, params)

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

print("서울공산 추가송장 늘리기 끝")
# --끝

import time

time.sleep(1)


# ---. 서울공산추가송장 순번 매기기
print("서울공산추가송장 순번 매기기 시작")
# --시작

import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor  # 결과를 딕셔너리 형태로 받기 위함
)

try:
    with conn.cursor() as cursor:
        # 위치변환 값을 기준으로 정렬하여 모든 데이터를 가져옴
        sql = "SELECT id, 위치변환 FROM 송장출력_서울공산추가송장 ORDER BY 위치변환, id"
        cursor.execute(sql)
        results = cursor.fetchall()

        # 현재 위치변환 값
        current_location = None
        counter = 1

        # 결과를 순회하면서 순번을 매김
        for row in results:
            if current_location != row['위치변환']:
                current_location = row['위치변환']
                counter = 1  # 위치변환 값이 바뀌면 순번을 리셋
            
            # 송장구분자 컬럼 업데이트 (중괄호 형식으로)
            formatted_number = f"[{counter}]"  # 숫자 앞뒤로 대괄호 추가
            update_sql = "UPDATE 송장출력_서울공산추가송장 SET 송장구분자=%s WHERE id=%s"
            cursor.execute(update_sql, (formatted_number, row['id']))
            counter += 1

        conn.commit()  # 변경사항을 데이터베이스에 반영

finally:
    conn.close()  # 데이터베이스 연결 종료

# ---. 서울공산추가송장 순번 매기기
print("서울공산추가송장 순번 매기기 끝")
# --끝

import time

time.sleep(1)


# ---. 서울공산추가송장 주소업데이트
print("서울공산추가송장 주소업데이트 시작")
# --시작


import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # '주소' 컬럼 업데이트 쿼리 실행
        update_sql = "UPDATE 송장출력_서울공산추가송장 SET 주소 = CONCAT(주소, 송장구분자)"
        cursor.execute(update_sql)
        conn.commit()  # 변경사항을 데이터베이스에 반영

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    conn.close()  # 데이터베이스 연결 종료


# ---. 서울공산추가송장 주소업데이트
print("서울공산추가송장 주소업데이트 끝")
# --끝

import time

time.sleep(1)


import pymysql
import pymysql.cursors

# MySQL 연결 설정
connection = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 테이블을 비웁니다.
        cursor.execute("TRUNCATE TABLE 송장출력_서울공산추가합치기")
        
        # 데이터 병합 및 삽입 쿼리
        merge_and_insert_query = """
        INSERT INTO 송장출력_서울공산추가합치기(msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM (
            SELECT * FROM 송장출력_서울공산추가
            UNION ALL
            SELECT * FROM 송장출력_서울공산추가송장
        ) AS combined
        ORDER BY 위치 DESC
        """
        cursor.execute(merge_and_insert_query)
        
        # 변경 사항을 데이터베이스에 확정합니다.
        connection.commit()

finally:
    # 연결을 닫습니다.
    connection.close()


import time

time.sleep(1)



# ---. 서울공산 테이블 마지막정리
print("서울공산 테이블 마지막정리 시작")
# --시작


import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울공산 테이블 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_서울공산")
        
        # 송장출력_서울공산단일 테이블에서 데이터 가져와서 정렬 후 삽입
        sql_insert_from_single = """
        INSERT INTO 송장출력_서울공산 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울공산단일
        ORDER BY 위치변환 ASC
        """
        cursor.execute(sql_insert_from_single)

        # 송장출력_공통박스 테이블에서 데이터 가져와서 정렬 후 삽입
        sql_insert_from_box = """
            INSERT INTO 송장출력_서울공산 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
            SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
            FROM 송장출력_공통박스
            WHERE 송장구분최종 = '서공박스'
            ORDER BY 위치변환 ASC
        """
        cursor.execute(sql_insert_from_box)




        # 송장출력_서울공산1장 테이블의 데이터도 송장출력_서울공산에 추가
        sql_insert_from_one = """
        INSERT INTO 송장출력_서울공산 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울공산1장
        """
        cursor.execute(sql_insert_from_one)

        # 두 테이블의 데이터를 합치고, ID 컬럼을 제외한 후 정렬하여 송장출력_서울공산에 삽입
        sql_merge_and_sort = """
        INSERT INTO 송장출력_서울공산 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울공산추가합치기
        ORDER BY 주소 ASC
        """
        cursor.execute(sql_merge_and_sort)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()


# ---. 서울공산 테이블 마지막정리
print("서울공산 테이블 마지막정리 끝")
# --끝

import time

time.sleep(1)


# ---. 별표 행 이동 및 삭제 작업
print("별표 행 이동 및 삭제 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울공산별표 테이블을 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_서울공산별표")
        print("송장출력_서울공산별표 테이블이 비워졌습니다.")

        # 별표1 또는 별표2가 비어있지 않은 행을 송장출력_서울공산별표 테이블로 이동
        sql_move_to_star_table = """
        INSERT INTO 송장출력_서울공산별표
        SELECT * FROM 송장출력_서울공산
        WHERE 별표1 <> '' OR 별표2 <> ''
        """
        cursor.execute(sql_move_to_star_table)
        print(f"Moved {cursor.rowcount} rows to '송장출력_서울공산별표'.")

        # 이동된 행 삭제
        sql_delete_moved_rows = """
        DELETE FROM 송장출력_서울공산
        WHERE 별표1 <> '' OR 별표2 <> ''
        """
        cursor.execute(sql_delete_moved_rows)
        print(f"Deleted {cursor.rowcount} rows from '송장출력_서울공산'.")

        connection.commit()  # 변경사항 저장


finally:
    connection.close()  # 데이터베이스 연결 종료

print("별표 행 이동 및 삭제 작업 완료")
# ---끝


import time

time.sleep(1)


# ---. 별표1 기준으로 정렬하여 행 이동
print("별표1 기준으로 정렬하여 행 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울공산별표에서 별표1로 정렬하여 송장출력_서울공산에 데이터 삽입
        sql_transfer_data = """
        INSERT INTO 송장출력_서울공산
        (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_서울공산별표
        ORDER BY 주소 ASC, 옵션명 ASC
        """
        cursor.execute(sql_transfer_data)

        print(f"Rows moved: {cursor.rowcount}")  # 이동된 행의 수 출력

        connection.commit()  # 변경사항 저장

finally:
    connection.close()  # 데이터베이스 연결 종료

print("별표1 기준으로 정렬하여 행 이동 작업 완료")
# ---끝


import time

time.sleep(1)



# ---. 데이터 이동 작업
print("송장출력_서울공산에서 송장출력_서울공산_최종으로 데이터 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_서울공산_최종 테이블을 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_서울공산_최종")

        # 송장출력_서울공산에서 송장출력_서울공산_최종으로 데이터 이동
        sql_transfer_data = """
        INSERT INTO 송장출력_서울공산_최종
            (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
             송장명, 수량, 배송메세지, 주문번호, 쇼핑몰, 품목코드, 택배비용, 박스크기, 출력개수, 
             별표1, 별표2, 품목개수)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
               송장명, 수량, 배송메세지, 주문번호, 쇼핑몰, 품목코드, 택배비용, 박스크기, 출력개수, 
               별표1, 별표2, 품목개수
        FROM 송장출력_서울공산
        """
        cursor.execute(sql_transfer_data)
        connection.commit()  # 변경사항 저장
        print(f"Moved {cursor.rowcount} rows from '송장출력_서울공산' to '송장출력_서울공산_최종'.")

finally:
    connection.close()  # 데이터베이스 연결 종료

print("송장출력_서울공산에서 송장출력_서울공산_최종으로 데이터 이동 작업 완료")
# ---끝

import time

time.sleep(1)

# ---. 송장출력_서울공산_최종 테이블 업데이트
print("송장출력_서울공산_최종 테이블 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배비용, 박스크기, 출력개수 업데이트
        sql_update = """
        UPDATE 송장출력_서울공산_최종
        SET 택배비용 = 2150, 박스크기 = '극소', 출력개수 = 1
        """
        cursor.execute(sql_update)
        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows in '송장출력_서울공산_최종'.")

finally:
    connection.close()  # 데이터베이스 연결 종료

print("송장출력_서울공산_최종 테이블 업데이트 완료")
# ---끝

import time

time.sleep(1)

print("서울공산_최종파일만들기 시작")
# ---시작

import pandas as pd
import mysql.connector
from datetime import datetime
import dropbox
import requests

# 데이터베이스 및 데이터 처리 시작
connection = mysql.connector.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci'
)

cursor = connection.cursor()
query = "SELECT * FROM 송장출력_서울공산_최종"
cursor.execute(query)
result = cursor.fetchall()
columns = cursor.column_names
df = pd.DataFrame(result, columns=columns)
unique_count = df.drop_duplicates(subset=['주소', '수취인명', '전화번호1']).shape[0]
connection.close()

# 파일 저장 및 Dropbox 업로드
now = datetime.now()
file_path = f'서울공산/서울공산_{now.strftime("%y%m%d_%H시%M분")}.xlsx'
df.to_excel(file_path, index=False, header=False)

refresh_token = '1CLvznLL7BwAAAAAAAAAAagAlVx3w9P6NGyYjsITAxrSG9vlAEc31ohZZwYhUAB_'
app_key = 'vlxh3ec9nq5fi5t'
app_secret = 'h5rp5n0w9cp4ifk'
token_url = "https://api.dropbox.com/oauth2/token"
params = {
    'refresh_token': refresh_token,
    'grant_type': 'refresh_token',
    'client_id': app_key,
    'client_secret': app_secret
}
response = requests.post(token_url, data=params)
access_token = response.json().get('access_token')

dbx = dropbox.Dropbox(access_token)
with open(file_path, "rb") as f:
    dbx.files_upload(f.read(), f'/서울공산/{file_path}', mode=dropbox.files.WriteMode("overwrite"))
shared_link_metadata = dbx.sharing_create_shared_link_with_settings(f'/서울공산/{file_path}')

# 시간대별 차수 설정
hour = now.hour
minute = now.minute

if 1 <= hour <= 7:
    batch = "1차"
elif 8 <= hour <= 10:
    batch = "2차"
elif 11 <= hour <= 11:
    batch = "3차"
elif 12 <= hour <= 13:
    batch = "4차"
elif 14 <= hour <= 15:
    batch = "5차"
elif 16 <= hour <= 18:
    batch = "막차"
elif 19 <= hour <= 23:
    batch = "추가"
else:
    batch = ""  # 24시(0시)는 배치 처리하지 않음


import time

time.sleep(1)

# 카카오워크 메시지 전송
app_key = 'b36ed46e.0b55706350e94ef8b49e8647a97ae1b7'
chatroom_id = '9483028'
time_string = now.strftime("%m월 %d일 %H시 %M분")

def send_kakao_work_message(app_key, chatroom_id, file_url, batch):
    url = "https://api.kakaowork.com/v1/messages.send"
    headers = {
        "Authorization": f"Bearer {app_key}",
        "Content-Type": "application/json"
    }
    data = {
        "conversation_id": chatroom_id,
        "text": f"{batch} - 서울공산 운송장 수집 완료",
        "blocks": [
            {
                "type": "header",
                "text": f"{batch} - 서울공산 운송장 수집 완료",
                "style": "blue"
            },
            {
                "type": "text",
                "text": "아래 링크에서 파일을 다운로드하세요!",
                "markdown": True
            },
            {
                "type": "button",
                "text": "파일 다운로드",
                "style": "default",
                "action_type": "open_system_browser",
                "value": file_url
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": f"*송장 개수:* {unique_count}건",
                "markdown": True
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": "*송장넘기기*\n아이디: `gram`\n비번: `3535`\n[👉 송장 관리 페이지 바로가기](https://gramwon.me/orders/transfer)",
                "markdown": True
            },
            {
                "type": "divider"
            },
        ]
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()

result = send_kakao_work_message(app_key, chatroom_id, shared_link_metadata.url, batch)
print(result)



# ---. 경기공산낱개 분류
print("경기공산낱개 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기공산변환 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_경기공산변환"
        cursor.execute(sql_truncate)

        # 경기공산 위치의 행만 복사하여 추가
        sql_copy_rows = """
        INSERT INTO 송장출력_경기공산변환 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_사방넷원본변환
        WHERE 송장구분최종 = '공산낱개'
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("경기공산낱개 분류 끝")
# --끝

import time

time.sleep(1)




# ---. 택배수량 계산 및 송장구분자 업데이트
print("택배수량 계산 및 송장구분자 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량을 이용하여 1을 나눈 결과를 소수점 세 자리에서 내림하여 송장구분자 컬럼에 업데이트
        sql_update = """
        UPDATE 송장출력_경기공산변환
        SET 송장구분자 = FLOOR((1 / IFNULL(NULLIF(택배수량, 0), 10)) * 1000) / 1000
        """
        cursor.execute(sql_update)

        # 변경사항 저장
        connection.commit()

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    # 연결 종료
    connection.close()

print("택배수량 계산 및 송장구분자 업데이트 끝")
# --끝


import time

time.sleep(1)



# ---. 송장구분자와 수량 곱 업데이트
print("송장구분자와 수량 곱 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장구분자와 수량을 곱하여 결과 업데이트
        sql_multiply_update = """
        UPDATE 송장출력_경기공산변환
        SET 송장구분자 = 송장구분자 * 수량
        """
        cursor.execute(sql_multiply_update)
        connection.commit()

        print(f"송장구분자 업데이트 완료, {cursor.rowcount} 행이 변경되었습니다.")

finally:
    # 연결 종료
    connection.close()

print("송장구분자와 수량 곱 업데이트 끝")
# --끝


import time

time.sleep(1)



# ---. 주소 + 수취인명 기반 송장구분자 합산 및 택배수량1 업데이트
print("주소 + 수취인명 기반 송장구분자 합산 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소 + 수취인명을 기준으로 송장구분자를 합산
        sql_group_sum = """
        SELECT 주소, 수취인명, SUM(송장구분자) AS 구분자합
        FROM 송장출력_경기공산변환
        GROUP BY 주소, 수취인명
        """
        cursor.execute(sql_group_sum)
        results = cursor.fetchall()

        # 각 그룹의 구분자합을 택배수량1에 업데이트
        for result in results:
            sql_update = """
            UPDATE 송장출력_경기공산변환
            SET 택배수량1 = %s
            WHERE 주소 = %s AND 수취인명 = %s
            """
            cursor.execute(sql_update, (result['구분자합'], result['주소'], result['수취인명']))

        # 변경사항 저장
        connection.commit()

        print(f"Updated {cursor.rowcount} rows based on address and recipient name.")  # 업데이트된 행 수 출력

finally:
    # 연결 종료
    connection.close()

print("주소 + 수취인명 기반 송장구분자 합산 및 택배수량1 업데이트 끝")
# --끝

import time

time.sleep(1)




print("택배수량1 올림 처리 시작")
import pymysql
import math

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량1의 현재 값을 가져옵니다.
        sql_fetch = "SELECT id, 택배수량1 FROM 송장출력_경기공산변환"
        cursor.execute(sql_fetch)
        results = cursor.fetchall()

        updated_rows = 0  # 업데이트된 행 수를 추적
        # 각 행의 택배수량1 값을 올림 처리하고 업데이트 합니다.
        for result in results:
            current_quantity = result['택배수량1']
            if current_quantity is None:  # 택배수량1이 None일 때 처리
                current_quantity = 1  # None 값을 30으로 설정
            
            rounded_quantity = math.ceil(float(current_quantity))  # 택배수량1 값을 올림
            sql_update = "UPDATE 송장출력_경기공산변환 SET 택배수량1 = %s WHERE id = %s"
            cursor.execute(sql_update, (rounded_quantity, result['id']))
            updated_rows += cursor.rowcount

        # 변경사항 저장
        connection.commit()

        print(f"업데이트된 행 수: {updated_rows}")

finally:
    # 연결 종료
    connection.close()

print("택배수량1 올림 처리 완료")
# --끝


import time

time.sleep(1)




# ---. 택배수량1에 따른 송장구분 업데이트
print("택배수량1에 따른 송장구분 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량1이 1보다 큰 경우 '추가'로 업데이트
        update_more_than_one = """
        UPDATE 송장출력_경기공산변환
        SET 송장구분 = '추가'
        WHERE 택배수량1 > 1
        """
        cursor.execute(update_more_than_one)
        
        # 택배수량1이 1 이하인 경우 '1장'으로 업데이트
        update_one_or_less = """
        UPDATE 송장출력_경기공산변환
        SET 송장구분 = '1장'
        WHERE 택배수량1 <= 1
        """
        cursor.execute(update_one_or_less)
        
        connection.commit()  # 변경사항 저장
        print(f"Updated rows for more than one: {cursor.rowcount}")  # '추가'로 업데이트된 행 수 출력
        print(f"Updated rows for one or less: {cursor.rowcount}")  # '1장'으로 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("택배수량1에 따른 송장구분 업데이트 작업 끝")
# ---끝

import time

time.sleep(1)



# ---. 주소 및 수취인명 유일성에 따른 송장구분 업데이트
print("주소 및 수취인명 유일성에 따른 송장구분 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소 + 수취인명 조합이 유일한 경우 '단일'로 업데이트
        update_unique_address_and_name = """
        UPDATE 송장출력_경기공산변환 t1
        JOIN (
            SELECT 주소, 수취인명
            FROM 송장출력_경기공산변환
            WHERE 송장구분 = '1장'
            GROUP BY 주소, 수취인명
            HAVING COUNT(*) = 1
        ) AS unique_address ON t1.주소 = unique_address.주소 AND t1.수취인명 = unique_address.수취인명
        SET t1.송장구분 = '단일'
        WHERE t1.송장구분 = '1장'
        """
        cursor.execute(update_unique_address_and_name)

        connection.commit()  # 변경사항 저장
        print(f"Updated unique address and name rows to '단일': {cursor.rowcount}")  # '단일'로 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("주소 및 수취인명 유일성에 따른 송장구분 업데이트 작업 끝")
# ---끝



# ---. 경기공산1장 분류
print("경기공산1장 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기공산1장 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_경기공산1장"
        cursor.execute(sql_truncate)

        # 경기공산 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_경기공산1장 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기공산변환
        WHERE 송장구분 = '1장'
        ORDER BY 위치변환 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("경기공산1장 분류 끝")
# --끝

import time

time.sleep(1)


# ---. 경기공산단일 분류
print("경기공산단일 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기공산단일 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_경기공산단일"
        cursor.execute(sql_truncate)

        # 경기공산 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_경기공산단일 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기공산변환
        WHERE 송장구분 = '단일'
        ORDER BY 위치변환 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("경기공산단일 분류 끝")
# --끝

import time

time.sleep(1)

# ---. 품목코드별 수량 합산 및 품목개수
print("품목코드별 수량 합산 및 품목개수 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 품목코드별로 수량을 합산하여 출력개수에 업데이트
        sql_update_output_count = """
        UPDATE 송장출력_경기공산단일 AS t1 
        INNER JOIN (
            SELECT 품목코드, SUM(수량) AS total_quantity
            FROM 송장출력_경기공산단일
            GROUP BY 품목코드
        ) AS t2 ON t1.품목코드 = t2.품목코드
        SET t1.품목개수 = t2.total_quantity
        """
        cursor.execute(sql_update_output_count)

        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("품목코드별 수량 합산 및 품목개수 작업 끝")
# ---끝

import time

time.sleep(1)

# ---. 경기공산추가 분류
print("경기공산추가 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기공산추가 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_경기공산추가"
        cursor.execute(sql_truncate)

        # 경기공산 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_경기공산추가 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기공산변환
        WHERE 송장구분 = '추가'
        ORDER BY 주소 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("경기공산추가 분류 끝")
# --끝


import time

time.sleep(1)




# ---. 경기공산추가송장 테이블로 유니크 주소 행 이동
print("경기공산추가송장 테이블로 유니크 주소 행 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기공산추가송장 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_경기공산추가송장"
        cursor.execute(sql_truncate)

        # 송장출력_경기공산추가 테이블에서 유니크한 주소를 가진 행을 선택하여 이동
        sql_insert_unique = """
        INSERT INTO 송장출력_경기공산추가송장 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM (
            SELECT *, ROW_NUMBER() OVER (PARTITION BY 주소 ORDER BY id ASC) AS rn
            FROM 송장출력_경기공산추가
        ) AS subquery
        WHERE subquery.rn = 1
        """
        cursor.execute(sql_insert_unique)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("경기공산추가송장 테이블로 유니크 주소 행 이동 끝")
# --끝


import time

time.sleep(1)




# ---. 경기공산추가송장 업데이트
print("경기공산추가송장 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 모든 '수량'을 1로 변경하고 '송장명'을 "추가송장"으로 변경
        sql_update = """
        UPDATE 송장출력_경기공산추가송장
        SET 수량 = 1, 송장명 = '+++', 옵션명 = '+++' , 품목코드 = '0000'
        """
        cursor.execute(sql_update)

        # 변경사항 저장
        connection.commit()
        print(f"Updated {cursor.rowcount} rows in 송장출력_경기공산추가송장.")

finally:
    # 연결 종료
    connection.close()

print("경기공산추가송장 업데이트 완료")
# --끝

import time

time.sleep(1)



# ---. 경기공산 추가송장 늘리기 
print("경기공산 추가송장 늘리기 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 먼저 모든 행을 가져옵니다.
        sql_select = "SELECT * FROM 송장출력_경기공산추가송장 WHERE 택배수량1 > 2"
        cursor.execute(sql_select)
        rows = cursor.fetchall()

        # 각 행을 '택배수량1 - 2' 만큼 복사하여 삽입합니다.
        for row in rows:
            count = int(row['택배수량1']) - 2  # 추가할 행의 수
            sql_insert = """
            INSERT INTO 송장출력_경기공산추가송장
            (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            """
            params = (row['msg1'], row['msg2'], row['msg3'], row['msg4'], row['msg5'], row['msg6'], row['수취인명'], row['전화번호1'], row['전화번호2'], row['우편번호'], row['주소'], row['옵션명'], row['수량'], row['배송메세지'], row['주문번호'], row['쇼핑몰'], row['수집시간'], row['송장명'], row['품목코드'], row['택배비용'], row['박스크기'], row['출력개수'], row['송장수량'], row['별표1'], row['별표2'], row['품목개수'], row['택배수량'], row['택배수량1'], row['택배수량합산'], row['송장구분자'], row['송장구분'], row['송장구분최종'], row['위치'], row['위치변환'])
            for _ in range(count):
                cursor.execute(sql_insert, params)

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

print("경기공산 추가송장 늘리기 끝")
# --끝

import time

time.sleep(1)


# ---. 경기공산추가송장 순번 매기기
print("경기공산추가송장 순번 매기기 시작")
# --시작

import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor  # 결과를 딕셔너리 형태로 받기 위함
)

try:
    with conn.cursor() as cursor:
        # 위치변환 값을 기준으로 정렬하여 모든 데이터를 가져옴
        sql = "SELECT id, 위치변환 FROM 송장출력_경기공산추가송장 ORDER BY 위치변환, id"
        cursor.execute(sql)
        results = cursor.fetchall()

        # 현재 위치변환 값
        current_location = None
        counter = 1

        # 결과를 순회하면서 순번을 매김
        for row in results:
            if current_location != row['위치변환']:
                current_location = row['위치변환']
                counter = 1  # 위치변환 값이 바뀌면 순번을 리셋
            
            # 송장구분자 컬럼 업데이트 (중괄호 형식으로)
            formatted_number = f"[{counter}]"  # 숫자 앞뒤로 대괄호 추가
            update_sql = "UPDATE 송장출력_경기공산추가송장 SET 송장구분자=%s WHERE id=%s"
            cursor.execute(update_sql, (formatted_number, row['id']))
            counter += 1

        conn.commit()  # 변경사항을 데이터베이스에 반영

finally:
    conn.close()  # 데이터베이스 연결 종료

# ---. 경기공산추가송장 순번 매기기
print("경기공산추가송장 순번 매기기 끝")
# --끝

import time

time.sleep(1)


# ---. 경기공산추가송장 주소업데이트
print("경기공산추가송장 주소업데이트 시작")
# --시작


import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # '주소' 컬럼 업데이트 쿼리 실행
        update_sql = "UPDATE 송장출력_경기공산추가송장 SET 주소 = CONCAT(주소, 송장구분자)"
        cursor.execute(update_sql)
        conn.commit()  # 변경사항을 데이터베이스에 반영

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    conn.close()  # 데이터베이스 연결 종료


# ---. 경기공산추가송장 주소업데이트
print("경기공산추가송장 주소업데이트 끝")
# --끝

import time

time.sleep(1)



import pymysql
import pymysql.cursors

# MySQL 연결 설정
connection = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 테이블을 비웁니다.
        cursor.execute("TRUNCATE TABLE 송장출력_경기공산추가합치기")
        
        # 데이터 병합 및 삽입 쿼리
        merge_and_insert_query = """
        INSERT INTO 송장출력_경기공산추가합치기(msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM (
            SELECT * FROM 송장출력_경기공산추가
            UNION ALL
            SELECT * FROM 송장출력_경기공산추가송장
        ) AS combined
        ORDER BY 위치 DESC
        """
        cursor.execute(merge_and_insert_query)
        
        # 변경 사항을 데이터베이스에 확정합니다.
        connection.commit()

finally:
    # 연결을 닫습니다.
    connection.close()

import time

time.sleep(1)



# ---. 경기공산 테이블 마지막정리
print("경기공산 테이블 마지막정리 시작")
# --시작


import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기공산 테이블 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_경기공산")
        
        # 송장출력_경기공산단일 테이블에서 데이터 가져와서 정렬 후 삽입
        sql_insert_from_single = """
        INSERT INTO 송장출력_경기공산 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기공산단일
        ORDER BY 위치변환 ASC
        """
        cursor.execute(sql_insert_from_single)

        # 송장출력_공통박스 테이블에서 데이터 가져와서 정렬 후 삽입
        sql_insert_from_box = """
            INSERT INTO 송장출력_경기공산 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
            SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
            FROM 송장출력_공통박스
            WHERE 송장구분최종 = '공산박스'
            ORDER BY 위치변환 ASC
        """
        cursor.execute(sql_insert_from_box)




        # 송장출력_경기공산1장 테이블의 데이터도 송장출력_경기공산에 추가
        sql_insert_from_one = """
        INSERT INTO 송장출력_경기공산 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기공산1장
        """
        cursor.execute(sql_insert_from_one)

        # 두 테이블의 데이터를 합치고, ID 컬럼을 제외한 후 정렬하여 송장출력_경기공산에 삽입
        sql_merge_and_sort = """
        INSERT INTO 송장출력_경기공산 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기공산추가합치기
        ORDER BY 주소 ASC
        """
        cursor.execute(sql_merge_and_sort)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()


# ---. 경기공산 테이블 마지막정리
print("경기공산 테이블 마지막정리 끝")
# --끝

import time

time.sleep(1)


# ---. 별표 행 이동 및 삭제 작업
print("별표 행 이동 및 삭제 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기공산별표 테이블을 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_경기공산별표")
        print("송장출력_경기공산별표 테이블이 비워졌습니다.")

        # 별표1 또는 별표2가 비어있지 않은 행을 송장출력_경기공산별표 테이블로 이동
        sql_move_to_star_table = """
        INSERT INTO 송장출력_경기공산별표
        SELECT * FROM 송장출력_경기공산
        WHERE 별표1 <> '' OR 별표2 <> ''
        """
        cursor.execute(sql_move_to_star_table)
        print(f"Moved {cursor.rowcount} rows to '송장출력_경기공산별표'.")

        # 이동된 행 삭제
        sql_delete_moved_rows = """
        DELETE FROM 송장출력_경기공산
        WHERE 별표1 <> '' OR 별표2 <> ''
        """
        cursor.execute(sql_delete_moved_rows)
        print(f"Deleted {cursor.rowcount} rows from '송장출력_경기공산'.")

        connection.commit()  # 변경사항 저장


finally:
    connection.close()  # 데이터베이스 연결 종료

print("별표 행 이동 및 삭제 작업 완료")
# ---끝


import time

time.sleep(1)


# ---. 별표1 기준으로 정렬하여 행 이동
print("별표1 기준으로 정렬하여 행 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기공산별표에서 별표1로 정렬하여 송장출력_경기공산에 데이터 삽입
        sql_transfer_data = """
        INSERT INTO 송장출력_경기공산
        (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_경기공산별표
        ORDER BY 주소 ASC, 옵션명 ASC
        """
        cursor.execute(sql_transfer_data)

        print(f"Rows moved: {cursor.rowcount}")  # 이동된 행의 수 출력

        connection.commit()  # 변경사항 저장

finally:
    connection.close()  # 데이터베이스 연결 종료

print("별표1 기준으로 정렬하여 행 이동 작업 완료")
# ---끝


import time

time.sleep(1)



# ---. 데이터 이동 작업
print("송장출력_경기공산에서 송장출력_경기공산_최종으로 데이터 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_경기공산_최종 테이블을 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_경기공산_최종")

        # 송장출력_경기공산에서 송장출력_경기공산_최종으로 데이터 이동
        sql_transfer_data = """
        INSERT INTO 송장출력_경기공산_최종
            (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
             송장명, 수량, 배송메세지, 주문번호, 쇼핑몰, 품목코드, 택배비용, 박스크기, 출력개수, 
             별표1, 별표2, 품목개수)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
               송장명, 수량, 배송메세지, 주문번호, 쇼핑몰, 품목코드, 택배비용, 박스크기, 출력개수, 
               별표1, 별표2, 품목개수
        FROM 송장출력_경기공산
        """
        cursor.execute(sql_transfer_data)
        connection.commit()  # 변경사항 저장
        print(f"Moved {cursor.rowcount} rows from '송장출력_경기공산' to '송장출력_경기공산_최종'.")

finally:
    connection.close()  # 데이터베이스 연결 종료

print("송장출력_경기공산에서 송장출력_경기공산_최종으로 데이터 이동 작업 완료")
# ---끝

import time

time.sleep(1)

# ---. 송장출력_경기공산_최종 테이블 업데이트
print("송장출력_경기공산_최종 테이블 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배비용, 박스크기, 출력개수 업데이트
        sql_update = """
        UPDATE 송장출력_경기공산_최종
        SET 택배비용 = 2150, 박스크기 = '극소', 출력개수 = 1
        """
        cursor.execute(sql_update)
        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows in '송장출력_경기공산_최종'.")

finally:
    connection.close()  # 데이터베이스 연결 종료

print("송장출력_경기공산_최종 테이블 업데이트 완료")
# ---끝

import time

time.sleep(5)

print("경기공산_최종파일만들기 시작")
# ---시작

import pandas as pd
import mysql.connector
from datetime import datetime
import dropbox
import requests

# 데이터베이스 및 데이터 처리 시작
connection = mysql.connector.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci'
)

cursor = connection.cursor()
query = "SELECT * FROM 송장출력_경기공산_최종"
cursor.execute(query)
result = cursor.fetchall()
columns = cursor.column_names
df = pd.DataFrame(result, columns=columns)
unique_count = df.drop_duplicates(subset=['주소', '수취인명', '전화번호1']).shape[0]
connection.close()

# 파일 저장 및 Dropbox 업로드
now = datetime.now()
file_path = f'경기공산/경기공산_{now.strftime("%y%m%d_%H시%M분")}.xlsx'
df.to_excel(file_path, index=False, header=False)

refresh_token = '1CLvznLL7BwAAAAAAAAAAagAlVx3w9P6NGyYjsITAxrSG9vlAEc31ohZZwYhUAB_'
app_key = 'vlxh3ec9nq5fi5t'
app_secret = 'h5rp5n0w9cp4ifk'
token_url = "https://api.dropbox.com/oauth2/token"
params = {
    'refresh_token': refresh_token,
    'grant_type': 'refresh_token',
    'client_id': app_key,
    'client_secret': app_secret
}
response = requests.post(token_url, data=params)
access_token = response.json().get('access_token')

dbx = dropbox.Dropbox(access_token)
with open(file_path, "rb") as f:
    dbx.files_upload(f.read(), f'/경기공산/{file_path}', mode=dropbox.files.WriteMode("overwrite"))
shared_link_metadata = dbx.sharing_create_shared_link_with_settings(f'/경기공산/{file_path}')

# 시간대별 차수 설정
hour = now.hour
minute = now.minute

if 1 <= hour <= 7:
    batch = "1차"
elif 8 <= hour <= 10:
    batch = "2차"
elif 11 <= hour <= 11:
    batch = "3차"
elif 12 <= hour <= 13:
    batch = "4차"
elif 14 <= hour <= 15:
    batch = "5차"
elif 16 <= hour <= 18:
    batch = "막차"
elif 19 <= hour <= 23:
    batch = "추가"
else:
    batch = ""  # 24시(0시)는 배치 처리하지 않음


import time

time.sleep(10)

# 카카오워크 메시지 전송
app_key = 'b36ed46e.0b55706350e94ef8b49e8647a97ae1b7'
chatroom_id = '9483028'
time_string = now.strftime("%m월 %d일 %H시 %M분")

def send_kakao_work_message(app_key, chatroom_id, file_url, batch):
    url = "https://api.kakaowork.com/v1/messages.send"
    headers = {
        "Authorization": f"Bearer {app_key}",
        "Content-Type": "application/json"
    }
    data = {
        "conversation_id": chatroom_id,
        "text": f"{batch} - 경기공산 운송장 수집 완료",
        "blocks": [
            {
                "type": "header",
                "text": f"{batch} - 경기공산 운송장 수집 완료",
                "style": "blue"
            },
            {
                "type": "text",
                "text": "아래 링크에서 파일을 다운로드하세요!",
                "markdown": True
            },
            {
                "type": "button",
                "text": "파일 다운로드",
                "style": "default",
                "action_type": "open_system_browser",
                "value": file_url
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": f"*송장 개수:* {unique_count}건",
                "markdown": True
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": "*송장넘기기*\n아이디: `gram`\n비번: `3535`\n[👉 송장 관리 페이지 바로가기](https://gramwon.me/orders/transfer)",
                "markdown": True
            },
            {
                "type": "divider"
            },
        ]
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()

result = send_kakao_work_message(app_key, chatroom_id, shared_link_metadata.url, batch)
print(result)



import time

time.sleep(1)


# ---. 경기공산 전체 끝
print("경기공산 전체 끝")
print("부산청과 시작")
# ---. 부산청과 시작


# ---. 경기공산 전체 끝
print("경기공산 전체 끝")
print("부산청과 시작")
# ---. 부산청과 시작

# ---. 부산청과낱개 분류
print("부산청과낱개 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_부산청과변환 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_부산청과변환"
        cursor.execute(sql_truncate)

        # 부산청과 위치의 행만 복사하여 추가
        sql_copy_rows = """
        INSERT INTO 송장출력_부산청과변환 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_사방넷원본변환
        WHERE 송장구분최종 = '청과낱개'
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("부산청과낱개 분류 끝")
# --끝

import time

time.sleep(1)




# ---. 택배수량 계산 및 송장구분자 업데이트
print("택배수량 계산 및 송장구분자 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량을 이용하여 1을 나눈 결과를 소수점 세 자리에서 내림하여 송장구분자 컬럼에 업데이트
        sql_update = """
        UPDATE 송장출력_부산청과변환
        SET 송장구분자 = FLOOR((1 / IFNULL(NULLIF(택배수량, 0), 10)) * 1000) / 1000
        """
        cursor.execute(sql_update)

        # 변경사항 저장
        connection.commit()

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    # 연결 종료
    connection.close()

print("택배수량 계산 및 송장구분자 업데이트 끝")
# --끝


import time

time.sleep(1)



# ---. 송장구분자와 수량 곱 업데이트
print("송장구분자와 수량 곱 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장구분자와 수량을 곱하여 결과 업데이트
        sql_multiply_update = """
        UPDATE 송장출력_부산청과변환
        SET 송장구분자 = 송장구분자 * 수량
        """
        cursor.execute(sql_multiply_update)
        connection.commit()

        print(f"송장구분자 업데이트 완료, {cursor.rowcount} 행이 변경되었습니다.")

finally:
    # 연결 종료
    connection.close()

print("송장구분자와 수량 곱 업데이트 끝")
# --끝


import time

time.sleep(1)



# ---. 주소 + 수취인명 기반 송장구분자 합산 및 택배수량1 업데이트
print("주소 + 수취인명 기반 송장구분자 합산 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소 + 수취인명을 기준으로 송장구분자를 합산
        sql_group_sum = """
        SELECT 주소, 수취인명, SUM(송장구분자) AS 구분자합
        FROM 송장출력_부산청과변환
        GROUP BY 주소, 수취인명
        """
        cursor.execute(sql_group_sum)
        results = cursor.fetchall()

        # 각 그룹의 구분자합을 택배수량1에 업데이트
        for result in results:
            sql_update = """
            UPDATE 송장출력_부산청과변환
            SET 택배수량1 = %s
            WHERE 주소 = %s AND 수취인명 = %s
            """
            cursor.execute(sql_update, (result['구분자합'], result['주소'], result['수취인명']))

        # 변경사항 저장
        connection.commit()

        print(f"Updated {cursor.rowcount} rows based on address and recipient name.")  # 업데이트된 행 수 출력

finally:
    # 연결 종료
    connection.close()

print("주소 + 수취인명 기반 송장구분자 합산 및 택배수량1 업데이트 끝")
# --끝

import time

time.sleep(1)




print("택배수량1 올림 처리 시작")
import pymysql
import math

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량1의 현재 값을 가져옵니다.
        sql_fetch = "SELECT id, 택배수량1 FROM 송장출력_부산청과변환"
        cursor.execute(sql_fetch)
        results = cursor.fetchall()

        updated_rows = 0  # 업데이트된 행 수를 추적
        # 각 행의 택배수량1 값을 올림 처리하고 업데이트 합니다.
        for result in results:
            current_quantity = result['택배수량1']
            if current_quantity is None:  # 택배수량1이 None일 때 처리
                current_quantity = 1  # None 값을 30으로 설정
            
            rounded_quantity = math.ceil(float(current_quantity))  # 택배수량1 값을 올림
            sql_update = "UPDATE 송장출력_부산청과변환 SET 택배수량1 = %s WHERE id = %s"
            cursor.execute(sql_update, (rounded_quantity, result['id']))
            updated_rows += cursor.rowcount

        # 변경사항 저장
        connection.commit()

        print(f"업데이트된 행 수: {updated_rows}")

finally:
    # 연결 종료
    connection.close()

print("택배수량1 올림 처리 완료")
# --끝


import time

time.sleep(1)




# ---. 택배수량1에 따른 송장구분 업데이트
print("택배수량1에 따른 송장구분 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량1이 1보다 큰 경우 '추가'로 업데이트
        update_more_than_one = """
        UPDATE 송장출력_부산청과변환
        SET 송장구분 = '추가'
        WHERE 택배수량1 > 1
        """
        cursor.execute(update_more_than_one)
        
        # 택배수량1이 1 이하인 경우 '1장'으로 업데이트
        update_one_or_less = """
        UPDATE 송장출력_부산청과변환
        SET 송장구분 = '1장'
        WHERE 택배수량1 <= 1
        """
        cursor.execute(update_one_or_less)
        
        connection.commit()  # 변경사항 저장
        print(f"Updated rows for more than one: {cursor.rowcount}")  # '추가'로 업데이트된 행 수 출력
        print(f"Updated rows for one or less: {cursor.rowcount}")  # '1장'으로 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("택배수량1에 따른 송장구분 업데이트 작업 끝")
# ---끝

import time

time.sleep(1)



# ---. 주소 및 수취인명 유일성에 따른 송장구분 업데이트
print("주소 및 수취인명 유일성에 따른 송장구분 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소 + 수취인명 조합이 유일한 경우 '단일'로 업데이트
        update_unique_address_and_name = """
        UPDATE 송장출력_부산청과변환 t1
        JOIN (
            SELECT 주소, 수취인명
            FROM 송장출력_부산청과변환
            WHERE 송장구분 = '1장'
            GROUP BY 주소, 수취인명
            HAVING COUNT(*) = 1
        ) AS unique_address ON t1.주소 = unique_address.주소 AND t1.수취인명 = unique_address.수취인명
        SET t1.송장구분 = '단일'
        WHERE t1.송장구분 = '1장'
        """
        cursor.execute(update_unique_address_and_name)

        connection.commit()  # 변경사항 저장
        print(f"Updated unique address and name rows to '단일': {cursor.rowcount}")  # '단일'로 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("주소 및 수취인명 유일성에 따른 송장구분 업데이트 작업 끝")
# ---끝



# ---. 부산청과1장 분류
print("부산청과1장 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_부산청과1장 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_부산청과1장"
        cursor.execute(sql_truncate)

        # 부산청과 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_부산청과1장 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_부산청과변환
        WHERE 송장구분 = '1장'
        ORDER BY 위치변환 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("부산청과1장 분류 끝")
# --끝

import time

time.sleep(1)


# ---. 부산청과단일 분류
print("부산청과단일 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_부산청과단일 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_부산청과단일"
        cursor.execute(sql_truncate)

        # 부산청과 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_부산청과단일 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_부산청과변환
        WHERE 송장구분 = '단일'
        ORDER BY 위치변환 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("부산청과단일 분류 끝")
# --끝

import time

time.sleep(1)

# ---. 품목코드별 수량 합산 및 품목개수
print("품목코드별 수량 합산 및 품목개수 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 품목코드별로 수량을 합산하여 출력개수에 업데이트
        sql_update_output_count = """
        UPDATE 송장출력_부산청과단일 AS t1 
        INNER JOIN (
            SELECT 품목코드, SUM(수량) AS total_quantity
            FROM 송장출력_부산청과단일
            GROUP BY 품목코드
        ) AS t2 ON t1.품목코드 = t2.품목코드
        SET t1.품목개수 = t2.total_quantity
        """
        cursor.execute(sql_update_output_count)

        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("품목코드별 수량 합산 및 품목개수 작업 끝")
# ---끝

import time

time.sleep(1)

# ---. 부산청과추가 분류
print("부산청과추가 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_부산청과추가 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_부산청과추가"
        cursor.execute(sql_truncate)

        # 부산청과 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_부산청과추가 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_부산청과변환
        WHERE 송장구분 = '추가'
        ORDER BY 주소 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("부산청과추가 분류 끝")
# --끝


import time

time.sleep(1)




# ---. 부산청과추가송장 테이블로 유니크 주소 행 이동
print("부산청과추가송장 테이블로 유니크 주소 행 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_부산청과추가송장 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_부산청과추가송장"
        cursor.execute(sql_truncate)

        # 송장출력_부산청과추가 테이블에서 유니크한 주소를 가진 행을 선택하여 이동
        sql_insert_unique = """
        INSERT INTO 송장출력_부산청과추가송장 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM (
            SELECT *, ROW_NUMBER() OVER (PARTITION BY 주소 ORDER BY id ASC) AS rn
            FROM 송장출력_부산청과추가
        ) AS subquery
        WHERE subquery.rn = 1
        """
        cursor.execute(sql_insert_unique)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("부산청과추가송장 테이블로 유니크 주소 행 이동 끝")
# --끝


import time

time.sleep(1)




# ---. 부산청과추가송장 업데이트
print("부산청과추가송장 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 모든 '수량'을 1로 변경하고 '송장명'을 "추가송장"으로 변경
        sql_update = """
        UPDATE 송장출력_부산청과추가송장
        SET 수량 = 1, 송장명 = '+++', 옵션명 = '+++' , 품목코드 = '0000'
        """
        cursor.execute(sql_update)

        # 변경사항 저장
        connection.commit()
        print(f"Updated {cursor.rowcount} rows in 송장출력_부산청과추가송장.")

finally:
    # 연결 종료
    connection.close()

print("부산청과추가송장 업데이트 완료")
# --끝

import time

time.sleep(1)



# ---. 부산청과 추가송장 늘리기 
print("부산청과 추가송장 늘리기 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 먼저 모든 행을 가져옵니다.
        sql_select = "SELECT * FROM 송장출력_부산청과추가송장 WHERE 택배수량1 > 2"
        cursor.execute(sql_select)
        rows = cursor.fetchall()

        # 각 행을 '택배수량1 - 2' 만큼 복사하여 삽입합니다.
        for row in rows:
            count = int(row['택배수량1']) - 2  # 추가할 행의 수
            sql_insert = """
            INSERT INTO 송장출력_부산청과추가송장
            (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            """
            params = (row['msg1'], row['msg2'], row['msg3'], row['msg4'], row['msg5'], row['msg6'], row['수취인명'], row['전화번호1'], row['전화번호2'], row['우편번호'], row['주소'], row['옵션명'], row['수량'], row['배송메세지'], row['주문번호'], row['쇼핑몰'], row['수집시간'], row['송장명'], row['품목코드'], row['택배비용'], row['박스크기'], row['출력개수'], row['송장수량'], row['별표1'], row['별표2'], row['품목개수'], row['택배수량'], row['택배수량1'], row['택배수량합산'], row['송장구분자'], row['송장구분'], row['송장구분최종'], row['위치'], row['위치변환'])
            for _ in range(count):
                cursor.execute(sql_insert, params)

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

print("부산청과 추가송장 늘리기 끝")
# --끝

import time

time.sleep(1)


# ---. 부산청과추가송장 순번 매기기
print("부산청과추가송장 순번 매기기 시작")
# --시작

import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor  # 결과를 딕셔너리 형태로 받기 위함
)

try:
    with conn.cursor() as cursor:
        # 위치변환 값을 기준으로 정렬하여 모든 데이터를 가져옴
        sql = "SELECT id, 위치변환 FROM 송장출력_부산청과추가송장 ORDER BY 위치변환, id"
        cursor.execute(sql)
        results = cursor.fetchall()

        # 현재 위치변환 값
        current_location = None
        counter = 1

        # 결과를 순회하면서 순번을 매김
        for row in results:
            if current_location != row['위치변환']:
                current_location = row['위치변환']
                counter = 1  # 위치변환 값이 바뀌면 순번을 리셋
            
            # 송장구분자 컬럼 업데이트 (중괄호 형식으로)
            formatted_number = f"[{counter}]"  # 숫자 앞뒤로 대괄호 추가
            update_sql = "UPDATE 송장출력_부산청과추가송장 SET 송장구분자=%s WHERE id=%s"
            cursor.execute(update_sql, (formatted_number, row['id']))
            counter += 1

        conn.commit()  # 변경사항을 데이터베이스에 반영

finally:
    conn.close()  # 데이터베이스 연결 종료

# ---. 부산청과추가송장 순번 매기기
print("부산청과추가송장 순번 매기기 끝")
# --끝

import time

time.sleep(1)


# ---. 부산청과추가송장 주소업데이트
print("부산청과추가송장 주소업데이트 시작")
# --시작


import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # '주소' 컬럼 업데이트 쿼리 실행
        update_sql = "UPDATE 송장출력_부산청과추가송장 SET 주소 = CONCAT(주소, 송장구분자)"
        cursor.execute(update_sql)
        conn.commit()  # 변경사항을 데이터베이스에 반영

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    conn.close()  # 데이터베이스 연결 종료


# ---. 부산청과추가송장 주소업데이트
print("부산청과추가송장 주소업데이트 끝")
# --끝

import time

time.sleep(1)


import pymysql
import pymysql.cursors

# MySQL 연결 설정
connection = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 테이블을 비웁니다.
        cursor.execute("TRUNCATE TABLE 송장출력_부산청과추가합치기")
        
        # 데이터 병합 및 삽입 쿼리
        merge_and_insert_query = """
        INSERT INTO 송장출력_부산청과추가합치기(msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM (
            SELECT * FROM 송장출력_부산청과추가
            UNION ALL
            SELECT * FROM 송장출력_부산청과추가송장
        ) AS combined
        ORDER BY 위치 DESC
        """
        cursor.execute(merge_and_insert_query)
        
        # 변경 사항을 데이터베이스에 확정합니다.
        connection.commit()

finally:
    # 연결을 닫습니다.
    connection.close()

import time

time.sleep(1)



# ---. 부산청과 테이블 마지막정리
print("부산청과 테이블 마지막정리 시작")
# --시작


import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_부산청과 테이블 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_부산청과")
        
        # 송장출력_부산청과단일 테이블에서 데이터 가져와서 정렬 후 삽입
        sql_insert_from_single = """
        INSERT INTO 송장출력_부산청과 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_부산청과단일
        ORDER BY 위치변환 ASC
        """
        cursor.execute(sql_insert_from_single)

        # 송장출력_공통박스 테이블에서 데이터 가져와서 정렬 후 삽입
        sql_insert_from_box = """
            INSERT INTO 송장출력_부산청과 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
            SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
            FROM 송장출력_공통박스
            WHERE 송장구분최종 = '청과박스'
            ORDER BY 위치변환 ASC
        """
        cursor.execute(sql_insert_from_box)




        # 송장출력_부산청과1장 테이블의 데이터도 송장출력_부산청과에 추가
        sql_insert_from_one = """
        INSERT INTO 송장출력_부산청과 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_부산청과1장
        """
        cursor.execute(sql_insert_from_one)

        # 두 테이블의 데이터를 합치고, ID 컬럼을 제외한 후 정렬하여 송장출력_부산청과에 삽입
        sql_merge_and_sort = """
        INSERT INTO 송장출력_부산청과 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_부산청과추가합치기
        ORDER BY 주소 ASC
        """
        cursor.execute(sql_merge_and_sort)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()


# ---. 부산청과 테이블 마지막정리
print("부산청과 테이블 마지막정리 끝")
# --끝

import time

time.sleep(1)


# ---. 별표 행 이동 및 삭제 작업
print("별표 행 이동 및 삭제 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_부산청과별표 테이블을 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_부산청과별표")
        print("송장출력_부산청과별표 테이블이 비워졌습니다.")

        # 별표1 또는 별표2가 비어있지 않은 행을 송장출력_부산청과별표 테이블로 이동
        sql_move_to_star_table = """
        INSERT INTO 송장출력_부산청과별표
        SELECT * FROM 송장출력_부산청과
        WHERE 별표1 <> '' OR 별표2 <> ''
        """
        cursor.execute(sql_move_to_star_table)
        print(f"Moved {cursor.rowcount} rows to '송장출력_부산청과별표'.")

        # 이동된 행 삭제
        sql_delete_moved_rows = """
        DELETE FROM 송장출력_부산청과
        WHERE 별표1 <> '' OR 별표2 <> ''
        """
        cursor.execute(sql_delete_moved_rows)
        print(f"Deleted {cursor.rowcount} rows from '송장출력_부산청과'.")

        connection.commit()  # 변경사항 저장


finally:
    connection.close()  # 데이터베이스 연결 종료

print("별표 행 이동 및 삭제 작업 완료")
# ---끝


import time

time.sleep(1)


# ---. 별표1 기준으로 정렬하여 행 이동
print("별표1 기준으로 정렬하여 행 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_부산청과별표에서 별표1로 정렬하여 송장출력_부산청과에 데이터 삽입
        sql_transfer_data = """
        INSERT INTO 송장출력_부산청과
        (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_부산청과별표
        ORDER BY 주소 ASC, 옵션명 ASC
        """
        cursor.execute(sql_transfer_data)

        print(f"Rows moved: {cursor.rowcount}")  # 이동된 행의 수 출력

        connection.commit()  # 변경사항 저장

finally:
    connection.close()  # 데이터베이스 연결 종료

print("별표1 기준으로 정렬하여 행 이동 작업 완료")
# ---끝


import time

time.sleep(1)



# ---. 데이터 이동 작업
print("송장출력_부산청과에서 송장출력_부산청과_최종으로 데이터 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_부산청과_최종 테이블을 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_부산청과_최종")

        # 송장출력_부산청과에서 송장출력_부산청과_최종으로 데이터 이동
        sql_transfer_data = """
        INSERT INTO 송장출력_부산청과_최종
            (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
             송장명, 수량, 배송메세지, 주문번호, 쇼핑몰, 품목코드, 택배비용, 박스크기, 출력개수, 
             별표1, 별표2, 품목개수)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
               송장명, 수량, 배송메세지, 주문번호, 쇼핑몰, 품목코드, 택배비용, 박스크기, 출력개수, 
               별표1, 별표2, 품목개수
        FROM 송장출력_부산청과
        """
        cursor.execute(sql_transfer_data)
        connection.commit()  # 변경사항 저장
        print(f"Moved {cursor.rowcount} rows from '송장출력_부산청과' to '송장출력_부산청과_최종'.")

finally:
    connection.close()  # 데이터베이스 연결 종료

print("송장출력_부산청과에서 송장출력_부산청과_최종으로 데이터 이동 작업 완료")
# ---끝

import time

time.sleep(1)

# ---. 송장출력_부산청과_최종 테이블 업데이트
print("송장출력_부산청과_최종 테이블 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배비용, 박스크기, 출력개수 업데이트
        sql_update = """
        UPDATE 송장출력_부산청과_최종
        SET 택배비용 = 2300, 박스크기 = '극소', 출력개수 = 1
        """
        cursor.execute(sql_update)
        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows in '송장출력_부산청과_최종'.")

finally:
    connection.close()  # 데이터베이스 연결 종료

print("송장출력_부산청과_최종 테이블 업데이트 완료")
# ---끝

#2. 엑셀에서 코드 가져오기
import pandas as pd
import pymysql
import time

def truncate_and_insert_busan_outside():
    print("부산 외부출고 코드입력 시작")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # Excel 파일 경로
    excel_file = '0.관리자파일/ㄱ.부산청과관리자폴더/외부출고.xlsx'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        # Excel 파일 읽기
        df = pd.read_excel(excel_file)

        # NaN 값을 빈 문자열("")로 대체
        df.fillna('', inplace=True)

        # MySQL 테이블에 데이터 삽입 전에 테이블 비우기
        with connection.cursor() as cursor:
            # 테이블 비우기
            cursor.execute("TRUNCATE TABLE 송장출력_부산청과_외부출고")

        # MySQL 테이블에 데이터 삽입
        with connection.cursor() as cursor:
            for index, row in df.iterrows():
                sql = """
                INSERT INTO 송장출력_부산청과_외부출고 (품목코드, 상품명)
                VALUES (%s, %s)
                """
                cursor.execute(sql, (row['품목코드'], row['상품명']))

        # 변경사항 저장
        connection.commit()

        print("부산 외부출고 코드입력 끝")
    except Exception as e:
        print(f"Error in truncate_and_insert_busan: {e}")
    finally:
        # 연결 종료
        connection.close()

# 함수 실행
truncate_and_insert_busan_outside()

time.sleep(1)




import pymysql

def process_busan_data():
    print("데이터 처리 시작 (송장출력_부산청과_최종변환)")
    # MySQL 연결 정보
    host = 'gramwonlogis.mycafe24.com'
    port = 3306
    user = 'gramwonlogis'
    password = 'jung5516!'
    database = 'gramwonlogis'

    # MySQL 연결 설정
    connection = pymysql.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        database=database,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            # 송장출력_부산청과_최종변환 테이블 비우기
            cursor.execute("TRUNCATE TABLE 송장출력_부산청과_최종변환")
            print("송장출력_부산청과_최종변환 테이블 비우기 완료")

            # 송장출력_부산청과_외부출고와 송장출력_부산청과_최종의 품목코드가 같은 행을 송장출력_부산청과_최종변환으로 옮기기
            insert_sql = """
            INSERT INTO 송장출력_부산청과_최종변환
            SELECT t.*
            FROM 송장출력_부산청과_최종 t
            JOIN 송장출력_부산청과_외부출고 e ON t.품목코드 = e.품목코드
            """
            cursor.execute(insert_sql)
            print("송장출력_부산청과_최종변환 테이블로 데이터 옮기기 완료")

            # 송장출력_부산청과_최종에서 해당 행 삭제
            delete_sql = """
            DELETE t
            FROM 송장출력_부산청과_최종 t
            JOIN 송장출력_부산청과_외부출고 e ON t.품목코드 = e.품목코드
            """
            cursor.execute(delete_sql)
            print("송장출력_부산청과_최종 테이블에서 데이터 삭제 완료")

        # 변경사항 저장
        connection.commit()
    except Exception as e:
        print(f"Error in process_busan_data: {e}")
    finally:
        # 연결 종료
        connection.close()
        print("MySQL 연결 종료")

# 함수 실행
if __name__ == "__main__":
    process_busan_data()



import time

time.sleep(1)

print("부산청과_최종파일만들기 시작")
# ---시작

import pandas as pd
import mysql.connector
from datetime import datetime
import dropbox
import requests

# 데이터베이스 및 데이터 처리 시작
connection = mysql.connector.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci'
)

cursor = connection.cursor()
query = "SELECT * FROM 송장출력_부산청과_최종"
cursor.execute(query)
result = cursor.fetchall()
columns = cursor.column_names
df = pd.DataFrame(result, columns=columns)
unique_count = df.drop_duplicates(subset=['주소', '수취인명', '전화번호1']).shape[0]
connection.close()

# 파일 저장 및 Dropbox 업로드
now = datetime.now()
file_path = f'부산청과/부산청과_{now.strftime("%y%m%d_%H시%M분")}.xlsx'
df.to_excel(file_path, index=False, header=False)

refresh_token = '1CLvznLL7BwAAAAAAAAAAagAlVx3w9P6NGyYjsITAxrSG9vlAEc31ohZZwYhUAB_'
app_key = 'vlxh3ec9nq5fi5t'
app_secret = 'h5rp5n0w9cp4ifk'
token_url = "https://api.dropbox.com/oauth2/token"
params = {
    'refresh_token': refresh_token,
    'grant_type': 'refresh_token',
    'client_id': app_key,
    'client_secret': app_secret
}
response = requests.post(token_url, data=params)
access_token = response.json().get('access_token')

dbx = dropbox.Dropbox(access_token)
with open(file_path, "rb") as f:
    dbx.files_upload(f.read(), f'/부산청과/{file_path}', mode=dropbox.files.WriteMode("overwrite"))
shared_link_metadata = dbx.sharing_create_shared_link_with_settings(f'/부산청과/{file_path}')

# 시간대별 차수 설정
hour = now.hour
minute = now.minute

if 1 <= hour <= 7:
    batch = "1차"
elif 8 <= hour <= 10:
    batch = "2차"
elif 11 <= hour <= 11:
    batch = "3차"
elif 12 <= hour <= 13:
    batch = "4차"
elif 14 <= hour <= 15:
    batch = "5차"
elif 16 <= hour <= 18:
    batch = "막차"
elif 19 <= hour <= 23:
    batch = "추가"
else:
    batch = ""  # 24시(0시)는 배치 처리하지 않음


import time

time.sleep(1)

# 카카오워크 메시지 전송
app_key = 'b36ed46e.0b55706350e94ef8b49e8647a97ae1b7'
chatroom_id = '9483032'
time_string = now.strftime("%m월 %d일 %H시 %M분")

def send_kakao_work_message(app_key, chatroom_id, file_url, batch):
    url = "https://api.kakaowork.com/v1/messages.send"
    headers = {
        "Authorization": f"Bearer {app_key}",
        "Content-Type": "application/json"
    }
    data = {
        "conversation_id": chatroom_id,
        "text": f"{batch} - 부산청과 운송장 수집 완료",
        "blocks": [
            {
                "type": "header",
                "text": f"{batch} - 부산청과 운송장 수집 완료",
                "style": "blue"
            },
            {
                "type": "text",
                "text": "아래 링크에서 파일을 다운로드하세요!",
                "markdown": True
            },
            {
                "type": "button",
                "text": "파일 다운로드",
                "style": "default",
                "action_type": "open_system_browser",
                "value": file_url
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": f"*송장 개수:* {unique_count}건",
                "markdown": True
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": "*송장넘기기*\n아이디: `gram`\n비번: `3535`\n[👉 송장 관리 페이지 바로가기](https://gramwon.me/orders/transfer)",
                "markdown": True
            },
            {
                "type": "divider"
            },
        ]
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()

result = send_kakao_work_message(app_key, chatroom_id, shared_link_metadata.url, batch)
print(result)


import time

time.sleep(1)


import time

time.sleep(1)

print("부산청과_최종파일만들기 시작")
# ---시작

import pandas as pd
import mysql.connector
from datetime import datetime
import dropbox
import requests

# 데이터베이스 및 데이터 처리 시작
connection = mysql.connector.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci'
)

cursor = connection.cursor()
query = "SELECT * FROM 송장출력_부산청과_최종변환"
cursor.execute(query)
result = cursor.fetchall()
columns = cursor.column_names
df = pd.DataFrame(result, columns=columns)
unique_count = df.drop_duplicates(subset=['주소', '수취인명', '전화번호1']).shape[0]
connection.close()

# 파일 저장 및 Dropbox 업로드
now = datetime.now()
file_path = f'부산청과/부산청과외부출고_{now.strftime("%y%m%d_%H시%M분")}.xlsx'
df.to_excel(file_path, index=False, header=False)

refresh_token = '1CLvznLL7BwAAAAAAAAAAagAlVx3w9P6NGyYjsITAxrSG9vlAEc31ohZZwYhUAB_'
app_key = 'vlxh3ec9nq5fi5t'
app_secret = 'h5rp5n0w9cp4ifk'
token_url = "https://api.dropbox.com/oauth2/token"
params = {
    'refresh_token': refresh_token,
    'grant_type': 'refresh_token',
    'client_id': app_key,
    'client_secret': app_secret
}
response = requests.post(token_url, data=params)
access_token = response.json().get('access_token')

dbx = dropbox.Dropbox(access_token)
with open(file_path, "rb") as f:
    dbx.files_upload(f.read(), f'/부산청과/{file_path}', mode=dropbox.files.WriteMode("overwrite"))
shared_link_metadata = dbx.sharing_create_shared_link_with_settings(f'/부산청과/{file_path}')

# 시간대별 차수 설정
hour = now.hour
minute = now.minute

if 1 <= hour <= 7:
    batch = "1차"
elif 8 <= hour <= 10:
    batch = "2차"
elif 11 <= hour <= 11:
    batch = "3차"
elif 12 <= hour <= 13:
    batch = "4차"
elif 14 <= hour <= 15:
    batch = "5차"
elif 16 <= hour <= 18:
    batch = "막차"
elif 19 <= hour <= 23:
    batch = "추가"
else:
    batch = ""  # 24시(0시)는 배치 처리하지 않음


import time

time.sleep(10)

# 카카오워크 메시지 전송
app_key = 'b36ed46e.0b55706350e94ef8b49e8647a97ae1b7'
chatroom_id = '9483032'
time_string = now.strftime("%m월 %d일 %H시 %M분")

def send_kakao_work_message(app_key, chatroom_id, file_url, batch):
    url = "https://api.kakaowork.com/v1/messages.send"
    headers = {
        "Authorization": f"Bearer {app_key}",
        "Content-Type": "application/json"
    }
    data = {
        "conversation_id": chatroom_id,
        "text": f"{batch} - 부산청과 외부운송장 수집 완료",
        "blocks": [
            {
                "type": "header",
                "text": f"{batch} - 부산청과 외부운송장 수집 완료",
                "style": "blue"
            },
            {
                "type": "text",
                "text": "아래 링크에서 파일을 다운로드하세요!",
                "markdown": True
            },
            {
                "type": "button",
                "text": "파일 다운로드",
                "style": "default",
                "action_type": "open_system_browser",
                "value": file_url
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": f"*송장 개수:* {unique_count}건",
                "markdown": True
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": "*송장넘기기*\n아이디: `gram`\n비번: `3535`\n[👉 송장 관리 페이지 바로가기](https://gramwon.me/orders/transfer)",
                "markdown": True
            },
            {
                "type": "divider"
            },
        ]
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()

result = send_kakao_work_message(app_key, chatroom_id, shared_link_metadata.url, batch)
print(result)


import time

time.sleep(1)


import pymysql

# 데이터베이스 연결 설정
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # 송장출력_부산청과자료 테이블의 데이터를 완전히 삭제
        truncate_sql = "TRUNCATE TABLE 송장출력_부산청과자료"
        cursor.execute(truncate_sql)

        # 송장구분자가 'YC_'로 시작하는 데이터 조회
        select_sql = """
        SELECT 품목코드, 송장명, 수량 
        FROM 송장출력_사방넷원본변환 
        WHERE 송장구분자 LIKE 'YC_%'
        """
        cursor.execute(select_sql)
        results = cursor.fetchall()

        # 결과 데이터를 송장출력_부산청과자료 테이블로 삽입
        insert_sql = """
        INSERT INTO 송장출력_부산청과자료 (품목코드, 송장명, 수량)
        VALUES (%s, %s, %s)
        """
        for row in results:
            cursor.execute(insert_sql, (row['품목코드'], row['송장명'], row['수량']))
        
        conn.commit()

finally:
    conn.close()

# ---. 5초딜레이
# ---시작
import time

time.sleep(1)

import time

time.sleep(1)

import pymysql

# 데이터베이스 연결 설정
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # 송장출력_부산청과자료_단품 테이블의 데이터를 완전히 삭제
        truncate_sql = "TRUNCATE TABLE 송장출력_부산청과자료_단품"
        cursor.execute(truncate_sql)

        # 주소가 중복되지 않는 데이터 조회
        select_sql = """
        SELECT 품목코드, 송장명, 수량
        FROM 송장출력_부산청과변환
        WHERE 주소 IS NOT NULL
        AND 주소 IN (
            SELECT 주소
            FROM 송장출력_부산청과변환
            WHERE 주소 IS NOT NULL
            GROUP BY 주소
            HAVING COUNT(*) = 1
        )
        """
        cursor.execute(select_sql)
        results = cursor.fetchall()

        # 결과 데이터를 송장출력_부산청과자료_단품 테이블로 삽입
        insert_sql = """
        INSERT INTO 송장출력_부산청과자료_단품 (품목코드, 송장명, 수량)
        VALUES (%s, %s, %s)
        """
        for row in results:
            cursor.execute(insert_sql, (row['품목코드'], row['송장명'], row['수량']))
        
        conn.commit()

    with conn.cursor() as cursor:
        # 송장출력_부산청과자료_합포 테이블의 데이터를 완전히 삭제
        truncate_sql = "TRUNCATE TABLE 송장출력_부산청과자료_합포"
        cursor.execute(truncate_sql)

        # 주소가 중복되는 데이터 조회
        select_sql = """
        SELECT 품목코드, 송장명, 수량
        FROM 송장출력_부산청과변환
        WHERE 주소 IS NOT NULL
        AND 주소 IN (
            SELECT 주소
            FROM 송장출력_부산청과변환
            WHERE 주소 IS NOT NULL
            GROUP BY 주소
            HAVING COUNT(*) > 1
        )
        """
        cursor.execute(select_sql)
        results = cursor.fetchall()

        # 결과 데이터를 송장출력_부산청과자료_합포 테이블로 삽입
        insert_sql = """
        INSERT INTO 송장출력_부산청과자료_합포 (품목코드, 송장명, 수량)
        VALUES (%s, %s, %s)
        """
        for row in results:
            cursor.execute(insert_sql, (row['품목코드'], row['송장명'], row['수량']))
        
        conn.commit()

finally:
    conn.close()

import time

time.sleep(1)

import pymysql

# 데이터베이스 연결 설정
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # 각 품목코드별로 수량 합계 계산
        select_sum_sql = """
        SELECT 품목코드, SUM(수량) AS 총수량
        FROM 송장출력_부산청과자료
        GROUP BY 품목코드
        """
        cursor.execute(select_sum_sql)
        results = cursor.fetchall()

        # 각 품목코드별 총수량을 업데이트
        update_sql = """
        UPDATE 송장출력_부산청과자료
        SET 총수량 = %s
        WHERE 품목코드 = %s
        """
        for row in results:
            cursor.execute(update_sql, (row['총수량'], row['품목코드']))

        conn.commit()

finally:
    conn.close()


# ---. 5초딜레이
# ---시작
import time

time.sleep(1)


import pymysql

# 데이터베이스 연결 설정
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # 각 품목코드별로 수량 합계 계산
        select_sum_sql = """
        SELECT 품목코드, SUM(수량) AS 총수량
        FROM 송장출력_부산청과자료_단품
        GROUP BY 품목코드
        """
        cursor.execute(select_sum_sql)
        results = cursor.fetchall()

        # 각 품목코드별 총수량을 업데이트
        update_sql = """
        UPDATE 송장출력_부산청과자료_단품
        SET 총수량 = %s
        WHERE 품목코드 = %s
        """
        for row in results:
            cursor.execute(update_sql, (row['총수량'], row['품목코드']))

        conn.commit()

finally:
    conn.close()


# ---. 5초딜레이
# ---시작
import time

time.sleep(1)


import pymysql

# 데이터베이스 연결 설정
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # 각 품목코드별로 수량 합계 계산
        select_sum_sql = """
        SELECT 품목코드, SUM(수량) AS 총수량
        FROM 송장출력_부산청과자료_합포
        GROUP BY 품목코드
        """
        cursor.execute(select_sum_sql)
        results = cursor.fetchall()

        # 각 품목코드별 총수량을 업데이트
        update_sql = """
        UPDATE 송장출력_부산청과자료_합포
        SET 총수량 = %s
        WHERE 품목코드 = %s
        """
        for row in results:
            cursor.execute(update_sql, (row['총수량'], row['품목코드']))

        conn.commit()

finally:
    conn.close()


# ---. 5초딜레이
# ---시작
import time

time.sleep(1)


import pymysql

# 데이터베이스 연결 설정
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # 송장출력_부산청과자료_최종 테이블 초기화
        truncate_sql = "TRUNCATE TABLE 송장출력_부산청과자료_최종"
        cursor.execute(truncate_sql)

        # 1. 송장출력_부산청과자료에서 데이터 삽입
        select_sql_1 = """
        SELECT 품목코드, REPLACE(MAX(송장명), 'YC_', '') AS 송장명, SUM(수량) AS 총수량
        FROM 송장출력_부산청과자료
        GROUP BY 품목코드
        ORDER BY 품목코드 ASC
        """
        cursor.execute(select_sql_1)
        results_1 = cursor.fetchall()

        # 2. 송장출력_부산청과자료_단품에서 데이터 삽입
        select_sql_2 = """
        SELECT 품목코드, REPLACE(MAX(송장명), 'YC_', '') AS 송장명, SUM(수량) AS 총수량
        FROM 송장출력_부산청과자료_단품
        GROUP BY 품목코드
        ORDER BY 품목코드 ASC
        """
        cursor.execute(select_sql_2)
        results_2 = cursor.fetchall()

        # 3. 송장출력_부산청과자료_합포에서 데이터 삽입
        select_sql_3 = """
        SELECT 품목코드, REPLACE(MAX(송장명), 'YC_', '') AS 송장명, SUM(수량) AS 총수량
        FROM 송장출력_부산청과자료_합포
        GROUP BY 품목코드
        ORDER BY 품목코드 ASC
        """
        cursor.execute(select_sql_3)
        results_3 = cursor.fetchall()

        # 4. 최종 테이블에 삽입 (병합)
        for i in range(max(len(results_1), len(results_2), len(results_3))):
            row_1 = results_1[i] if i < len(results_1) else {'품목코드': None, '송장명': None, '총수량': None}
            row_2 = results_2[i] if i < len(results_2) else {'품목코드': None, '송장명': None, '총수량': None}
            row_3 = results_3[i] if i < len(results_3) else {'품목코드': None, '송장명': None, '총수량': None}

            insert_sql = """
            INSERT INTO 송장출력_부산청과자료_최종 
            (품목코드, 송장명, 총수량, 단품품목코드, 단품송장명, 단품총수량, 합포품목코드, 합포송장명, 합포총수량)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
            """
            cursor.execute(insert_sql, (
                row_1['품목코드'], row_1['송장명'], row_1['총수량'],
                row_2['품목코드'], row_2['송장명'], row_2['총수량'],
                row_3['품목코드'], row_3['송장명'], row_3['총수량']
            ))
        
        conn.commit()

finally:
    conn.close()





import time

time.sleep(10)



import pandas as pd
import mysql.connector
from datetime import datetime
import dropbox
import requests
import xlsxwriter  # xlsxwriter 패키지 추가

connection = mysql.connector.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci'
)

cursor = connection.cursor()
query = "SELECT * FROM 송장출력_부산청과자료_최종"
cursor.execute(query)
result = cursor.fetchall()
columns = cursor.column_names
df = pd.DataFrame(result, columns=columns)
unique_count = df.drop_duplicates(subset=['품목코드', '송장명', '총수량']).shape[0]
connection.close()

# 파일 저장 및 Dropbox 업로드
now = datetime.now()
file_path = f'부산청과/부산청과A4자료_{now.strftime("%y%m%d_%H시%M분")}.xlsx'
with pd.ExcelWriter(file_path, engine='xlsxwriter') as writer:
    df.to_excel(writer, index=False, header=True)  # 엑셀 파일로 저장 (header=True로 설정)
    workbook  = writer.book
    worksheet = writer.sheets['Sheet1']
    worksheet.set_column('A:A', 8)   # 열 너비 설정
    worksheet.set_column('B:B', 30)
    worksheet.set_column('C:C', 8)
    worksheet.set_column('D:D', 8)
    worksheet.set_column('E:E', 30)
    worksheet.set_column('F:F', 8)
    worksheet.set_column('G:G', 8)
    worksheet.set_column('H:H', 30)
    worksheet.set_column('I:I', 8)

refresh_token = '1CLvznLL7BwAAAAAAAAAAagAlVx3w9P6NGyYjsITAxrSG9vlAEc31ohZZwYhUAB_'
app_key = 'vlxh3ec9nq5fi5t'
app_secret = 'h5rp5n0w9cp4ifk'
token_url = "https://api.dropbox.com/oauth2/token"
params = {
    'refresh_token': refresh_token,
    'grant_type': 'refresh_token',
    'client_id': app_key,
    'client_secret': app_secret
}
response = requests.post(token_url, data=params)
access_token = response.json().get('access_token')

dbx = dropbox.Dropbox(access_token)
with open(file_path, "rb") as f:
    dbx.files_upload(f.read(), f'/부산청과/{file_path}', mode=dropbox.files.WriteMode("overwrite"))
shared_link_metadata = dbx.sharing_create_shared_link_with_settings(f'/부산청과/{file_path}')

# 시간대별 차수 설정
hour = now.hour
minute = now.minute

if 1 <= hour <= 7:
    batch = "1차"
elif 8 <= hour <= 10:
    batch = "2차"
elif 11 <= hour <= 11:
    batch = "3차"
elif 12 <= hour <= 13:
    batch = "4차"
elif 14 <= hour <= 15:
    batch = "5차"
elif 16 <= hour <= 18:
    batch = "막차"
elif 19 <= hour <= 23:
    batch = "추가"
else:
    batch = ""  # 24시(0시)는 배치 처리하지 않음


# 카카오워크 메시지 전송
app_key = 'b36ed46e.0b55706350e94ef8b49e8647a97ae1b7'
chatroom_id = '9483032'
time_string = now.strftime("%m월 %d일 %H시 %M분")

def send_kakao_work_message(app_key, chatroom_id, file_url, batch):
    url = "https://api.kakaowork.com/v1/messages.send"
    headers = {
        "Authorization": f"Bearer {app_key}",
        "Content-Type": "application/json"
    }
    data = {
        "conversation_id": chatroom_id,
        "text": f"{batch} - 소분 프린트 자료",
        "blocks": [
            {
                "type": "header",
                "text": f"{batch} - 소분 프린트 자료",
                "style": "blue"
            },
            {
                "type": "text",
                "text": "아래 링크에서 파일을 다운로드하세요!",
                "markdown": True
            },
            {
                "type": "button",
                "text": "파일 다운로드",
                "style": "default",
                "action_type": "open_system_browser",
                "value": file_url
            }
        ]
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()

result = send_kakao_work_message(app_key, chatroom_id, shared_link_metadata.url, batch)
print(result)

import time

time.sleep(1)

# ---. 부산청과 전체 끝
print("부산청과 전체 끝")


print("감천냉동 시작")
# ---. 감천냉동 시작


# ---. 감천냉동낱개 분류
print("감천냉동낱개 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_감천냉동변환 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_감천냉동변환"
        cursor.execute(sql_truncate)

        # 감천냉동 위치의 행만 복사하여 추가
        sql_copy_rows = """
        INSERT INTO 송장출력_감천냉동변환 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_사방넷원본변환
        WHERE 송장구분최종 = '감천낱개'
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("감천냉동낱개 분류 끝")
# --끝

import time

time.sleep(1)




# ---. 택배수량 계산 및 송장구분자 업데이트
print("택배수량 계산 및 송장구분자 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량을 이용하여 1을 나눈 결과를 소수점 세 자리에서 내림하여 송장구분자 컬럼에 업데이트
        sql_update = """
        UPDATE 송장출력_감천냉동변환
        SET 송장구분자 = FLOOR((1 / IFNULL(NULLIF(택배수량, 0), 10)) * 1000) / 1000
        """
        cursor.execute(sql_update)

        # 변경사항 저장
        connection.commit()

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    # 연결 종료
    connection.close()

print("택배수량 계산 및 송장구분자 업데이트 끝")
# --끝


import time

time.sleep(1)



# ---. 송장구분자와 수량 곱 업데이트
print("송장구분자와 수량 곱 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장구분자와 수량을 곱하여 결과 업데이트
        sql_multiply_update = """
        UPDATE 송장출력_감천냉동변환
        SET 송장구분자 = 송장구분자 * 수량
        """
        cursor.execute(sql_multiply_update)
        connection.commit()

        print(f"송장구분자 업데이트 완료, {cursor.rowcount} 행이 변경되었습니다.")

finally:
    # 연결 종료
    connection.close()

print("송장구분자와 수량 곱 업데이트 끝")
# --끝


import time

time.sleep(1)



# ---. 주소 + 수취인명 기반 송장구분자 합산 및 택배수량1 업데이트
print("주소 + 수취인명 기반 송장구분자 합산 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소 + 수취인명을 기준으로 송장구분자를 합산
        sql_group_sum = """
        SELECT 주소, 수취인명, SUM(송장구분자) AS 구분자합
        FROM 송장출력_감천냉동변환
        GROUP BY 주소, 수취인명
        """
        cursor.execute(sql_group_sum)
        results = cursor.fetchall()

        # 각 그룹의 구분자합을 택배수량1에 업데이트
        for result in results:
            sql_update = """
            UPDATE 송장출력_감천냉동변환
            SET 택배수량1 = %s
            WHERE 주소 = %s AND 수취인명 = %s
            """
            cursor.execute(sql_update, (result['구분자합'], result['주소'], result['수취인명']))

        # 변경사항 저장
        connection.commit()

        print(f"Updated {cursor.rowcount} rows based on address and recipient name.")  # 업데이트된 행 수 출력

finally:
    # 연결 종료
    connection.close()

print("주소 + 수취인명 기반 송장구분자 합산 및 택배수량1 업데이트 끝")
# --끝

import time

time.sleep(1)




print("택배수량1 올림 처리 시작")
import pymysql
import math

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량1의 현재 값을 가져옵니다.
        sql_fetch = "SELECT id, 택배수량1 FROM 송장출력_감천냉동변환"
        cursor.execute(sql_fetch)
        results = cursor.fetchall()

        updated_rows = 0  # 업데이트된 행 수를 추적
        # 각 행의 택배수량1 값을 올림 처리하고 업데이트 합니다.
        for result in results:
            current_quantity = result['택배수량1']
            if current_quantity is None:  # 택배수량1이 None일 때 처리
                current_quantity = 1  # None 값을 30으로 설정
            
            rounded_quantity = math.ceil(float(current_quantity))  # 택배수량1 값을 올림
            sql_update = "UPDATE 송장출력_감천냉동변환 SET 택배수량1 = %s WHERE id = %s"
            cursor.execute(sql_update, (rounded_quantity, result['id']))
            updated_rows += cursor.rowcount

        # 변경사항 저장
        connection.commit()

        print(f"업데이트된 행 수: {updated_rows}")

finally:
    # 연결 종료
    connection.close()

print("택배수량1 올림 처리 완료")
# --끝


import time

time.sleep(1)




# ---. 택배수량1에 따른 송장구분 업데이트
print("택배수량1에 따른 송장구분 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배수량1이 1보다 큰 경우 '추가'로 업데이트
        update_more_than_one = """
        UPDATE 송장출력_감천냉동변환
        SET 송장구분 = '추가'
        WHERE 택배수량1 > 1
        """
        cursor.execute(update_more_than_one)
        
        # 택배수량1이 1 이하인 경우 '1장'으로 업데이트
        update_one_or_less = """
        UPDATE 송장출력_감천냉동변환
        SET 송장구분 = '1장'
        WHERE 택배수량1 <= 1
        """
        cursor.execute(update_one_or_less)
        
        connection.commit()  # 변경사항 저장
        print(f"Updated rows for more than one: {cursor.rowcount}")  # '추가'로 업데이트된 행 수 출력
        print(f"Updated rows for one or less: {cursor.rowcount}")  # '1장'으로 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("택배수량1에 따른 송장구분 업데이트 작업 끝")
# ---끝

import time

time.sleep(1)



# ---. 주소 및 수취인명 유일성에 따른 송장구분 업데이트
print("주소 및 수취인명 유일성에 따른 송장구분 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 주소 + 수취인명 조합이 유일한 경우 '단일'로 업데이트
        update_unique_address_and_name = """
        UPDATE 송장출력_감천냉동변환 t1
        JOIN (
            SELECT 주소, 수취인명
            FROM 송장출력_감천냉동변환
            WHERE 송장구분 = '1장'
            GROUP BY 주소, 수취인명
            HAVING COUNT(*) = 1
        ) AS unique_address ON t1.주소 = unique_address.주소 AND t1.수취인명 = unique_address.수취인명
        SET t1.송장구분 = '단일'
        WHERE t1.송장구분 = '1장'
        """
        cursor.execute(update_unique_address_and_name)

        connection.commit()  # 변경사항 저장
        print(f"Updated unique address and name rows to '단일': {cursor.rowcount}")  # '단일'로 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("주소 및 수취인명 유일성에 따른 송장구분 업데이트 작업 끝")
# ---끝



# ---. 감천냉동1장 분류
print("감천냉동1장 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_감천냉동1장 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_감천냉동1장"
        cursor.execute(sql_truncate)

        # 감천냉동 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_감천냉동1장 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_감천냉동변환
        WHERE 송장구분 = '1장'
        ORDER BY 위치변환 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("감천냉동1장 분류 끝")
# --끝

import time

time.sleep(1)


# ---. 감천냉동단일 분류
print("감천냉동단일 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_감천냉동단일 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_감천냉동단일"
        cursor.execute(sql_truncate)

        # 감천냉동 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_감천냉동단일 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_감천냉동변환
        WHERE 송장구분 = '단일'
        ORDER BY 위치변환 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("감천냉동단일 분류 끝")
# --끝

import time

time.sleep(1)

# ---. 품목코드별 수량 합산 및 품목개수
print("품목코드별 수량 합산 및 품목개수 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 품목코드별로 수량을 합산하여 출력개수에 업데이트
        sql_update_output_count = """
        UPDATE 송장출력_감천냉동단일 AS t1 
        INNER JOIN (
            SELECT 품목코드, SUM(수량) AS total_quantity
            FROM 송장출력_감천냉동단일
            GROUP BY 품목코드
        ) AS t2 ON t1.품목코드 = t2.품목코드
        SET t1.품목개수 = t2.total_quantity
        """
        cursor.execute(sql_update_output_count)

        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    connection.close()  # 데이터베이스 연결 종료

print("품목코드별 수량 합산 및 품목개수 작업 끝")
# ---끝

import time

time.sleep(1)

# ---. 감천냉동추가 분류
print("감천냉동추가 분류 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_감천냉동추가 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_감천냉동추가"
        cursor.execute(sql_truncate)

        # 감천냉동 위치의 행만 복사하여 추가, 위치변환 컬럼으로 내림차순 정렬
        sql_copy_rows = """
        INSERT INTO 송장출력_감천냉동추가 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_감천냉동변환
        WHERE 송장구분 = '추가'
        ORDER BY 주소 DESC
        """
        cursor.execute(sql_copy_rows)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("감천냉동추가 분류 끝")
# --끝


import time

time.sleep(1)




# ---. 감천냉동추가송장 테이블로 유니크 주소 행 이동
print("감천냉동추가송장 테이블로 유니크 주소 행 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_감천냉동추가송장 테이블 초기화
        sql_truncate = "TRUNCATE TABLE 송장출력_감천냉동추가송장"
        cursor.execute(sql_truncate)

        # 송장출력_감천냉동추가 테이블에서 유니크한 주소를 가진 행을 선택하여 이동
        sql_insert_unique = """
        INSERT INTO 송장출력_감천냉동추가송장 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM (
            SELECT *, ROW_NUMBER() OVER (PARTITION BY 주소 ORDER BY id ASC) AS rn
            FROM 송장출력_감천냉동추가
        ) AS subquery
        WHERE subquery.rn = 1
        """
        cursor.execute(sql_insert_unique)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()

print("감천냉동추가송장 테이블로 유니크 주소 행 이동 끝")
# --끝


import time

time.sleep(1)




# ---. 감천냉동추가송장 업데이트
print("감천냉동추가송장 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 모든 '수량'을 1로 변경하고 '송장명'을 "추가송장"으로 변경
        sql_update = """
        UPDATE 송장출력_감천냉동추가송장
        SET 수량 = 1, 송장명 = '+++', 옵션명 = '+++' , 품목코드 = '0000'
        """
        cursor.execute(sql_update)

        # 변경사항 저장
        connection.commit()
        print(f"Updated {cursor.rowcount} rows in 송장출력_감천냉동추가송장.")

finally:
    # 연결 종료
    connection.close()

print("감천냉동추가송장 업데이트 완료")
# --끝

import time

time.sleep(1)



# ---. 감천냉동 추가송장 늘리기 
print("감천냉동 추가송장 늘리기 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 먼저 모든 행을 가져옵니다.
        sql_select = "SELECT * FROM 송장출력_감천냉동추가송장 WHERE 택배수량1 > 2"
        cursor.execute(sql_select)
        rows = cursor.fetchall()

        # 각 행을 '택배수량1 - 2' 만큼 복사하여 삽입합니다.
        for row in rows:
            count = int(row['택배수량1']) - 2  # 추가할 행의 수
            sql_insert = """
            INSERT INTO 송장출력_감천냉동추가송장
            (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            """
            params = (row['msg1'], row['msg2'], row['msg3'], row['msg4'], row['msg5'], row['msg6'], row['수취인명'], row['전화번호1'], row['전화번호2'], row['우편번호'], row['주소'], row['옵션명'], row['수량'], row['배송메세지'], row['주문번호'], row['쇼핑몰'], row['수집시간'], row['송장명'], row['품목코드'], row['택배비용'], row['박스크기'], row['출력개수'], row['송장수량'], row['별표1'], row['별표2'], row['품목개수'], row['택배수량'], row['택배수량1'], row['택배수량합산'], row['송장구분자'], row['송장구분'], row['송장구분최종'], row['위치'], row['위치변환'])
            for _ in range(count):
                cursor.execute(sql_insert, params)

    # 변경사항 저장
    connection.commit()

finally:
    # 연결 종료
    connection.close()

print("감천냉동 추가송장 늘리기 끝")
# --끝

import time

time.sleep(1)


# ---. 감천냉동추가송장 순번 매기기
print("감천냉동추가송장 순번 매기기 시작")
# --시작

import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor  # 결과를 딕셔너리 형태로 받기 위함
)

try:
    with conn.cursor() as cursor:
        # 위치변환 값을 기준으로 정렬하여 모든 데이터를 가져옴
        sql = "SELECT id, 위치변환 FROM 송장출력_감천냉동추가송장 ORDER BY 위치변환, id"
        cursor.execute(sql)
        results = cursor.fetchall()

        # 현재 위치변환 값
        current_location = None
        counter = 1

        # 결과를 순회하면서 순번을 매김
        for row in results:
            if current_location != row['위치변환']:
                current_location = row['위치변환']
                counter = 1  # 위치변환 값이 바뀌면 순번을 리셋
            
            # 송장구분자 컬럼 업데이트 (중괄호 형식으로)
            formatted_number = f"[{counter}]"  # 숫자 앞뒤로 대괄호 추가
            update_sql = "UPDATE 송장출력_감천냉동추가송장 SET 송장구분자=%s WHERE id=%s"
            cursor.execute(update_sql, (formatted_number, row['id']))
            counter += 1

        conn.commit()  # 변경사항을 데이터베이스에 반영

finally:
    conn.close()  # 데이터베이스 연결 종료

# ---. 감천냉동추가송장 순번 매기기
print("감천냉동추가송장 순번 매기기 끝")
# --끝

import time

time.sleep(1)


# ---. 감천냉동추가송장 주소업데이트
print("감천냉동추가송장 주소업데이트 시작")
# --시작


import pymysql

# 데이터베이스 연결
conn = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with conn.cursor() as cursor:
        # '주소' 컬럼 업데이트 쿼리 실행
        update_sql = "UPDATE 송장출력_감천냉동추가송장 SET 주소 = CONCAT(주소, 송장구분자)"
        cursor.execute(update_sql)
        conn.commit()  # 변경사항을 데이터베이스에 반영

        print(f"Updated {cursor.rowcount} rows.")  # 업데이트된 행 수 출력

finally:
    conn.close()  # 데이터베이스 연결 종료


# ---. 감천냉동추가송장 주소업데이트
print("감천냉동추가송장 주소업데이트 끝")
# --끝

import time

time.sleep(1)


import pymysql
import pymysql.cursors

# MySQL 연결 설정
connection = pymysql.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci',
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 테이블을 비웁니다.
        cursor.execute("TRUNCATE TABLE 송장출력_감천냉동추가합치기")
        
        # 데이터 병합 및 삽입 쿼리
        merge_and_insert_query = """
        INSERT INTO 송장출력_감천냉동추가합치기(msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM (
            SELECT * FROM 송장출력_감천냉동추가
            UNION ALL
            SELECT * FROM 송장출력_감천냉동추가송장
        ) AS combined
        ORDER BY 위치 DESC
        """
        cursor.execute(merge_and_insert_query)
        
        # 변경 사항을 데이터베이스에 확정합니다.
        connection.commit()

finally:
    # 연결을 닫습니다.
    connection.close()

import time

time.sleep(1)



# ---. 감천냉동 테이블 마지막정리
print("감천냉동 테이블 마지막정리 시작")
# --시작


import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_감천냉동 테이블 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_감천냉동")
        
        # 송장출력_감천냉동단일 테이블에서 데이터 가져와서 정렬 후 삽입
        sql_insert_from_single = """
        INSERT INTO 송장출력_감천냉동 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_감천냉동단일
        ORDER BY 위치변환 ASC
        """
        cursor.execute(sql_insert_from_single)

        # 송장출력_공통박스 테이블에서 데이터 가져와서 정렬 후 삽입
        sql_insert_from_box = """
            INSERT INTO 송장출력_감천냉동 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
            SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
            FROM 송장출력_공통박스
            WHERE 송장구분최종 = '감천박스'
            ORDER BY 위치변환 ASC
        """
        cursor.execute(sql_insert_from_box)




        # 송장출력_감천냉동1장 테이블의 데이터도 송장출력_감천냉동에 추가
        sql_insert_from_one = """
        INSERT INTO 송장출력_감천냉동 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_감천냉동1장
        """
        cursor.execute(sql_insert_from_one)

        # 두 테이블의 데이터를 합치고, ID 컬럼을 제외한 후 정렬하여 송장출력_감천냉동에 삽입
        sql_merge_and_sort = """
        INSERT INTO 송장출력_감천냉동 (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_감천냉동추가합치기
        ORDER BY 주소 ASC
        """
        cursor.execute(sql_merge_and_sort)

        # 변경사항 저장
        connection.commit()

finally:
    # 연결 종료
    connection.close()


# ---. 감천냉동 테이블 마지막정리
print("감천냉동 테이블 마지막정리 끝")
# --끝

import time

time.sleep(1)


# ---. 별표 행 이동 및 삭제 작업
print("별표 행 이동 및 삭제 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_감천냉동별표 테이블을 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_감천냉동별표")
        print("송장출력_감천냉동별표 테이블이 비워졌습니다.")

        # 별표1 또는 별표2가 비어있지 않은 행을 송장출력_감천냉동별표 테이블로 이동
        sql_move_to_star_table = """
        INSERT INTO 송장출력_감천냉동별표
        SELECT * FROM 송장출력_감천냉동
        WHERE 별표1 <> '' OR 별표2 <> ''
        """
        cursor.execute(sql_move_to_star_table)
        print(f"Moved {cursor.rowcount} rows to '송장출력_감천냉동별표'.")

        # 이동된 행 삭제
        sql_delete_moved_rows = """
        DELETE FROM 송장출력_감천냉동
        WHERE 별표1 <> '' OR 별표2 <> ''
        """
        cursor.execute(sql_delete_moved_rows)
        print(f"Deleted {cursor.rowcount} rows from '송장출력_감천냉동'.")

        connection.commit()  # 변경사항 저장


finally:
    connection.close()  # 데이터베이스 연결 종료

print("별표 행 이동 및 삭제 작업 완료")
# ---끝


import time

time.sleep(1)


# ---. 별표1 기준으로 정렬하여 행 이동
print("별표1 기준으로 정렬하여 행 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_감천냉동별표에서 별표1로 정렬하여 송장출력_감천냉동에 데이터 삽입
        sql_transfer_data = """
        INSERT INTO 송장출력_감천냉동
        (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 옵션명, 수량, 배송메세지, 주문번호, 쇼핑몰, 수집시간, 송장명, 품목코드, 택배비용, 박스크기, 출력개수, 송장수량, 별표1, 별표2, 품목개수, 택배수량, 택배수량1, 택배수량합산, 송장구분자, 송장구분, 송장구분최종, 위치, 위치변환
        FROM 송장출력_감천냉동별표
        ORDER BY 주소 ASC, 옵션명 ASC
        """
        cursor.execute(sql_transfer_data)

        print(f"Rows moved: {cursor.rowcount}")  # 이동된 행의 수 출력

        connection.commit()  # 변경사항 저장

finally:
    connection.close()  # 데이터베이스 연결 종료

print("별표1 기준으로 정렬하여 행 이동 작업 완료")
# ---끝


import time

time.sleep(1)



# ---. 데이터 이동 작업
print("송장출력_감천냉동에서 송장출력_감천냉동_최종으로 데이터 이동 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 송장출력_감천냉동_최종 테이블을 비우기
        cursor.execute("TRUNCATE TABLE 송장출력_감천냉동_최종")

        # 송장출력_감천냉동에서 송장출력_감천냉동_최종으로 데이터 이동
        sql_transfer_data = """
        INSERT INTO 송장출력_감천냉동_최종
            (msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
             송장명, 수량, 배송메세지, 주문번호, 쇼핑몰, 품목코드, 택배비용, 박스크기, 출력개수, 
             별표1, 별표2, 품목개수)
        SELECT msg1, msg2, msg3, msg4, msg5, msg6, 수취인명, 전화번호1, 전화번호2, 우편번호, 주소, 
               송장명, 수량, 배송메세지, 주문번호, 쇼핑몰, 품목코드, 택배비용, 박스크기, 출력개수, 
               별표1, 별표2, 품목개수
        FROM 송장출력_감천냉동
        """
        cursor.execute(sql_transfer_data)
        connection.commit()  # 변경사항 저장
        print(f"Moved {cursor.rowcount} rows from '송장출력_감천냉동' to '송장출력_감천냉동_최종'.")

finally:
    connection.close()  # 데이터베이스 연결 종료

print("송장출력_감천냉동에서 송장출력_감천냉동_최종으로 데이터 이동 작업 완료")
# ---끝

import time

time.sleep(1)

# ---. 송장출력_감천냉동_최종 테이블 업데이트
print("송장출력_감천냉동_최종 테이블 업데이트 시작")
import pymysql

# MySQL 연결 정보
host = 'gramwonlogis.mycafe24.com'
port = 3306
user = 'gramwonlogis'
password = 'jung5516!'
database = 'gramwonlogis'
charset = 'utf8mb4'

# MySQL 연결 설정
connection = pymysql.connect(
    host=host,
    port=port,
    user=user,
    password=password,
    database=database,
    cursorclass=pymysql.cursors.DictCursor
)

try:
    with connection.cursor() as cursor:
        # 택배비용, 박스크기, 출력개수 업데이트
        sql_update = """
        UPDATE 송장출력_감천냉동_최종
        SET 택배비용 = 2300, 박스크기 = '극소', 출력개수 = 1
        """
        cursor.execute(sql_update)
        connection.commit()  # 변경사항 저장
        print(f"Updated {cursor.rowcount} rows in '송장출력_감천냉동_최종'.")

finally:
    connection.close()  # 데이터베이스 연결 종료

print("송장출력_감천냉동_최종 테이블 업데이트 완료")
# ---끝

import time

time.sleep(1)

print("감천냉동_최종파일만들기 시작")
# ---시작

import pandas as pd
import mysql.connector
from datetime import datetime
import dropbox
import requests

# 데이터베이스 및 데이터 처리 시작
connection = mysql.connector.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci'
)

cursor = connection.cursor()
query = "SELECT * FROM 송장출력_감천냉동_최종"
cursor.execute(query)
result = cursor.fetchall()
columns = cursor.column_names
df = pd.DataFrame(result, columns=columns)
unique_count = df.drop_duplicates(subset=['주소', '수취인명', '전화번호1']).shape[0]
connection.close()

# 파일 저장 및 Dropbox 업로드
now = datetime.now()
file_path = f'감천냉동/감천냉동_{now.strftime("%y%m%d_%H시%M분")}.xlsx'
df.to_excel(file_path, index=False, header=False)

refresh_token = '1CLvznLL7BwAAAAAAAAAAagAlVx3w9P6NGyYjsITAxrSG9vlAEc31ohZZwYhUAB_'
app_key = 'vlxh3ec9nq5fi5t'
app_secret = 'h5rp5n0w9cp4ifk'
token_url = "https://api.dropbox.com/oauth2/token"
params = {
    'refresh_token': refresh_token,
    'grant_type': 'refresh_token',
    'client_id': app_key,
    'client_secret': app_secret
}
response = requests.post(token_url, data=params)
access_token = response.json().get('access_token')

dbx = dropbox.Dropbox(access_token)
with open(file_path, "rb") as f:
    dbx.files_upload(f.read(), f'/감천냉동/{file_path}', mode=dropbox.files.WriteMode("overwrite"))
shared_link_metadata = dbx.sharing_create_shared_link_with_settings(f'/감천냉동/{file_path}')

# 시간대별 차수 설정
hour = now.hour
minute = now.minute

if 1 <= hour <= 7:
    batch = "1차"
elif 8 <= hour <= 10:
    batch = "2차"
elif 11 <= hour <= 11:
    batch = "3차"
elif 12 <= hour <= 13:
    batch = "4차"
elif 14 <= hour <= 15:
    batch = "5차"
elif 16 <= hour <= 18:
    batch = "막차"
elif 19 <= hour <= 23:
    batch = "추가"
else:
    batch = ""  # 24시(0시)는 배치 처리하지 않음


import time

time.sleep(1)

# 카카오워크 메시지 전송
app_key = 'b36ed46e.0b55706350e94ef8b49e8647a97ae1b7'
chatroom_id = '844456585637761'
time_string = now.strftime("%m월 %d일 %H시 %M분")

def send_kakao_work_message(app_key, chatroom_id, file_url, batch):
    url = "https://api.kakaowork.com/v1/messages.send"
    headers = {
        "Authorization": f"Bearer {app_key}",
        "Content-Type": "application/json"
    }
    data = {
        "conversation_id": chatroom_id,
        "text": f"{batch} - 감천냉동 운송장 수집 완료",
        "blocks": [
            {
                "type": "header",
                "text": f"{batch} - 감천냉동 운송장 수집 완료",
                "style": "blue"
            },
            {
                "type": "text",
                "text": "아래 링크에서 파일을 다운로드하세요!",
                "markdown": True
            },
            {
                "type": "button",
                "text": "파일 다운로드",
                "style": "default",
                "action_type": "open_system_browser",
                "value": file_url
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": f"*송장 개수:* {unique_count}건",
                "markdown": True
            },
            {
                "type": "divider"
            },
            {
                "type": "text",
                "text": "*송장넘기기*\n아이디: `gram`\n비번: `3535`\n[👉 송장 관리 페이지 바로가기](https://gramwon.me/orders/transfer)",
                "markdown": True
            },
            {
                "type": "divider"
            },
        ]
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()

result = send_kakao_work_message(app_key, chatroom_id, shared_link_metadata.url, batch)
print(result)

import time

time.sleep(1)



import mysql.connector
import pandas as pd
from datetime import datetime
import dropbox
import requests
import time
import os

# 데이터베이스 연결 설정
connection = mysql.connector.connect(
    host='gramwonlogis.mycafe24.com',
    port=3306,
    user='gramwonlogis',
    password='jung5516!',
    database='gramwonlogis',
    charset='utf8mb4',  # ✅ 이거 필수!
    collation='utf8mb4_unicode_ci'
)

cursor = connection.cursor()

try:
    print("송장출력_최종 테이블을 초기화하고 데이터를 추가합니다.")

    # 송장출력_최종 테이블 초기화
    cursor.execute("TRUNCATE TABLE 송장출력_최종")
    connection.commit()
    print("송장출력_최종 테이블 초기화 완료.")

    # 각 테이블의 데이터를 송장출력_최종 테이블에 insert
    tables = [
        '송장출력_경기냉동_최종',
        '송장출력_경기공산_최종',
        '송장출력_부산청과_최종',
        '송장출력_서울공산_최종',
        '송장출력_서울냉동_최종',
        '송장출력_감천냉동_최종'
    ]

    for table in tables:
        insert_query = f"""
        INSERT INTO 송장출력_최종
        SELECT * FROM {table}
        """
        cursor.execute(insert_query)
        connection.commit()
        print(f"{table}의 데이터가 송장출력_최종 테이블에 추가되었습니다.")

    print("모든 데이터가 성공적으로 추가되었습니다.")

    # 통합된 데이터를 DataFrame으로 가져오기
    query = "SELECT * FROM 송장출력_최종"
    df = pd.read_sql(query, connection)
    unique_count = df.drop_duplicates(subset=['주소', '수취인명', '전화번호1']).shape[0]

    # 파일 저장 및 Dropbox 업로드
    now = datetime.now()
    save_directory = os.path.join(os.getcwd(), 'ㅎ.송장넘기기', '통합송장')
    os.makedirs(save_directory, exist_ok=True)
    file_name = f'통합송장_{now.strftime("%y%m%d_%H시%M분")}.xlsx'
    file_path = os.path.join(save_directory, file_name)
    df.to_excel(file_path, index=False)

    refresh_token = '1CLvznLL7BwAAAAAAAAAAagAlVx3w9P6NGyYjsITAxrSG9vlAEc31ohZZwYhUAB_'
    app_key = 'vlxh3ec9nq5fi5t'
    app_secret = 'h5rp5n0w9cp4ifk'
    token_url = "https://api.dropbox.com/oauth2/token"
    params = {
        'refresh_token': refresh_token,
        'grant_type': 'refresh_token',
        'client_id': app_key,
        'client_secret': app_secret
    }
    response = requests.post(token_url, data=params)
    access_token = response.json().get('access_token')

    dbx = dropbox.Dropbox(access_token)
    dropbox_path = f'/통합송장/{file_name}'
    with open(file_path, "rb") as f:
        try:
            dbx.files_upload(f.read(), dropbox_path, mode=dropbox.files.WriteMode("overwrite"))
            print(f"파일이 Dropbox에 성공적으로 업로드되었습니다: {dropbox_path}")
        except dropbox.exceptions.ApiError as e:
            print(f"Dropbox 업로드 중 오류 발생: {e}")

    try:
        shared_link_metadata = dbx.sharing_create_shared_link_with_settings(dropbox_path)
        print(f"공유 링크가 생성되었습니다: {shared_link_metadata.url}")
    except dropbox.exceptions.ApiError as e:
        print(f"공유 링크 생성 중 오류 발생: {e}")
        shared_link_metadata = type('obj', (object,), {'url': "https://www.dropbox.com"})

    # 시간대별 차수 설정
    hour = now.hour
    if 1 <= hour <= 7:
        batch = "1차"
    elif 8 <= hour <= 10:
        batch = "2차"
    elif 11 <= hour <= 11:
        batch = "3차"
    elif 12 <= hour <= 13:
        batch = "4차"
    elif 14 <= hour <= 15:
        batch = "5차"
    elif 16 <= hour <= 18:
        batch = "막차"
    elif 19 <= hour <= 23:
        batch = "추가"
    else:
        batch = ""

    time.sleep(1)

    # 카카오워크 메시지 전송
    app_key = 'b36ed46e.0b55706350e94ef8b49e8647a97ae1b7'
    chatroom_id = '10545642'

    def send_kakao_work_message(app_key, chatroom_id, file_url, batch):
        url = "https://api.kakaowork.com/v1/messages.send"
        headers = {
            "Authorization": f"Bearer {app_key}",
            "Content-Type": "application/json"
        }
        data = {
            "conversation_id": chatroom_id,
            "text": f"{batch} - 통합 송장 수집 완료",
            "blocks": [
                {
                    "type": "header",
                    "text": f"{batch} - 통합 송장 수집 완료",
                    "style": "blue"
                },
                {
                    "type": "text",
                    "text": "아래 링크에서 파일을 다운로드하세요!",
                    "markdown": True
                },
                {
                    "type": "button",
                    "text": "파일 다운로드",
                    "style": "default",
                    "action_type": "open_system_browser",
                    "value": file_url
                },
                {
                    "type": "divider"
                },
                {
                    "type": "description",
                    "term": "송장개수",
                    "content": {
                        "type": "text",
                        "text": str(unique_count),
                        "markdown": False
                    },
                    "accent": True
                },
                {
                    "type": "divider"
                },
            ]
        }
        response = requests.post(url, headers=headers, json=data)
        return response.json()

    result = send_kakao_work_message(app_key, chatroom_id, shared_link_metadata.url, batch)
    print(result)

except mysql.connector.Error as error:
    print(f"데이터베이스 오류 발생: {error}")

finally:
    if connection.is_connected():
        cursor.close()
        connection.close()
        print("데이터베이스 연결이 종료되었습니다.")
